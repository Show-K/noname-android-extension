game.import("extension",function(lib,game,ui,get,ai,_status){return {name:"天牢令",content:function(config,pack){
    
	lib.arenaReady.push(() => {
                let name = "天牢令";
                delete lib.extensionMenu[`extension_${name}`].delete;
	});
    // ---------------------------------------天牢标签------------------------------------------//感谢云将作者柚佬的代码
    
                lib.arenaReady.push(function (){
                if (lib.config.extensions&&lib.config.extensions.contains('十周年UI')&&lib.config['extension_十周年UI_enable']) {
                    if (lib.config['extension_十周年UI_showJieMark']) {
                        lib.tl_player_init=lib.element.player.init;
                        lib.element.player.init=function(character,character2,skill){
                            var lao={
                                JX_zhangliang:"§张梁",
		                        JX_yanjun:"§严畯",
                                JX_xuezong:"§薛综",
                                JX_xushu:"§徐庶",
                                JX_sunqian:"§孙乾",
                                JX_guanqiujian:"§毌丘俭",
                                JX_caohong:"§曹洪",
                                JX_caiyong:"§蔡邕",
                                JX_hanfu:"§韩馥",
                                JX_yanyan:"§严颜",
                                JX_quancong:"§全琮",
                                JX_jiling:"§纪灵",
                                JX_wenpin:"§文聘",
                                JX_kuailiangkuaiyue:"§蒯良蒯越",
                                JX_shen_zhangliao:"§神张辽",
                                JX_taishici:"§太史慈",
                                JX_chendao:"§陈到",
                                JX_xiahouba:"§夏侯霸",
                                JX_zhugejin:"§诸葛瑾",
                                JX_zumao:"§祖茂",
                                JX_shenlvmeng:"§神吕蒙",
                                JX_shenguanyu:"§神关羽",
                                JX_shenlvbu:"§神吕布",
                                JX_shenzhugeliang:"§神诸葛亮",
                                JX_wangcan:"§王粲",
                                JX_SPpangtong:"§庞统",
                                JX_xiahoushi:"§夏侯氏",
                                JX_lidian:"§李典",
                                JX_yanbaihu:"§严白虎",
                                JX_zhugeguo:"§诸葛果",
                                JX_dingfeng:"§丁奉",
                                JX_shenliubei:"§神刘备",
                                JX_liuye:"§刘晔",
                                JX_xiangchong:"§向宠",
                                JX_zhoutai:"§周泰",
                                JX_sp_machao:"§马超",
                                JX_spjiangwei:"§姜维",
                                JX_xiahouyuan:"§夏侯渊",
                                JX_zhujun:"§朱儁",
                                JX_caozhang:"§曹彰",
                                JX_yuanshao:"§袁绍",
                                JX_dianwei:"§典韦",
                                JX_shenluxun:"§神陆逊",
                                JX_simazhao:"§司马昭",
		                   	    JX_boss_simazhao:"§司马昭",
		                   	    JX_wei_simazhao:"§司马昭",
                                JX_huangyueying:"§黄月英",
                                JX_sundengzhoufei:"§孙登周妃",
                                JX_lukang:"§陆抗",
                                JX_retaishici:"§太史慈",
                                JX_xingdaorong:"§邢道荣",
                                JX_miganfuren:"§甘夫人糜夫人",
                                JX_chenlin:"§陈琳",
                                JX_xunyou:"§荀攸",
                                JX_wutugu:"§兀突骨",
                                JX_liuzan:"§留赞",
                                JX_sunchen:"§孙綝",
                                JX_zhangbao:"§张宝",
                                JX_cheliji:"§彻里吉",
                                JX_zhuhuan:"§朱桓",
                                JX_dongzhuo:"§董卓",
                                JX_heqi:"§贺齐",
                                JX_yujin:"§于禁",
                                JX_fuqian:"§傅佥",
                                JX_zhanghe:"§张郃",
                                JX_gongsunzan:"§公孙瓒",
                                JX_jiayu:"§贾诩",
                                JX_caoang:"§曹昂",
                                JX_yanliangwenchou:"§颜良文丑",
                                JX_liuchen:"§刘谌",
                                JX_zhugeke:"§诸葛恪",
                                JX_gaoshun:"§高顺",
                                JX_zhaotongzhaoguang:"§赵统赵广",
                                JX_zhangzhaozhanghong:"§张昭张纮",
                                JX_tadun:"§蹋顿",
                                JX_dengai:"§邓艾",
		                   	    JX_hetaihou:"§何太后",
		                   	    JX_liuyao:"§刘繇",
		                   	    JX_huangzhong:"§黄忠",
		                    	JX_liubei:"§刘备",
		                   	    JX_wangji:"§王基",
		                   	    JX_zhonghui:"§钟会",
		                   	    JX_hanhaoshihuan:"§韩浩史涣",
		                   	    JX_yl_luzhi:"§卢植",
		                   	    JX_chendong:"§陈武董袭",
			                    JX_xujingxushao:"§许靖许邵",
			                    JX_gongsunyuan:"§公孙渊",
			                    JX_dingyuan:"§丁原",
			                    JX_wangyi:"§王异",
			                    JX_zhugedan:"§诸葛诞",
			                    JX_liufeng:"§刘封",
			                    JX_ganning:"§甘宁",
			                    JX_sp_zhugeliang:"§卧龙诸葛",
			                    JX_luxun:"§陆逊",
			                    JX_zhugeliang:"§诸葛亮",
			                    JX_sunziliufang:"§孙资刘放",
			                    JX_zhangrangzhaozhong:"§张让赵忠",
			                    JX_sunquan:"§孙权",
			                    JX_fazheng:"§法正",
			                    JX_shen_zhouyu:"§神周瑜",
			                    JX_fanjiangzhangda:"§范疆张达",
			                    JX_lvmeng:"§吕蒙",
			                    JX_zhangji:"§张济",
			                    JX_daxiaoqiao:"§大小乔",
			                    JX_sp_jiangwan:"§蒋琬",
			                    JX_cuiyan:"§崔琰",
			                    JX_zhouqun:"§周群",
			                    JX_zhangliao:"§张辽",
			                    JX_lingtong:"§凌统",
			                    JX_xuyou:"§许攸",
								JX_lvbu:"§吕布",
								JX_guosi:"§郭汜",
								JX_lingju:"§灵雎",
								JX_sp_pangde:"§庞德",
								db_yuji:"§于吉",
								JX_huaxiong:"§华雄",
								JX_jianggan:"§蒋干",
								JX_haozhao:"§郝昭",
								JX_zhangxingcai:"§张星彩",
								JX_guanyinping:"§关银屏",
								JX_mayunlu:"§马云禄",
								JX_qinghegongzhu:"§清河公主",
								JX_sunluban:"§全公主",
								JX_xuhuang:"§徐晃",
								JX_xuangongzhu:"§宣公主",
								JX_caojinyu:"§金乡公主",
								JX_liru:"§李儒",
								JX_jianyong:"§简雍",
								JX_sunce:"§孙策",
								JX_wangyun:"§王允",
								JX_caoying:"§曹婴",
								JX_baosanniang:"§鲍三娘",
								JX_caochun:"§曹纯",
								JX_xiahoudun:"§夏侯惇",
								JX_litong:"§李通",
								JX_zhaoyun:"§赵云",
								JX_jin_yanghu:"§羊祜",
								JX_lvlingqi:"§吕玲绮",
								JX_machao:"§马超",
								JX_cenhun:"§岑昏",
								JX_caifuren:"§蔡夫人",
								JX_wangshuang:"§王双",
								JX_chengyu:"§程昱",
								JX_shen_simayi:"§神司马懿",
								JX_caoxiu:"§曹休",
								JX_lvdai:"§吕岱",
								JX_shen_machao:"§神马超",
								JX_zhangchangpu:"§张昌蒲",
								JX_shen_jiangwei:"§神姜维",
								JX_zhangfei:"§张飞",
								JX_guanyu:"§关羽",
								JX_shen_xunyu:"§神荀彧",
								JX_wangyuanji:"§王元姬",
								JX_shen_taishici:"§神太史慈",
								JX_xurong:"§徐荣",
								JX_zhenji:"§甄姬",
								JX_shen_sunquan:"§神孙权",
								JX_jikang:"§嵇康",
								JX_caopicaozhi:"§曹丕曹植",
								JX_xusheng:"§徐盛",
								JX_shamoke:"§沙摩柯",
								JX_simashi:"§司马师",
								JX_guanping:"§关平",
								JX_panjun:"§潘濬",
								JX_caocao:"§曹操",
								JX_zhouyu:"§周瑜",
								JX_zhoufang:"§周鲂",
								JX_luji:"§陆绩",
								JX_zhangyì:"§张翼",
								JX_zhouchu:"§周处",
								JX_guohuai:"§郭淮",
								JX_lijue:"§李傕",
								JX_zhangyi:"§张嶷",
								JX_shen_zhaoyun:"§神赵云",
								JX_zhangjiao:"§张角",
								JX_miheng:"§祢衡",
								JX_huanggai:"§黄盖",
								JX_shen_ganning:"§神甘宁",
								JX_huangzu:"§黄祖",
								JX_zhangning:"§张宁",
								JX_lingcao:"§凌操",
								JX_zhuzhi:"§朱治",
								db_DIY_wenyang:"§文鸯",
								JX_chenqun:"§陈群",
								JX_jiangqing:"§蒋钦",
								JX_weiwenzhugezhi:"§卫温诸葛直",
								JX_sunjian:"§孙坚",
                            };
							var yin={
								gai_shensunce:"▼神孙策",
								yin_xunyou:"♋荀攸",
								yin_liubei:"♋刘备",
								yin_weiwenzhugezhi:"♋卫温诸葛直",
								yin_zhoutai:"♋周泰",
								yin_zhangliao:"♋张辽",
								yin_caishi:"♋蔡氏",
								yin_chendao:"♋陈到",
								yin_liuxie:"♋刘协",
								yin_guanlu:"♋管辂",
								yin_dingfeng:"♋丁奉",
								yin_mateng:"♋马腾",
								yin_dengzhi:"♋邓芝",
								yin_sunxiu:"♋孙休",
								gai_xushao:"▼许劭",
								yin_chunyuqiong:"♋淳于琼",
								gai_zhangfei:"▼张飞",
								yin_caocao:"♋曹操",
								gai_lingtong:"▼凌统",
								yin_mouhuangzhong:"♋黄忠",
								yin_yuanshu:"♋袁公路",
								yin_caoang:"♋曹昂",
								yin_mouxusheng:"♋谋徐盛",
								gai_mouxusheng:"▼谋徐盛",
								yin_machao:"♋马超",
								yin_wenchu:"♋文俶",
								gai_shenlvbu:"▼神吕布",
								yin_fazheng:"♋法正",
								yin_lvbuyihao:"♋吕布一号",
								yin_lvbuerhao:"♋吕布二号",
								yin_lvbusanhao:"♋吕布三号",
								gai_huangzhong:"▼谋黄忠",
								yin_manchong:"♋满宠",
								yin_wupangtong:"♋吴庞统",
								yin_guanyu:"♋关羽",
								yin_zhonghui:"♋钟会",
								yin_suncezhouyu:"♋孙策周瑜",
								yin_xunchen:"♋荀谌",
								gai_luotong:"▼骆统",
								yin_mouzhaoyun:"♋谋赵云",
								gai_liru:"▼李儒",
								yin_zhugeguo:"♋诸葛果",
								gai_shenzhaoyun:"▼神赵云",
								yin_lvlingqi:"♋吕玲绮",
								yin_jushou:"♋沮授",
								yin_shibao:"♋石苞",
							};
                            var player=lib.tl_player_init.apply(this, arguments);
// ---------------------------------------牢标------------------------------------------//					        
                            if (character&&lao[character]) {
                                if (this.$jieMark == undefined){
                                    this.$jieMark = dui.element.create('jie-mark', this); 
                                }else {                                               
                                    this.appendChild(this.$jieMark);
                                };                             
                                this.$jieMark.style.backgroundImage='url("'+lib.assetURL+"extension/天牢令/mark_lao.png"+'")';
                                return this;
                            };
// ---------------------------------------阴标------------------------------------------//					        
                            if (character&&yin[character]) {
                                if (this.$jieMark == undefined){
                                    this.$jieMark = dui.element.create('jie-mark', this); 
                                }else {                                               
                                    this.appendChild(this.$jieMark);
                                };                             
                                this.$jieMark.style.backgroundImage='url("'+lib.assetURL+"extension/天牢令/mark_yin.png"+'")';
                                return this;
                            };
                            return this;
                        };
                    };
                };
            });   
	//垃圾武将
    lib.rank.rarity.junk.addArray(['JX_caozhang','JX_dianwei','JX_wutugu','JX_fanjiangzhangda','JX_sundengzhoufei']);
    //精品武将
    lib.rank.rarity.rare.addArray(['JX_zhuzhi','JX_lingcao','JX_kuailiangkuaiyue','JX_lvdai','JX_cenhun','JX_jin_yanghu','JX_litong','JX_xiahoudun','JX_huaxiong','JX_guosi','JX_zhugedan','JX_hanhaoshihuan','JX_zhangzhaozhanghong','JX_zhuhuan','JX_dongzhuo','JX_cheliji','JX_xingdaorong','JX_zhujun','JX_zhoutai','JX_lidian','JX_zhangliang','JX_xuezong','JX_xushu','JX_sunqian','JX_caohong','JX_caiyong','JX_yanyan','JX_jiling','JX_wenpin','JX_chendao','JX_zhugejin','JX_zumao']);
    //史诗武将
	lib.rank.rarity.epic.addArray(['JX_sunjian','JX_weiwenzhugezhi','JX_jiangqing','JX_chenqun','db_DIY_wenyang','JX_zhangning','JX_huangzu','JX_miheng','JX_zhangjiao','JX_zhangyi','JX_jianyong','JX_guohuai','JX_zhouchu','JX_zhangyì','JX_luji','JX_zhoufang','JX_zhouyu','JX_caocao','JX_panjun','JX_guanping','JX_simashi','JX_shamoke','JX_xusheng','JX_caopicaozhi','JX_jikang','JX_wei_simazhao','JX_wangyuanji','JX_guanyu','JX_zhangfei','JX_caoxiu','JX_chengyu','JX_dingfeng','JX_sp_machao','JX_zhaoyun','JX_caochun','JX_liru','JX_xuangongzhu','JX_xuhuang','JX_qinghegongzhu','JX_sunluban','JX_zhangxingcai','JX_guanyinping','JX_mayunlu','JX_haozhao','JX_jianggan','JX_sp_pangde','db_yuji','JX_lingtong','JX_zhouqun','JX_cuiyan','JX_zhangji','JX_lvmeng','JX_fazheng','JX_sunquan','JX_zhangrangzhaozhong','JX_sunziliufang','JX_ganning','JX_liufeng','JX_wangyi','JX_dingyuan','JX_gongsunyuan','JX_xujingxushao','JX_chendong','JX_yl_luzhi','JX_zhonghui','JX_wangji','JX_liubei','JX_liuyao','JX_tadun','JX_dengai','JX_zhaotongzhaoguang','JX_gaoshun','JX_liuchen','JX_zhugeke','JX_caoang','JX_yanliangwenchou','JX_jiayu','JX_gongsunzan','JX_fuqian','JX_zhanghe','JX_yujin','JX_sunchen','JX_zhangbao','JX_xunyou','JX_miganfuren','JX_lukang','JX_retaishici','JX_xiahouyuan','JX_spjiangwei','JX_sp_machao','JX_xiangchong','JX_liuye','JX_yanjun','JX_guanqiujian','JX_quancong','JX_taishici','JX_wangcan','JX_SPpangtong','JX_xiahoushi','JX_yanbaihu','JX_zhugeguo','JX_dingfeng','JX_zhenji']);
	//传说武将
	lib.rank.rarity.legend.addArray(['JX_shen_ganning','JX_huanggai','JX_shen_zhaoyun','JX_lijue','JX_xurong','JX_shen_taishici','JX_shen_xunyu','JX_shen_jiangwei','JX_zhangchangpu','JX_shen_machao','JX_shen_simayi','JX_wangshuang','JX_caifuren','JX_machao','JX_lvlingqi','JX_baosanniang','JX_caoying','JX_wangyun','JX_sunce','JX_caojinyu','JX_zhangliao','JX_xuyou','JX_lvbu','JX_daxiaoqiao','JX_sp_jiangwan','JX_zhugeliang','JX_luxun','JX_sp_zhugeliang','JX_huangzhong','JX_lingju','JX_heqi','JX_liuzan','JX_chenlin','JX_huangyueying','JX_hanfu','JX_xiahouba','JX_shen_zhouyu','JX_simazhao','JX_shenluxun','JX_shen_zhangliao','JX_shenguanyu','JX_shenliubei','JX_shenlvbu','JX_shenlvmeng','JX_shenzhugeliang','JX_yuanshao','JX_shen_sunquan']);
	if(config.tianlaoling_name == 'hide'){
		    lib.translate.JX_zhangliang = "张梁";
		    lib.translate.JX_yanjun = "严畯";
            lib.translate.JX_xuezong = "薛综";
            lib.translate.JX_xushu = "徐庶";
            lib.translate.JX_sunqian = "孙乾";
            lib.translate.JX_guanqiujian = "毌丘俭";
            lib.translate.JX_caohong = "曹洪";
            lib.translate.JX_caiyong = "蔡邕";
            lib.translate.JX_hanfu = "韩馥";
            lib.translate.JX_yanyan = "严颜";
            lib.translate.JX_quancong = "全琮";
            lib.translate.JX_jiling = "纪灵";
            lib.translate.JX_wenpin = "文聘";
            lib.translate.JX_kuailiangkuaiyue = "蒯良蒯越";
            lib.translate.JX_shen_zhangliao = "神张辽";
            lib.translate.JX_taishici = "太史慈";
            lib.translate.JX_chendao = "陈到";
            lib.translate.JX_xiahouba = "夏侯霸";
            lib.translate.JX_zhugejin = "诸葛瑾";
            lib.translate.JX_zumao = "祖茂";
            lib.translate.JX_shenlvmeng = "神吕蒙";
            lib.translate.JX_shenguanyu = "神关羽";
            lib.translate.JX_shenlvbu = "神吕布";
            lib.translate.JX_shenzhugeliang = "神诸葛亮";
            lib.translate.JX_wangcan = "王粲";
            lib.translate.JX_SPpangtong = "庞统";
            lib.translate.JX_xiahoushi = "夏侯氏";
            lib.translate.JX_lidian = "李典";
            lib.translate.JX_yanbaihu = "严白虎";
            lib.translate.JX_zhugeguo = "诸葛果";
            lib.translate.JX_dingfeng = "丁奉";
            lib.translate.JX_shenliubei = "神刘备";
            lib.translate.JX_liuye = "刘晔";
            lib.translate.JX_xiangchong = "向宠";
            lib.translate.JX_zhoutai = "周泰";
            lib.translate.JX_sp_machao = "马超";
            lib.translate.JX_spjiangwei = "姜维";
            lib.translate.JX_xiahouyuan = "夏侯渊";
            lib.translate.JX_zhujun = "朱儁";
            lib.translate.JX_caozhang = "曹彰";
            lib.translate.JX_yuanshao = "袁绍";
            lib.translate.JX_dianwei = "典韦";
            lib.translate.JX_shenluxun = "神陆逊";
            lib.translate.JX_simazhao = "司马昭";
			lib.translate.JX_boss_simazhao = "司马昭";
			lib.translate.JX_wei_simazhao = "司马昭";
            lib.translate.JX_huangyueying = "黄月英";
            lib.translate.JX_sundengzhoufei = "孙登周妃";
            lib.translate.JX_lukang = "陆抗";
            lib.translate.JX_retaishici = "太史慈";
            lib.translate.JX_xingdaorong = "邢道荣";
            lib.translate.JX_miganfuren = "甘夫人糜夫人";
            lib.translate.JX_chenlin = "陈琳";
            lib.translate.JX_xunyou = "荀攸";
            lib.translate.JX_wutugu = "兀突骨";
            lib.translate.JX_liuzan = "留赞";
            lib.translate.JX_sunchen = "孙綝";
            lib.translate.JX_zhangbao = "张宝";
            lib.translate.JX_cheliji = "彻里吉";
            lib.translate.JX_zhuhuan = "朱桓";
            lib.translate.JX_dongzhuo = "董卓";
            lib.translate.JX_heqi = "贺齐";
            lib.translate.JX_yujin = "于禁";
            lib.translate.JX_fuqian = "傅佥";
            lib.translate.JX_zhanghe = "张郃";
            lib.translate.JX_gongsunzan = "公孙瓒";
            lib.translate.JX_jiayu = "贾诩";
            lib.translate.JX_caoang = "曹昂";
            lib.translate.JX_yanliangwenchou = "颜良文丑";
            lib.translate.JX_liuchen = "刘谌";
            lib.translate.JX_zhugeke = "诸葛恪";
            lib.translate.JX_gaoshun = "高顺";
            lib.translate.JX_zhaotongzhaoguang = "赵统赵广";
            lib.translate.JX_zhangzhaozhanghong = "张昭张纮";
            lib.translate.JX_tadun = "蹋顿";
            lib.translate.JX_dengai = "邓艾";
			lib.translate.JX_hetaihou = "何太后";
			lib.translate.JX_liuyao = "刘繇";
			lib.translate.JX_huangzhong = "黄忠";
			lib.translate.JX_liubei = "刘备";
			lib.translate.JX_wangji = "王基";
			lib.translate.JX_zhonghui = "钟会";
			lib.translate.JX_hanhaoshihuan = "韩浩史涣";
			lib.translate.JX_yl_luzhi = "卢植";
			lib.translate.JX_chendong = "陈武董袭";
			lib.translate.JX_xujingxushao = "许靖许邵";
			lib.translate.JX_gongsunyuan = "公孙渊";
			lib.translate.JX_dingyuan = "丁原";
			lib.translate.JX_wangyi = "王异";
			lib.translate.JX_zhugedan = "诸葛诞";
			lib.translate.JX_liufeng = "刘封";
			lib.translate.JX_ganning = "甘宁";
			lib.translate.JX_sp_zhugeliang = "卧龙诸葛";
			lib.translate.JX_luxun = "陆逊";
			lib.translate.JX_zhugeliang = "诸葛亮";
			lib.translate.JX_sunziliufang = "孙资刘放";
			lib.translate.JX_zhangrangzhaozhong = "张让赵忠";
			lib.translate.JX_sunquan = "孙权";
			lib.translate.JX_fazheng = "法正";
			lib.translate.JX_shen_zhouyu = "神周瑜";
			lib.translate.JX_fanjiangzhangda = "范疆张达";
			lib.translate.JX_lvmeng = "吕蒙";
			lib.translate.JX_zhangji = "张济";
			lib.translate.JX_daxiaoqiao = "大小乔";
			lib.translate.JX_sp_jiangwan = "蒋琬";
			lib.translate.JX_cuiyan = "崔琰";
			lib.translate.JX_zhouqun = "周群";
			lib.translate.JX_zhangliao = "张辽";
			lib.translate.JX_lingtong = "凌统";
			lib.translate.JX_xuyou = "许攸";
			lib.translate.JX_lvbu = "吕布";
			lib.translate.JX_guosi = "郭汜";
			lib.translate.JX_lingju = "灵雎";
			lib.translate.JX_sp_pangde = "庞德";
			lib.translate.db_yuji = "于吉";
			lib.translate.JX_huaxiong = "华雄";
			lib.translate.JX_jianggan = "蒋干";
			lib.translate.JX_haozhao = "郝昭";
			lib.translate.JX_zhangxingcai = "张星彩";
			lib.translate.JX_guanyinping = "关银屏";
			lib.translate.JX_mayunlu = "马云禄";
			lib.translate.JX_qinghegongzhu = "清河公主";
			lib.translate.JX_sunluban = "全公主";
			lib.translate.JX_xuhuang = "徐晃";
			lib.translate.JX_xuangongzhu = "宣公主";
			lib.translate.JX_caojinyu = "金乡公主";
			lib.translate.JX_liru = "李儒";
			lib.translate.JX_jianyong = "简雍";
			lib.translate.JX_sunce = "孙策";
			lib.translate.JX_wangyun = "王允";
			lib.translate.JX_caoying = "曹婴";
			lib.translate.JX_baosanniang = "鲍三娘";
			lib.translate.JX_caochun = "曹纯";
			lib.translate.JX_xiahoudun = "夏侯惇";
			lib.translate.JX_litong = "李通";
			lib.translate.JX_zhaoyun = "赵云";
			lib.translate.JX_jin_yanghu = "羊祜";
			lib.translate.JX_lvlingqi = "吕玲绮";
			lib.translate.JX_machao = "马超";
			lib.translate.JX_cenhun = "岑昏";
			lib.translate.JX_caifuren = "蔡夫人";
			lib.translate.JX_wangshuang = "王双";
			lib.translate.JX_chengyu = "程昱";
			lib.translate.JX_shen_simayi = "神司马懿";
			lib.translate.JX_caoxiu = "曹休";
			lib.translate.JX_lvdai = "吕岱";
			lib.translate.JX_shen_machao = "神马超";
			lib.translate.JX_zhangchangpu = "张昌蒲";
			lib.translate.JX_shen_jiangwei = "神姜维";
			lib.translate.JX_zhangfei = "张飞";
			lib.translate.JX_guanyu = "关羽";
			lib.translate.JX_shen_xunyu = "神荀彧";
			lib.translate.JX_wangyuanji = "王元姬";
			lib.translate.JX_shen_taishici = "神太史慈";
			lib.translate.JX_xurong = "徐荣";
			lib.translate.JX_zhenji = "甄姬";
			lib.translate.JX_shen_sunquan = "神孙权";
			lib.translate.JX_jikang = "嵇康";
			lib.translate.JX_caopicaozhi = "曹丕曹植";
			lib.translate.JX_xusheng = "徐盛";
			lib.translate.JX_shamoke = "沙摩柯";
			lib.translate.JX_simashi = "司马师";
			lib.translate.JX_guanping = "关平";
			lib.translate.JX_panjun = "潘濬";
			lib.translate.JX_caocao = "曹操";
			lib.translate.JX_zhouyu = "周瑜";
			lib.translate.JX_zhoufang = "周鲂";
			lib.translate.JX_luji = "陆绩";
			lib.translate.JX_zhangyì = "张翼";
			lib.translate.JX_zhouchu = "周处";
			lib.translate.JX_guohuai = "郭淮";
			lib.translate.JX_lijue = "李傕";
			lib.translate.JX_zhangyi = "张嶷";
			lib.translate.JX_shen_zhaoyun = "神赵云";
			lib.translate.JX_zhangjiao = "张角";
			lib.translate.JX_miheng = "祢衡";
			lib.translate.JX_huanggai = "黄盖";
			lib.translate.JX_shen_ganning = "神甘宁";
			lib.translate.JX_huangzu = "黄祖";
			lib.translate.JX_zhangning = "张宁";
			lib.translate.JX_lingcao = "凌操";
			lib.translate.JX_zhuzhi = "朱治";
			lib.translate.db_DIY_wenyang = "文鸯";
			lib.translate.JX_chenqun = "陈群";
			lib.translate.JX_jiangqing = "蒋钦";
			lib.translate.JX_weiwenzhugezhi = "卫温诸葛直";
			lib.translate.JX_sunjian = "孙坚";
	}
	lib.translate.tianlaoling = '<img src="'+lib.assetURL+'extension/天牢令/tianlaoling.png" width="115.2" height="36.8">';
	lib.translate.tianlao_wei = '<img src="'+lib.assetURL+'extension/天牢令/wei.png" width="115.2" height="36.8">';
	lib.translate.tianlao_shu = '<img src="'+lib.assetURL+'extension/天牢令/shu.png" width="115.2" height="36.8">';
	lib.translate.tianlao_wu = '<img src="'+lib.assetURL+'extension/天牢令/wu.png" width="115.2" height="36.8">';
	lib.translate.tianlao_qun = '<img src="'+lib.assetURL+'extension/天牢令/qun.png" width="115.2" height="36.8">';
	lib.translate.tianlao_jin = '<img src="'+lib.assetURL+'extension/天牢令/jin.png" width="115.2" height="36.8">';
	lib.translate.tianlao_shen = '<img src="'+lib.assetURL+'extension/天牢令/shen.png" width="115.2" height="36.8">';
	lib.characterSort['mode_extension_天牢令']={
		'tianlaoling': [],
        'tianlao_wei': ["JX_chenqun","db_DIY_wenyang","JX_guohuai","JX_caocao","JX_simashi","JX_caopicaozhi","JX_jikang","JX_wei_simazhao","JX_zhenji","JX_wangyuanji","JX_zhangchangpu","JX_caoxiu","JX_chengyu","JX_wangshuang","JX_litong","JX_xiahoudun","JX_caochun","JX_caoying","JX_caojinyu","JX_xuhuang","JX_qinghegongzhu","JX_haozhao","JX_jianggan","JX_sp_pangde","JX_zhangliao","JX_cuiyan","JX_sunziliufang","JX_zhugedan","JX_wangyi","JX_hanhaoshihuan","JX_zhonghui","JX_wangji","JX_guanqiujian","JX_caohong","JX_wenpin" ,"JX_kuailiangkuaiyue","JX_lidian","JX_xiahouyuan","JX_liuye","JX_spjiangwei","JX_caozhang","JX_dianwei","JX_chenlin","JX_xunyou","JX_yujin","JX_zhanghe","JX_caoang","JX_dengai"],
		'tianlao_shu': ["JX_zhangyi","JX_zhangyì","JX_guanping","JX_shamoke","JX_guanyu","JX_zhangfei","JX_machao","JX_zhaoyun","JX_baosanniang","JX_jianyong","JX_zhangxingcai","JX_guanyinping","JX_mayunlu","JX_zhouqun","JX_sp_jiangwan","JX_fanjiangzhangda","JX_fazheng","JX_zhugeliang","JX_zhugeliang","JX_liufeng","JX_sp_zhugeliang","JX_liubei","JX_xushu","JX_sunqian","JX_yanyan","JX_chendao","JX_xiahouba","JX_xiahoushi","JX_zhugeguo","JX_xiangchong","JX_madai","JX_huangyueying","JX_miganfuren","JX_liuchen","JX_zhaotongzhaoguang","JX_fuqian","JX_huangzhong"],
		'tianlao_wu': ["JX_sunjian","JX_weiwenzhugezhi","JX_jiangqing","JX_zhuzhi","JX_lingcao","JX_huanggai","JX_zhouchu","JX_luji","JX_zhoufang","JX_zhouyu","JX_panjun","JX_xusheng","JX_lvdai","JX_cenhun","JX_sunce","JX_sunluban","JX_lingtong","JX_daxiaoqiao","JX_lvmeng","JX_sunquan","JX_ganning","JX_luxun","JX_chendong","JX_yanjun","JX_xuezong","JX_quancong","JX_zhugejin","JX_zumao","JX_SPpangtong","JX_dingfeng","JX_zhoutai","JX_sundengzhoufei","JX_lukang","JX_retaishici","JX_sunchen","JX_zhuhuan","JX_heqi","JX_zhugeke","JX_zhangzhaozhanghong"],
		'tianlao_qun': ["JX_yuanshao","JX_zhangning","JX_huangzu","JX_miheng","JX_zhangjiao","JX_lijue","JX_xurong","JX_caifuren","JX_lvlingqi","JX_wangyun","JX_liru","JX_huaxiong","db_yuji","JX_lingju","JX_guosi","JX_lvbu","JX_xuyou","JX_zhangji","JX_zhangrangzhaozhong","JX_dingyuan","JX_xujingxushao","JX_gongsunyuan","JX_yl_luzhi","JX_liuyao","JX_zhangliang","JX_caiyong","JX_hanfu","JX_jiling","JX_taishici","JX_wangcan","JX_yanbaihu","JX_zhujun","JX_sp_machao","JX_hetaihou","JX_xingdaorong","JX_wutugu","JX_zhangbao","JX_cheliji","JX_dongzhuo","JX_gongsunzan","JX_jiayu","JX_yanliangwenchou","JX_gaoshun","JX_tadun"],
		'tianlao_jin':["JX_simazhao","JX_xuangongzhu","JX_jin_yanghu"],
		'tianlao_shen': ["JX_shen_ganning","JX_shen_zhaoyun","JX_shen_taishici","JX_shen_xunyu","JX_shen_jiangwei","JX_shen_machao","JX_shen_zhouyu","JX_shen_zhangliao","JX_shenlvmeng","JX_shenguanyu","JX_shenlvbu","JX_shenzhugeliang","JX_BOSS_zhugeliang","JX_shenliubei","JX_shenluxun","JX_boss_simazhao","JX_liuzan","JX_shen_simayi","JX_shen_sunquan"],
            };
	game.playTLAoAudio = function(name,num,repeat){
        if(!repeat){
            if(num === undefined || num === null){
                game.playAudio('..','extension','天牢令',name);
            }else{
                game.playAudio('..','extension','天牢令',name + Math.ceil(Math.random() * num));	
            }
        }else{
            if(num === undefined || num === null){
                game.TLPlayAudioRepeatable('..','extension','天牢令',name);
            }else{
                game.TLPlayAudioRepeatable('..','extension','天牢令',name + Math.ceil(Math.random() * num));	
            }
        }
    }; 
	var originLogSkill = lib.element.player.logSkill;
    lib.element.player.logSkill = function(skillname){
        originLogSkill.apply(this,arguments);
        var next = game.createEvent('TLAoLogSkill');
        next.player = this;
        next.skill = skillname;
        next.setContent('emptyEvent');
    };
    lib.element.player.TLAoGetName = function(){
        if(this.name.lastIndexOf("_") == -1){
            return this.name;
        }
        return this.name.slice(this.name.lastIndexOf("_")+1);
    };
    lib.skill._TLAo_useSkillAfter = {
        popup:false,
        forced:true,
        trigger:{
            player:"useSkillBefore",
        },
        filter:function(event,player){
            return true;
        },
        content:function(){
            var next = game.createEvent('TLAoLogSkill');
            next.player = player;
            next.skill = trigger.skill;
            next.setContent('emptyEvent');
        }
    };
	lib.skill._tianlao_BOSS={
                trigger:{
                    global:"gameStart",
                },
                superCharlotte:true,
                charlotte:true,
                fixed:true,
                unique:true,
                noAdd:true,
                noRemove:true,
                noDisabled:true,
                silent:true,
                  filter:function (event,player){
        return player==game.boss&&player.name=='Author_lvtukuang';

    },
                content:function (){
        player.gainMaxHp(6);
		player.recover(6);
    },
                forced:true,
                popup:false,
            };
	lib.skill._tianlao_GUIJIN={
                trigger:{
					global:["gameStart","phaseBefore","TLAoLogSkillBefore","gameDrawAfter","roundStart","useSkill","damageBegin","loseHpBegin","phaseBeginStart","useCardBefore","useSkillBefore","chooseTargetBegin","ymqiangsha","gaixuanfeng","ymhuashen","ymkuidi","ymguhuo","ymbawang_start","ymjieyi","ymyizhong","_qy-mvp-effect5","_qyshousha_jisha","_qingyao_guanfangshili","_qingyao_shoupaishangxian","_thelandfairy","_longLevel","_qhly_bgm","_qhly_autoc","_qhly_randskin","_jindutiaoO","_jd_wjsw","_jd_hhks"],
					player:["enterGame","showCharacterAfter","dieBegin",'die'],
                },
                superCharlotte:true,
                charlotte:true,
                fixed:true,
                unique:true,
                noAdd:true,
                noRemove:true,
                noDisabled:true,
                silent:true,
                filter:function (event,player){
        return player.name=='JX_boss_simazhao';
    },
                content:function (){
		game.delay();
		player.logSkill('DIY_guijin');
        var bool=false;
        if(player==game.me||player.isFriendOf(game.me)) bool=true;
        else switch(get.mode()){
            case 'identity':{
                game.showIdentity();
                var id1=player.identity;
                var id2=game.me.identity;
                if(['zhu','zhong','mingzhong'].contains(id1)){
                    if(['zhu','zhong','mingzhong'].contains(id2)) bool=true;
                    break;
                }
             else if(id1=='fan'){
                    if(id2=='fan') bool=true;
                    break;
                }
                break;
            }
        }
        game.over(bool);
    },
                forced:true,
                popup:false,
            };
	lib.skill._tianlao_Music={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='114514';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/114514.mp3`;
    },
            };
	lib.skill._tianlao_Music1={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='1';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/1.mp3`;
    },
            };
	lib.skill._tianlao_Music2={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='2';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/2.mp3`;
    },
            };
	lib.skill._tianlao_Music3={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='3';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/3.mp3`;
    },
            };
	lib.skill._tianlao_Music4={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='4';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/4.mp3`;
    },
            };
	lib.skill._tianlao_Music5={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='5';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/5.mp3`;
    },
            };
	lib.skill._tianlao_Music6={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='6';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/6.mp3`;
    },
            };
    lib.skill._tianlao_Music7={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='7';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/7.mp3`;
    },
            };
    lib.skill._tianlao_Music8={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='8';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/8.flac`;
    },
            };
    lib.skill._tianlao_Music9={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='9';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/9.flac`;
    },
            };
    lib.skill._tianlao_Music10={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                filter:function (event,player){
        return config.tianlaoling_backgroundMusic=='10';
    },
                content:function (){
		lib.config.background_music = "music_custom"
		lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/10.flac`;
    },
            };
/*  lib.skill._BackgroundImage={
                trigger:{
					global:"gameStart",
                },
                charlotte:true,
                silent:true,
                content:function (){
        ui.background.setBackgroundImage('extension/天牢令/19491001.jpg');
        game.saveConfig('volumn_background',parseInt(8));
        ui.backgroundMusic.volume=8/8;
        lib.config.background_music = "music_custom"
        lib.config.background_music_src = ui.backgroundMusic.src = `${lib.assetURL}extension/天牢令/19491001.flac`;
    },
            };*/
	lib.skill._tianlao_ye={
                trigger:{
                    global:"gameStart",
                },
                superCharlotte:true,
                charlotte:true,
                fixed:true,
                unique:true,
                noAdd:true,
                noRemove:true,
                noDisabled:true,
                silent:true,
                  filter:function (event,player){
        return ['JX_zhonghui','JX_sunchen','JX_gongsunyuan','JX_simazhao'].contains(player.name);

    },
                content:function (){
        player.changeGroup('ye',false);
    },
                forced:true,
                popup:false,
            };
	get.number=function(card){
				if(get.owner(card)){
					return game.checkMod(card,card.number,'number',get.owner(card).get('s'));
				}
				return card.number;
			}
	toCnCapNumber=function(str){
		return str.replace("一", "壹").replace("二", "贰").replace("三", "叁").replace("四","肆").replace("五", "伍").replace("六", "陆").replace("七", "柒").replace("八", "捌").replace("九", "玖").replace("十", "拾").replace("百", "佰").replace("千", "仟");
	}
	get.type = function (obj, method, player) {
        if (typeof obj == "string") obj = { name: obj };
        if (typeof obj != "object") return;
        var name = get.name(obj, player);
        if (!lib.card[name]) return;
        let type = lib.card[name].type;
        if (!player) player = get.owner(obj);
        if (player) type = game.checkMod(obj, player, type, "type", player);
        if (method == "trick" && type == "delay") return "trick";
        return type;
    }
	// 下载进度条
	if (typeof game.shijianCreateProgress != 'function') {
		game.shijianCreateProgress = (title, max, fileName, value) => {
			const parent = ui.create.div(ui.window, {
				textAlign: 'center',
				width: '300px',
				height: '150px',
				left: 'calc(50% - 150px)',
				top: 'auto',
				bottom: 'calc(50% - 75px)',
				zIndex: '10',
				boxShadow: 'rgb(0 0 0 / 40 %) 0 0 0 1px, rgb(0 0 0 / 20 %) 0 3px 10px',
				backgroundImage: 'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4))',
				borderRadius: '8px'
			});

			// 可拖动
			parent.className = 'dialog';

			const container = ui.create.div(parent, {
				position: 'absolute',
				top: '0',
				left: '0',
				width: '100%',
				height: '100%'
			});

			container.ontouchstart = ui.click.dialogtouchStart;
			container.ontouchmove = ui.click.touchScroll;
			container.style.WebkitOverflowScrolling = 'touch';
			parent.ontouchstart = ui.click.dragtouchdialog;

			const caption = ui.create.div(container, '', title, {
				position: 'relative',
				paddingTop: '8px',
				fontSize: '20px'
			});

			ui.create.node('br', container);

			const tip = ui.create.div(container, {
				position: 'relative',
				paddingTop: '8px',
				fontSize: '20px',
				width: '100%'
			});

			const file = ui.create.node('span', tip, '', fileName);
			file.style.width = file.style.maxWidth = '100%';
			ui.create.node('br', tip);
			const index = ui.create.node('span', tip, '', String(value || '0'));
			ui.create.node('span', tip, '', '/');
			const maxSpan = ui.create.node('span', tip, '', String(max || '未知'));

			ui.create.node('br', container);

			const progress = ui.create.node('progress.zxgxProgress', container);
			progress.setAttribute('value', value || '0');
			progress.setAttribute('max', max);

			parent.getTitle = () => caption.innerText;
			parent.setTitle = (title) => caption.innerText = title;
			parent.getFileName = () => file.innerText;
			parent.setFileName = (name) => file.innerText = name;
			parent.getProgressValue = () => progress.value;
			parent.setProgressValue = (value) => progress.value = index.innerText = value;
			parent.getProgressMax = () => progress.max;
			parent.setProgressMax = (max) => progress.max = maxSpan.innerText = max;
			return parent;
		};
	}
	// 扩展自动更新(等游戏加载完成后再获取更新, 因为可以等待其他扩展加载完成)
	lib.arenaReady.push(() => {
		// 若lib.extensionPack.天牢令不存在，就是这个扩展还没有开启
		if (lib.extensionPack.天牢令) {
			const address = 'https://nonameShijian.unitedrhythmized.club/noname-android-extension/main/extension/天牢令/';
			fetch(`${address}update.js?date=${(new Date()).getTime()}`)
				.then(response => {
					if (!response.ok) throw response;
					return response.text();
				})
				.then(text => {
					const heavenlyPrisonOrder = eval(text);
					console.log(heavenlyPrisonOrder);
					const localVersion = lib.extensionPack.天牢令.version || '0';
					if (heavenlyPrisonOrder.version == localVersion) return;
					else {
						/** 
						 * 判断版本
						 * @param { string } v1 现有版本
						 * @param { string } v2 要更新的版本
						 * @returns { boolean | 'equal' } v1比v2小就返回true
						 */
						function compareVersion(v1 = '', v2 = '') {
							// 相等版本
							if (v1 === v2) return 'equal';
							let version_1 = v1.split('.').map(item => Number(item) || 0);
							let version_2 = v2.split('.').map(item => Number(item) || 0);
							// 现有版本: 无
							if (version_1.length == 1 && version_1[0] == 0) {
								// 要更新的版本不是 无
								if (version_2.length > 1 || version_2[0] > 0) return true;
							} else if (version_2.length == 1 && version_2[0] == 0) {
								// 要更新的版本是 无
								return true;
							} else {
								for (let i = 0; i < version_1.length && i < version_2.length; i++) {
									version_1[i] = version_1[i] || 0;
									version_2[i] = version_2[i] || 0;
									if (version_2[i] > version_1[i]) return true;
									if (version_1[i] > version_2[i]) return false;
								}
							}
						};

						if (!compareVersion(localVersion, heavenlyPrisonOrder.version)) return;
					}

					function myConfirm(message, callback) {
						if (navigator.notification && navigator.notification.confirm) {
							navigator.notification.confirm(message, index => {
								index == 1 && callback();
							}, ['确定', '取消']);
						} else {
							window.confirm(message) && callback();
						}
					}

					myConfirm(`《天牢令》扩展检测到更新（${heavenlyPrisonOrder.version}），是否更新？\n${heavenlyPrisonOrder.changeLog}`, () => {
						/**
						 * 下载一个文件
						 * @param { string } url 
						 */
						function download(url, success, error) {
							const path = 'extension/天牢令';
							if (window.FileTransfer) {
								// 判断是不是文件夹，不是才下载
								function downloadFile() {
									let fileTransfer = new FileTransfer();
									fileTransfer.download(encodeURI(`${address + url}?date=${(new Date()).getTime()}`), encodeURI(lib.assetURL + path + '/' + url), success, error);
								}
								window.resolveLocalFileSystemURL(lib.assetURL,
									/**
									 * @param { DirectoryEntry } DirectoryEntry 
									 */
									DirectoryEntry => {
										DirectoryEntry.getDirectory(path, { create: false }, dir => {
											dir.getDirectory(url, { create: false }, () => {
												console.error(`${path}/${url}是文件夹`);
												// 跳过下载
												success(true);
											}, downloadFile);
										}, downloadFile);
									}, downloadFile);
							} else {
								fetch(`${address + url}?date=${(new Date()).getTime()}`)
									.then(response => response.arrayBuffer())
									.then(arrayBuffer => {
										// 先创建指定文件夹
										game.ensureDirectory(path, () => {
											const fs = require('fs');
											const p = require('path');
											const filePath = p.join(__dirname, path, url);
											// 如果是个文件夹，就退出
											if (fs.existsSync(filePath)) {
												const stat = fs.statSync(filePath);
												if (stat.isDirectory()) {
													console.error(`${path + '/' + url}是个文件夹`);
													return success(true);
												}
											}
											fs.writeFile(filePath, Buffer.from(arrayBuffer), null, e => {
												if (e) error(e);
												else success();
											});
										});
									})
									.catch(response => error(new Error(response.statusText)));
							}
						}

						/**
						 * 下载文件列表
						 * @param { string[] } files 
						 */
						function downloadList(files) {
							if (!Array.isArray(files) || files.length == 0) return;
							let i = 0;
							const progress = game.shijianCreateProgress('更新《天牢令》扩展', files.length, files[0], i);
							const success = skip => {
								// 下载完了就结束
								if (!files[++i]) {
									progress.setProgressValue(files.length);
									progress.setFileName('下载完成');
									setTimeout(() => {
										// 移除进度条
										progress.remove();
										// 延时提示
										setTimeout(() => {
											alert('《天牢令》扩展更新完成，将自动重启');
											game.reload();
										}, 100);
									}, 200);
									return;
								}
								// 下载成功，更新进度
								progress.setProgressValue(i);
								progress.setFileName(files[i]);
								download(files[i], success, error);
							};
							const error = e => {
								console.log('下载失败', e);
								progress.setFileName('重新下载: ' + files[i]);
								download(files[i], success, error);
							};

							download(files[i], success, error);
						}

						/** @type { string[] } 要下载的文件 */
						const files = localVersion == heavenlyPrisonOrder.oldversion ? heavenlyPrisonOrder.updateFiles : heavenlyPrisonOrder.allFiles;
						downloadList(files);
					});
				})
				.catch(e => {
					if (e.message == 'Failed to fetch') alert('网络连接失败');
					else if (e instanceof Response) console.error('天牢令: ' + e.statusText);
					else console.error('其他错误', e);
				});
		} else {
			console.error('lib.extensionPack.天牢令不存在，无法在线更新');
		}
	});
},precontent:function(tianlaoling){
	lib.extensionMenu.extension_天牢令.BugFeedBack={
		"name":"<style>#👉点击此处可进交流群反馈Bug{animation:changeS 20s linear 4s infinite;}@keyframes changeS{ 0% {color:#FF0000;}7%{color:#FF7F00;}14%{color: #FFFF00;}21%{color:#00FF00;}28% {color:#00FFFF;}35%{color: #0000FF;}42%{color: #8B00FF;}49%{color: #0000FF;}58%{color: #8B00FF;}65%{color: #0000FF;}72% {color:#00FFFF;}79%{color:#00FF00;}86%{color: #FFFF00;}93%{color:#FF7F00;}100% {color:#FF0000;}}</style><body><div id='👉点击此处可进交流群反馈Bug'><b>👉点击此处可进交流群反馈Bug</b></div></body>",
		"clear":true,
		"onclick":function(){
			ui.click.configMenu();
			window.open('https://jq.qq.com/?_wv=1027&k=YZdf9y12');
			setTimeout(function(){
				alert('感谢您的反馈！ฅฅ*');
			},5000);
		},
	};
	lib.init.css(lib.assetURL + 'extension/天牢令', 'erlv');
},help:{},config:{
    "tianlaoling_name":{
        "name":"武将前缀",
        "intro":"选择是否显示“§”武将前缀",
        "init":"hide",
        "item":{
            "hide":"隐藏",
            "show":"显示"
        }
    },
    "tianlaoling_backgroundMusic":{
        "name":"背景音乐",
        "intro":"在对局中播放选定的背景音乐<br>选定后，每局游戏开始时生效",
        "init":"hide",
        "item":{
            "hide":"关闭",
            "1":"定军山-屠洪刚",
            "2":"新定军山（女声）",
            "3":"孤勇者-凤凰传奇",
            "4":"傲视群雄",
            "5":"听我说谢谢你",
            "7":"U Make Me",
            "8":"Chrono",
            "9":"Lanterns",
            "10":"花月",
            "114514":"好日子",
            "6":"敢杀我的马？！（鬼畜）"
        }
    }
},package:{
    character:{
        character:{
            "JX_zhangliang":["male","qun",4,["DIY_jijun","DIY_fangtong"],[]],
            "JX_yanjun":["male","wu",3,["DIY_guanchao","DIY_xunxian"],[]],
            "JX_xushu":["male","shu",4,["DIY_zhuhai","DIY_jianyan"],[]],
            "JX_sunqian":["male","shu",3,["DIY_qianya","DIY_shuomeng"],[]],
            "JX_boss_simazhao":["male","jin",4,["DIY_guijin"],["zhu","boss","bossallowed","unseen"]],
            "JX_guanqiujian":["male","wei",4,["DIY_zhenyong","DIY_hongju"],[]],
            "JX_caohong":["male","wei",4,["DIY_yuanhu"],[]],
            "JX_hanfu":["male","qun",4,["DIY_jieying","DIY_weipo"],[]],
            "JX_yanyan":["male","shu",4,["DIY_juzhan"],[]],
            "JX_quancong":["male","wu",4,["DIY_yaoming"],[]],
            "JX_jiling":["male","qun",4,["DIY_shuangren"],[]],
            "JX_wenpin":["male","wei",4,["DIY_zhenwei"],[]],
            "JX_kuailiangkuaiyue":["male","wei",4,["DIY_jianxiang","DIY_shenshi"],[]],
            "JX_shen_zhangliao":["male","shen",4,["DIY_duorui","DIY_zhiti"],["wei"],["des:字文远，魏雁门马邑人。官至前将军、征东将军、晋阳侯。武功高强，又谋略过人，多次建立奇功，以800人突袭孙权十万大军，皆望风披靡。"]],
            "JX_taishici":["male","qun",4,["DIY_jixu"],[]],
            "JX_chendao":["male","shu",4,["DIY_wanglie"],[]],
            "JX_xiahouba":["male","shu",4,["DIY_baobian"],[]],
            "JX_zhugejin":["male","wu",3,["DIY_hongyuan","DIY_huanshi","DIY_mingzhe"],[]],
            "JX_zumao":["male","wu",4,["DIY_yinbing","DIY_juedi"],[]],
            "JX_shenlvmeng":["male","shen",3,["DIY_shelie","DIY_gongxin","DIY_botu"],["wu"],["des:吕蒙，字子明，汝南富陂人，东吴名将，原有“吴下阿蒙”之贬称，后受孙权劝说，奋发读书，最终成就一代名将。"]],
            "JX_shenguanyu":["male","shen",5,["DIY_wuhun","DIY_wushen","DIY_wuhun_dying"],["shu"],["des:关羽，字云长。曾水淹七军、擒于禁、斩庞德、威震华夏，吓得曹操差点迁都躲避，但是东吴偷袭荆州，关羽兵败被害。后传说吕蒙因关羽之魂索命而死。"]],
            "JX_shenlvbu":["male","shen",5,["DIY_baonu","DIY_wumou","DIY_wuqian","DIY_shenfen"],["qun"]],
            "JX_shenzhugeliang":["male","shen",3,["DIY_qixing","DIY_biantian"],["shu"],["des:字孔明、号卧龙，汉族，琅琊阳都人，三国时期蜀汉丞相、杰出的政治家、军事家、发明家、文学家。在世时被封为武乡侯，死后追谥忠武侯，后来东晋政权推崇诸葛亮军事才能，特追封他为武兴王。诸葛亮为匡扶蜀汉政权，呕心沥血、鞠躬尽瘁、死而后已。其代表作有《前出师表》、《后出师表》、《诫子书》等。曾发明木牛流马等，并改造连弩，可一弩十矢俱发。于234年在宝鸡五丈原逝世。"]],
            "JX_BOSS_zhugeliang":["male","shen",Infinity,["DIY_xiangxing","DIY_yueyin","DIY_fengqi","DIY_gaiming"],["unseen"]],
            "JX_wangcan":["male","qun",3,["DIY_sanwen","DIY_qiai","DIY_denglou"],[]],
            "JX_SPpangtong":["male","wu",4,["DIY_guolun","DIY_songsang","DIY_zhanji"],[]],
            "JX_xiahoushi":["female","shu",3,["DIY_qiaoshi","DIY_yanyu"],[]],
            "JX_lidian":["male","wei",3,["DIY_xunxun","DIY_wangxi"],[]],
            "JX_yanbaihu":["male","qun",4,["DIY_zhidao","DIY_jili"],[]],
            "JX_zhugeguo":["female","shu",3,["DIY_qirang","DIY_yuhua"],[]],
            "JX_dingfeng":["male","wu",4,["DIY_fenxun","DIY_duanbing"],[]],
            "JX_shenliubei":["male","shen",6,["DIY_longnu","DIY_shenliu_jieying"],["shu"]],
            "JX_liuye":["male","wei",3,["DIY_polu","DIY_choulue"],[]],
            "JX_zhoutai":["male","wu",4,["DIY_buqu","DIY_fenji"],[]],
            "JX_spjiangwei":["male","wei",4,["DIY_kunfen","DIY_fengliang"],[]],
            "JX_xiahouyuan":["male","wei",4,["DIY_shensu","DIY_shebian"],[]],
            "JX_zhujun":["male","qun",4,["DIY_gongjian","DIY_kuimang"],[]],
            "JX_caozhang":["male","wei",4,["DIY_jiangchi"],[]],
            "JX_yuanshao":["male","qun",4,["DIY_luanji","DIY_xueyi"],["qun"],["zhu"]],
            "JX_dianwei":["male","wei",4,["DIY_qiangxi"],[]],
            "JX_shenluxun":["male","shen",4,["DIY_cuike","DIY_zhanhuo","DIY_junlue"],["wu"]],
            "JX_simazhao":["male","jin",4,["DIY_zhaoxin","DIY_suzhi"],["zhu"]],
            "JX_huangyueying":["female","shu",3,["DIY_jizhi","DIY_qicai"],[]],
            "JX_lukang":["male","wu",4,["DIY_qianjie","DIY_jueyan","DIY_poshi"],[]],
            "JX_retaishici":["male","wu",4,["DIY_tianyi","DIY_hanzhan"],[]],
            "JX_xingdaorong":["male","qun","4/6",["DIY_xuxie"],[]],
            "JX_miganfuren":["female","shu",3,["DIY_shushen","DIY_shenzhi","DIY_guixiu","DIY_qingyu"],["des:刘备起兵后，于沛城娶甘氏为妾。后来，甘夫人随刘备到荆州，生了阿斗(也就是后主刘禅)。223年四月，刘备病死于白帝城，追谥甘夫人为“昭烈皇后”。<br>糜夫人，刘备夫人。徐州别驾糜竺之妹。长坂兵败，她怀抱年仅两岁的刘禅在乱军中走散，被赵云发现；但麋夫人因为赵云只有一匹马，不肯上马，在将阿斗托付给赵云后投井而亡。"]],
            "JX_chenlin":["male","wei",3,["DIY_bifa","DIY_songci"],[]],
            "JX_xunyou":["male","wei",3,["DIY_qice","DIY_zhiyu"],[]],
            "JX_liuzan":["male","wu",10,["DIY_fenyin"],["boss","tlboss","bossallowed","unseen"]],
            "JX_sunchen":["male","wu",4,["DIY_shilu","DIY_xiongnve"],[]],
            "JX_zhangbao":["male","qun",3,["DIY_zhoufu","DIY_yingbing"],[]],
            "JX_cheliji":["male","qun",4,["DIY_chexuan","DIY_qiangshou"],[]],
            "JX_zhuhuan":["male","wu",4,["DIY_fenli","DIY_pingkou"],[]],
            "JX_dongzhuo":["male","qun",8,["DIY_jiuchi","DIY_roulin","DIY_benghuai","DIY_baonue"],["zhu"]],
            "JX_fuqian":["male","shu","3/4",["DIY_jueyong"],[]],
            "JX_zhanghe":["male","wei",4,["DIY_qiaobian"],[]],
            "JX_gongsunzan":["male","qun",4,["DIY_yicong","DIY_qiaomeng"],[]],
            "JX_jiayu":["male","qun",3,["DIY_luanwu","DIY_weimu","DIY_wansha"],[]],
            "JX_caoang":["male","wei",4,["DIY_kaikang"],[]],
            "JX_yanliangwenchou":["male","qun",4,["DIY_shuangxiong"],[]],
            "JX_liuchen":["male","shu",4,["DIY_zhanjue"],[]],
            "JX_zhugeke":["male","wu",3,["DIY_aocai","DIY_duwu"],[]],
            "JX_gaoshun":["male","qun",4,["DIY_xianzhen","rejinjiu"],[]],
            "JX_zhaotongzhaoguang":["male","shu",4,["DIY_yizan","DIY_longyuan"],[]],
            "JX_zhangzhaozhanghong":["male","wu",3,["DIY_guzheng","DIY_zhijian"],[]],
            "JX_tadun":["male","qun",4,["DIY_luanzhan"],[]],
            "JX_dengai":["male","wei",4,["DIY_tuntian","DIY_zaoxian"],[]],
            "JX_liuyao":["male","qun",4,["DIY_kannan"],[]],
            "JX_huangzhong":["male","shu",4,["DIY_liegong"],[]],
            "JX_liubei":["male","shu",4,["DIY_rende","jijiang"],["zhu"]],
            "JX_wangji":["male","wei",3,["DIY_qizhi","DIY_jinqu"],[]],
            "JX_zhonghui":["male","wei",4,["DIY_quanji","DIY_paiyi"],[]],
            "JX_hanhaoshihuan":["male","wei",4,["DIY_shenduan","DIY_yonglve"],[]],
            "JX_yl_luzhi":["male","qun",3,["DIY_mingren","DIY_zhenliang"],[]],
            "JX_chendong":["male","wu",4,["DIY_yilie","DIY_fenming"],[]],
            "JX_xujingxushao":["male","qun",4,["DIY_boming","DIY_xu_pingjian"],[]],
            "JX_gongsunyuan":["male","qun",4,["DIY_huaiyi","DIY_ziju"],[]],
            "JX_dingyuan":["male","qun",4,["DIY_beizhu"],[]],
            "JX_wangyi":["female","wei",4,["DIY_zhenlie","DIY_miji"],[]],
            "JX_zhugedan":["male","wei",4,["DIY_gangao","DIY_juyi"],[]],
            "JX_liufeng":["male","shu",4,["DIY_xiansi"],[]],
            "JX_ganning":["male","wu",4,["DIY_qixi","fenwei"],[]],
            "JX_sp_zhugeliang":["male","shu",3,["DIY_huoji","DIY_bazhen","DIY_kanpo"],[]],
            "JX_luxun":["male","wu",3,["DIY_qianxun","DIY_lianying"],[]],
            "JX_zhugeliang":["male","shu",3,["DIY_guanxing_zhuge","DIY_kongcheng"],[]],
            "JX_sunziliufang":["male","wei",3,["DIY_guizao","DIY_jiyu"],[]],
            "JX_zhangrangzhaozhong":["male","qun","4/5",["DIY_taoluan","DIY_yangzhong"],[]],
            "JX_sunquan":["male","wu",4,["DIY_zhiheng","rejiuyuan"],["zhu"]],
            "JX_fazheng":["male","shu",3,["DIY_enyuan","DIY_xuanhuo"],[]],
            "JX_shen_zhouyu":["male","shen",4,["DIY_yeyan","DIY_qinyin"],["wu"]],
            "JX_fanjiangzhangda":["male","shu",4,["DIY_yuanchou","DIY_juesheng"],[]],
            "JX_lvmeng":["male","wu",4,["DIY_keji","DIY_dujiang","botu"],[]],
            "JX_zhangji":["male","qun",4,["DIY_lveming","DIY_tunjun"],[]],
            "JX_daxiaoqiao":["female","wu",3,["DIY_xingwu","DIY_tianxiang","DIY_liuli"],[]],
            "JX_sp_jiangwan":["male","shu",3,["DIY_shoucheng","DIY_zhenting","DIY_shengxi"],[]],
            "JX_cuiyan":["male","wei",3,["DIY_yajun","DIY_guijian"],[]],
            "JX_zhouqun":["male","shu",3,["DIY_tiansuan"],[]],
            "JX_zhangliao":["male","wei",4,["DIY_tuxi","DIY_powei"],[]],
            "JX_lingtong":["male","wu",4,["DIY_xuanfeng","DIY_yongjin"],[]],
            "JX_xuyou":["male","qun",3,["DIY_chenglve","DIY_shicai","DIY_cunmu"],[]],
            "JX_lvbu":["male","qun",5,["DIY_panshi","wushuang","DIY_liqu"],[]],
            "JX_guosi":["male","qun",4,["DIY_tanbei","DIY_sidao"],[]],
            "JX_lingju":["female","qun",3,["DIY_jieyuan","DIY_fenxin"],[]],
            "JX_sp_pangde":["male","wei",4,["mashu","DIY_juesi","DIY_mengjin"],[]],
            "db_yuji":["male","qun",3,["DIY_qianhuan","DIY_guhuo"],["doublegroup:qun:wu"]],
            "JX_huaxiong":["male","qun","6/6/3",["DIY_yaowu"],[]],
            "JX_jianggan":["male","wei",3,["DIY_daoshu","DIY_weicheng"],[]],
            "JX_haozhao":["male","wei",4,["DIY_zhengu"],[]],
            "JX_zhangxingcai":["female","shu",3,["DIY_shenxian","DIY_qiangwu"],[]],
            "JX_guanyinping":["female","shu",3,["DIY_xuehen","DIY_wuji","DIY_huxiao"],[]],
            "JX_mayunlu":["female","shu",4,["DIY_fengpo","mashu"],[]],
            "JX_qinghegongzhu":["female","wei",3,["DIY_zengou","DIY_zhangji"],[]],
            "JX_sunluban":["female","wu",3,["DIY_zenhui","DIY_jiaojin"],[]],
            "JX_xuhuang":["male","wei",4,["DIY_duanliang","DIY_jiezi"],[]],
            "JX_xuangongzhu":["female","jin",3,["gaoling","DIY_qimei","ybzhuiji"],["hiddenSkill","des:高陵宣公主(?-?)司马氏，晋宣帝司马懿第二女。司马氏下嫁杜预。其侄司马炎登基时，司马氏已经去世。泰始年间(265年-274年)追赠高陵公主。"]],
            "JX_caojinyu":["female","wei",3,["DIY_shanshen","DIY_xianya"],[]],
            "JX_liru":["male","qun",3,["DIY_juece","DIY_mieji","xinfencheng"],[]],
            "JX_jianyong":["male","shu",3,["DIY_qiaoshuo","DIY_zongshi"],[]],
            "JX_sunce":["male","wu",4,["DIY_jiang","DIY_hunzi"],["zhu"]],
            "JX_wangyun":["male","qun",3,["DIY_lianji","DIY_moucheng"],[]],
            "JX_caoying":["female","wei",4,["DIY_lingren","DIY_fujian"],[]],
            "JX_baosanniang":["female","shu",3,["DIY_wuniang","DIY_zhennan"],[]],
            "JX_caochun":["male","wei",4,["DIY_shanjia"],["des:虎豹骑都是JK少女！"]],
            "JX_xiahoudun":["male","wei",4,["DIY_ganglie","DIY_fenyong"],[]],
            "JX_litong":["male","wei",4,["DIY_tuifeng"],[]],
            "JX_zhaoyun":["male","shu",4,["DIY_longdan","DIY_jizhu"],[]],
            "JX_jin_yanghu":["male","jin",4,["DIY_huaiyuan","DIY_dezhang"],["des:羊祜(221年-278年12月27日)，字叔子，兖州泰山郡南城县人。西晋时期杰出的战略家、政治家、文学家，曹魏上党太守羊衜之子，汉末才女蔡文姬的外甥。<br>羊祜出身“泰山羊氏”，博学能文，清廉正直。曹魏时期，接受公车征辟，出任中书郎，迁给事黄门侍郎。姐姐嫁给大将军司马师，投靠司马氏家族，仕途平步青云。魏元帝曹奂即位，出任秘书监、相国从事中郎、中领军，统领御林军，兼管内外政事，册封钜平县子。西晋建立后，迁中军将军、散骑常侍、郎中令，册封钜平侯。泰始五年(269年)，出任车骑将军、开府仪同三司，都督荆州诸军事，坐镇襄阳，屯田兴学，以德怀柔，深得军民之心;扩充军备，训练士兵，全力准备灭亡孙吴，累迁征南大将军，册封南城侯。<br>咸宁四年(278年)，羊祜去世，临终前举荐杜预接任职务。死后获赠侍中、太傅，谥号为“成”。唐宋时期，配享武庙。"]],
            "JX_lvlingqi":["female","qun",3,["DIY_guowu","DIY_zhuangrong"],[]],
            "JX_sp_machao":["male","qun",4,["DIY_zhuiji","DIY_shichou","DIY_machaocaidan"],[]],
            "JX_machao":["male","shu",4,["mashu","DIY_tieqi"],[]],
            "JX_cenhun":["male","wu",4,["DIY_jishe"],[]],
            "JX_caifuren":["female","qun",3,["DIY_qieting","DIY_antao"],[]],
            "JX_wangshuang":["male","wei",8,["DIY_zhuilie"],[]],
            "JX_chengyu":["male","wei",3,["DIY_shefu","DIY_benyu"],[]],
            "JX_shen_simayi":["male","shen",4,["DIY_renjie","DIY_baiyin","DIY_lianpo"],["jin"]],
            "JX_caoxiu":["male","wei",4,["reqianju","DIY_qingxi"],[]],
            "JX_lvdai":["male","wu",4,["DIY_qinguo"],[]],
            "JX_shen_machao":["male","shen",4,["DIY_hengwu","DIY_shouli"],["shu"],["des:马超（176年～222年），字孟起，扶风茂陵（今陕西省兴平市）人，三国时期蜀汉名将，汉伏波将军马援的后人，马腾的儿子，少年成名，曹操曾多次征召马超入京为官，但都被马超拒绝。而后马腾入京被封为卫尉，马超就统领了马腾的部队。"]],
            "JX_zhangchangpu":["female","wei",3,["DIY_yanjiao","DIY_shengshen"],[]],
            "JX_shen_jiangwei":["male","shen",4,["DIY_jiufa","DIY_tianren"],["shu"]],
            "JX_zhangfei":["male","shu",4,["DIY_paoxiao"],["des:感谢千面猫大佬帮忙写的技能"]],
            "JX_guanyu":["male","shu",4,["DIY_wusheng"],["des:感谢千面猫大佬帮忙写的技能"]],
            "JX_shen_xunyu":["male","shen",3,["DIY_tianzuo","DIY_lingce","DIY_dinghan"],["wei"]],
            "JX_wangyuanji":["female","wei",3,["DIY_qianchong"],[]],
            "JX_shen_taishici":["male","shen",4,["DIY_dulie","DIY_dangmo"],["wu"]],
            "JX_xurong":["male","qun",4,["DIY_xionghuo","DIY_shajue"],[]],
            "JX_zhenji":["female","wei",3,["DIY_luoshen","DIY_qingguo"],[]],
            "JX_wei_simazhao":["male","wei",3,["DIY_yilue","DIY_zhaoran"],["jin"]],
            "JX_shen_sunquan":["male","shen",4,["DIY_dili","DIY_quyu"],["wei"]],
            "JX_jikang":["male","wei",3,["DIY_qingxian"],[]],
            "JX_caopicaozhi":["male","wei",4,["DIY_xiangjian"],[]],
            "JX_xusheng":["male","wu",4,["DIY_yicheng"],[]],
            "JX_shamoke":["male","shu",4,["DIY_weijiang","DIY_qili"],[]],
            "JX_simashi":["male","wei",4,["DIY_jinglve","DIY_chebian"],[]],
            "JX_guanping":["male","shu",4,["DIY_longyin"],[]],
            "JX_panjun":["male","wu",3,["DIY_guanwei","DIY_gongqing"],[]],
            "JX_caocao":["male","wei",4,["DIY_jianxiong","hujia"],["zhu"]],
            "JX_zhouyu":["male","wu",3,["DIY_yingzi","DIY_fanjian"],[]],
            "JX_zhoufang":["male","wu",3,["DIY_duanfa","DIY_youdi"],[]],
            "JX_luji":["male","wu",3,["DIY_yili","DIY_zhenglun"],[]],
            "JX_zhangyì":["male","shu",4,["DIY_zhiyi"],[]],
            "JX_zhouchu":["male","wu",4,["DIY_chuhai","DIY_xianghai"],[]],
            "JX_guohuai":["male","wei",4,["DIY_jingce"],[]],
            "JX_lijue": ["male", "qun", "4/6", ["DIY_langxi","DIY_yisuan"], ["des:参考B站up主千芬的设计，感谢雷佬帮忙写的小游戏。"]],
            "JX_zhangyi":["male","shu",4,["DIY_wurong","DIY_shizhi"],[]],
            "JX_shen_zhaoyun":["male","shen","2/3",["DIY_longhun","DIY_juejing"],[]],
            "JX_zhangjiao":["male","qun",3,["DIY_leiji","DIY_guidao"],[]],
            "JX_miheng":["male","qun",3,["DIY_kuangcai"],[]],
            "JX_huanggai":["male","wu",4,["DIY_kurou"],[]],
            "JX_shen_ganning":["male","shen","3/6",["DIY_shengan_jieying","DIY_poxi"],[]],
            "JX_huangzu":["male","qun",4,["DIY_xiaojun","DIY_wangong"],[]],
			"JX_zhangning":["female","qun",3,["DIY_tianze","DIY_difa"],[]],
			"JX_lingcao":["male","wu",4,["DIY_dujin"],[]],
			"JX_zhuzhi":["male","wu",4,["DIY_anguo"],[]],
			"db_DIY_wenyang":["male","wei",4,["DIY_zhuifeng","DIY_chongjian"],["doublegroup:wei:wu"]],
			"JX_chenqun":["male","wei",3,["DIY_pindi","DIY_faen"],[]],
			"JX_jiangqing":["male","wu",4,["DIY_shangyi","DIY_xiangyu"],[]],
			"JX_weiwenzhugezhi":["male","wu",4,["DIY_fuhai"],["des:<b><span style='text-align: center'>《中华人民共和国全国人民代表大会常务委员会告台湾同胞书》</span></b><p>亲爱的台湾同胞：</p><p>&emsp;&emsp;今天是一九七九年元旦。我们代表祖国大陆的各族人民，向诸位同胞致以亲切的问候和衷心的祝贺。</p><p>&emsp;&emsp;昔人有言：“每逢佳节倍思亲”。在这欢度新年的时刻，我们更加想念自己的亲骨肉——台湾的父老兄弟姐妹。我们知道，你们也无限怀念祖国和大陆上的亲人。这种绵延了多少岁月的相互思念之情与日俱增。自从一九四九年台湾同祖国不幸分离以来，我们之间音讯不通，来往断绝，祖国不能统一，亲人无从团聚，民族、国家和人民都受到了巨大的损失。所有中国同胞以及全球华裔，无不盼望早日结束这种令人痛心的局面。</p><p>&emsp;&emsp;我们中华民族是伟大的民族，占世界人口近四分之一，享有悠久的历史和优秀的文化，对世界文明和人类发展的卓越贡献，举世共认。台湾自古就是中国不可分割的一部分。中华民族是具有强大的生命力和凝聚力的。尽管历史上有过多少次外族入侵和内部纷争，都不曾使我们的民族陷于长久分裂。近三十年台湾同祖国的分离，是人为的，是违反我们民族的利益和愿望的，决不能再这样下去了。每一个中国人，不论是生活在台湾的还是生活在大陆上的，都对中华民族的生存、发展和繁荣负有不容推诿的责任。统一祖国这样一个关系全民族前途的重大任务，现在摆在我们大家的面前，谁也不能回避，谁也不应回避。如果我们还不尽快结束目前这种分裂局面，早日实现祖国的统一，我们何以告慰于列祖列宗？何以自解于子孙后代？人同此心，心同此理，凡属黄帝子孙，谁愿成为民族的千古罪人？</p><p>&emsp;&emsp;近三十年来，中国在世界上的地位已发生根本变化。我国国际地位越来越高，国际作用越来越重要。各国人民和政府为了反对霸权主义、维护亚洲和世界的和平稳定，几乎莫不对我们寄予极大期望。每一个中国人都为祖国的日见强盛而感到自豪。我们如果尽快结束目前的分裂局面，把力量合到一起，则所能贡献于人类前途者，自更不可限量。早日实现祖国统一，不仅是全中国人民包括台湾同胞的共同心愿，也是全世界一切爱好和平的人民和国家的共同希望。</p><p>&emsp;&emsp;今天，实现中国的统一，是人心所向，大势所趋。世界上普遍承认只有一个中国，承认中华人民共和国政府是中国唯一合法的政府。最近中日和平友好条约的签定，和中美两国关系正常化的实现，更可见潮流所至，实非任何人所得而阻止。目前祖国安定团结，形势比以往任何时候都好。在大陆上的各族人民，正在为实现四个现代化的伟大目标而同心戮力。我们殷切期望台湾早日归回祖国，共同发展建国大业。我们的国家领导人已经表示决心，一定要考虑现实情况，完成祖国统一大业，在解决统一问题时尊重台湾现状和台湾各界人士的意见，采取合情合理的政策和办法，不使台湾人民蒙受损失。台湾各界人士也纷纷抒发怀乡思旧之情，诉述“认同回归”之愿，提出种种建议，热烈盼望早日回到祖国的怀抱。时至今日，种种条件都对统一有利，可谓万事俱备，任何人都不应当拂逆民族的意志，违背历史的潮流。</p><p>&emsp;&emsp;我们寄希望于一千七百万台湾人民，也寄希望于台湾当局。台湾当局一贯坚持一个中国的立场，反对台湾独立。这就是我们共同的立场，合作的基础。我们一贯主张爱国一家。统一祖国，人人有责。希望台湾当局以民族利益为重，对实现祖国统一的事业作出宝贵的贡献。</p><p>&emsp;&emsp;中国政府已经命令人民解放军从今天起停止对金门等岛屿的炮击。台湾海峡目前仍然存在着双方的军事对峙，这只能制造人为的紧张。我们认为，首先应当通过中华人民共和国政府和台湾当局之间的商谈结束这种军事对峙状态，以便为双方的任何一种范围的交往接触创造必要的前提和安全的环境。</p><p>&emsp;&emsp;由于长期隔绝，大陆和台湾的同胞互不了解，对于双方造成各种不便。远居海外的许多侨胞都能回国观光，与家人团聚。为什么近在咫尺的大陆和台湾的同胞却不能自由来往呢？我们认为这种藩篱没有理由继续存在。我们希望双方尽快实现通航通邮，以利双方同胞直接接触，互通讯息，探亲访友，旅游参观，进行学术文化体育工艺观摩。</p><p>&emsp;&emsp;台湾和祖国大陆，在经济上本来是一个整体。这些年来，经济联系不幸中断。现在，祖国的建设正在蓬勃发展，我们也希望台湾的经济日趋繁荣。我们相互之间完全应当发展贸易，互通有无，进行经济交流。这是相互的需要，对任何一方都有利而无害。</p><p>亲爱的台湾同胞：</p><p>&emsp;&emsp;我们伟大祖国的美好前途，既属于我们，也属于你们。统一祖国，是历史赋于我们这一代人的神圣使命。时代在前进，形势在发展。我们早一天完成这一使命，就可以早一天共同创造我国空前未有的光辉灿烂的历史，而与各先进强国并驾齐驱，共谋世界的和平、繁荣和进步。让我们携起手来，为这一光荣目标共同奋斗！</p>"]],
            "JX_sunjian":["male","wu",4,["DIY_yinghun"],[]],
		},
        characterTitle:{
            "JX_BOSS_zhugeliang":"祭风卧龙",
            "JX_zhangliang":"人公将军",
            "JX_yanjun":"志存补益",
            "JX_xuezong":"彬彬之玉",
            "JX_xushu":"化剑为犁",
            "JX_sunqian":"折冲樽俎",
            "JX_guanqiujian":"鹄翀昊苍",
            "JX_caohong":"忠烈为心",
            "JX_caiyong":"博学绘法",
            "JX_hanfu":"度势恇然",
            "JX_yanyan":"断头将军",
            "JX_quancong":"慕势耀族",
            "JX_jiling":"仲国大将",
            "JX_wenpin":"坚城宿将",
            "JX_kuailiangkuaiyue":"雍论臼谋",
            "JX_shen_zhangliao":"破虏荡寇",
            "JX_taishici":"奇袭重围",
            "JX_chendao":"白毦督",
            "JX_xiahouba":"棘途壮志",
            "JX_zhugejin":"风雅神逸",
            "JX_zumao":"碧血染赤帻",
            "JX_shenlvmeng":"兼资文武",
            "JX_shenguanyu":"链狱鬼神",
            "JX_shenlvbu":"冠绝天下",
            "JX_shenzhugeliang":"赤壁唤风",
            "JX_wangcan":"七子冠冕",
            "JX_SPpangtong":"南州士冠",
            "JX_xiahoushi":"採缘撷睦",
            "JX_lidian":"儒雅之士",
            "JX_yanbaihu":"豹牙落涧",
            "JX_zhugeguo":"凤阁乘烟",
            "JX_dingfeng":"勇冠三军",
            "JX_shenliubei":"昭烈怒火",
            "JX_liuye":"佐世之才",
            "JX_xiangchong":"性情淑均",
            "JX_zhoutai":"百战之躯",
            "JX_sp_machao":"西凉雄狮",
            "JX_spjiangwei":"天水麒麟",
            "JX_xiahouyuan":"奔轶绝尘",
            "JX_zhujun":"功成师克",
            "JX_caozhang":"神勇壮猛",
            "JX_yuanshao":"四世三公",
            "JX_dianwei":"古之恶来",
            "JX_shenluxun":"绽焰摧枯",
            "JX_simazhao":"权倾朝野",
            "JX_boss_simazhao":"四海威服",
            "JX_huangyueying":"奇智女杰",
            "JX_sundengzhoufei":"鹊星夕情",
            "JX_lukang":"毁堰破晋",
            "JX_retaishici":"笃烈御敌",
            "JX_xingdaorong":"零陵上将",
            "JX_miganfuren":"寸草丹心",
            "JX_chenlin":"下笔缴文",
            "JX_xunyou":"十二奇策",
            "JX_wutugu":"藤甲军",
            "JX_liuzan":"亢音高歌",
            "JX_sunchen":"嗜戮权臣",
            "JX_zhangbao":"地公将军",
            "JX_cheliji":"高凉铁骨",
            "JX_zhuhuan":"中州拒天",
            "JX_dongzhuo":"祸乱朝纲",
            "JX_heqi":"马踏群峦",
            "JX_yujin":"赴汤蹈火",
            "JX_fuqian":"危汉绝勇",
            "JX_zhanghe":"料敌机先",
            "JX_gongsunzan":"白马义从",
            "JX_jiayu":"文和武乱",
            "JX_caoang":"取义成仁",
            "JX_yanliangwenchou":"骁勇双雄",
            "JX_liuchen":"北地亲王",
            "JX_zhugeke":"穷兵黩武",
            "JX_gaoshun":"虎狼之师",
            "JX_zhaotongzhaoguang":"龙举云兴",
            "JX_zhangzhaozhanghong":"股肱之臣",
            "JX_tadun":"冠绝乌桓",
            "JX_dengai":"摧山凿险",
            "JX_hetaihou":"蛇蝎为心",
            "JX_liuyao":"宗英外镇",
            "JX_huangzhong":"没金铩羽",
            "JX_liubei":"龙骧麟振",
            "JX_wangji":"时之彦士",
            "JX_zhonghui":"桀骜野心",
            "JX_hanhaoshihuan":"中军之主",
            "JX_yl_luzhi":"国之桢干",
            "JX_chendong":"壮怀激烈",
            "JX_xujingxushao":"试论天下",
            "JX_gongsunyuan":"狡黠野心",
            "JX_dingyuan":"养虎为患",
            "JX_wangyi":"忠贞巾帼",
            "JX_zhugedan":"薤露蒿里",
            "JX_liufeng":"螟蛉之子",
            "JX_ganning":"锦帆游侠",
            "JX_sp_zhugeliang":"三分天下",
            "JX_luxun":"淑人君子",
            "JX_zhugeliang":"一枕清梦",
            "JX_sunziliufang":"助魏辅君",
            "JX_zhangrangzhaozhong":"宦势控权",
            "JX_sunquan":"江东大帝",
            "JX_fazheng":"戡律定科",
            "JX_shen_zhouyu":"红莲业火",
            "JX_fanjiangzhangda":"你死我活",
            "JX_lvmeng":"苍江一笠",
            "JX_zhangji":"龙沃于野",
            "JX_daxiaoqiao":"绝色双姝",
            "JX_sp_jiangwan":"方整威重",
            "JX_cuiyan":"伯夷之风",
            "JX_zhouqun":"占天明征",
            "JX_zhangliao":"威震逍遥",
            "JX_lingtong":"豪情烈胆",
            "JX_xuyou":"恃才傲物",
            "JX_lvbu":"天下无双",
            "JX_guosi":"党豺为虐",
            "JX_lingju":"魂牵梦萦",
            "JX_sp_pangde":"抬棺决死",
            "db_yuji":"幻惑众心",
            "JX_huaxiong":"跋扈雄狮",
            "JX_jianggan":"锋镝悬信",
            "JX_haozhao":"智密善守",
            "JX_zhangxingcai":"巾帼花武",
            "JX_guanyinping":"巾帼花武",
            "JX_mayunlu":"巾帼花武",
            "JX_qinghegongzhu":"蛊虿之谗",
            "JX_sunluban":"为虎作伥",
            "JX_xuhuang":"径行截辎",
            "JX_xuangongzhu":"高陵公主",
            "JX_caojinyu":"金乡公主",
            "JX_liru":"绝策魔仕",
            "JX_jianyong":"舌灿金莲",
            "JX_sunce":"踞江霸王",
            "JX_wangyun":"忠魂不泯",
            "JX_caoying":"巾帼花武",
            "JX_baosanniang":"巾帼花武",
            "JX_caochun":"虎豹骑首",
            "JX_xiahoudun":"刚烈无惧",
            "JX_litong":"推锋陷阵",
            "JX_zhaoyun":"七进七出",
            "JX_jin_yanghu":"执德清邵",
            "JX_lvlingqi":"巾帼花武",
            "JX_machao":"一骑当千",
            "JX_cenhun":"肆无忌惮",
            "JX_caifuren":"名门妖媛",
            "JX_wangshuang":"追击相遇",
            "JX_chengyu":"刚戾诡谋",
            "JX_shen_simayi":"狼顾之鬼",
            "JX_caoxiu":"千里骐骥",
            "JX_lvdai":"清身奉公",
            "JX_shen_machao":"讯婺惊雷",
            "JX_zhangchangpu":"三角函数",
            "JX_shen_jiangwei":"怒麟布武",
            "JX_zhangfei":"万夫不当",
            "JX_guanyu":"威震华夏",
            "JX_shen_xunyu":"洞心先识",
            "JX_wangyuanji":"文明皇后",
            "JX_shen_taishici":"义信天武",
            "JX_xurong":"国宴御厨",
            "JX_zhenji":"洛水仙子",
            "JX_wei_simazhao":"狼子野心",
            "JX_shen_sunquan":"吴王六剑",
            "JX_jikang":"峻峰孤松",
            "JX_caopicaozhi":"煮豆燃萁",
            "JX_xusheng":"江东铁臂",
            "JX_shamoke":"五溪蛮王",
            "JX_simashi":"摧坚荡异",
            "JX_guanping":"龙吟九霄",
            "JX_panjun":"见微知著",
            "JX_caocao":"乱世枭雄",
            "JX_zhouyu":"雄姿英发",
            "JX_zhoufang":"下发载义",
            "JX_luji":"瑚琏之器",
            "JX_zhangyì":"亢锐怀忠",
            "JX_zhouchu":"英情天逸",
            "JX_guohuai":"方策精详",
            "JX_lijue":"雕悍狼戾",
            "JX_zhangyi":"通壮逾古",
            "JX_shen_zhaoyun":"神威如龙",
            "JX_zhangjiao":"天公将军",
            "JX_miheng":"狂傲奇人",
            "JX_huanggai":"赴汤蹈火",
			"JX_shen_ganning":"功震天英",
            "JX_huangzu":"虎踞江夏",
			"JX_zhangning":"大贤后人",
			"JX_lingcao":"激流勇进",
			"JX_zhuzhi":"王事靡盬",
			"db_DIY_wenyang":"万将披靡",
			"JX_chenqun":"万世臣表",
			"JX_jiangqing":"祁奚之器",
			"JX_weiwenzhugezhi":"四海升平",
			"JX_sunjian":"魂佑江东",
        },
        translate:{
            "JX_BOSS_zhugeliang":"祭风卧龙",
            "JX_zhangliang":"§张梁",
            "JX_yanjun":"§严畯",
            "JX_xuezong":"§薛综",
            "JX_xushu":"§徐庶",
            "JX_sunqian":"§孙乾",
            "JX_guanqiujian":"§毌丘俭",
            "JX_caohong":"§曹洪",
            "JX_caiyong":"§蔡邕",
            "JX_hanfu":"§韩馥",
            "JX_yanyan":"§严颜",
            "JX_quancong":"§全琮",
            "JX_jiling":"§纪灵",
            "JX_wenpin":"§文聘",
            "JX_kuailiangkuaiyue":"§蒯良蒯越",
            "JX_shen_zhangliao":"§神张辽",
            "JX_taishici":"§太史慈",
            "JX_chendao":"§陈到",
            "JX_xiahouba":"§夏侯霸",
            "JX_zhugejin":"§诸葛瑾",
            "JX_zumao":"§祖茂",
            "JX_shenlvmeng":"§神吕蒙",
            "JX_shenguanyu":"§神关羽",
            "JX_shenlvbu":"§神吕布",
            "JX_shenzhugeliang":"§神诸葛亮",
            "JX_wangcan":"§王粲",
            "JX_SPpangtong":"§庞统",
            "JX_xiahoushi":"§夏侯氏",
            "JX_lidian":"§李典",
            "JX_yanbaihu":"§严白虎",
            "JX_zhugeguo":"§诸葛果",
            "JX_dingfeng":"§丁奉",
            "JX_shenliubei":"§神刘备",
            "JX_liuye":"§刘晔",
            "JX_xiangchong":"§向宠",
            "JX_zhoutai":"§周泰",
            "JX_spjiangwei":"§姜维",
            "JX_xiahouyuan":"§夏侯渊",
            "JX_zhujun":"§朱儁",
            "JX_caozhang":"§曹彰",
            "JX_yuanshao":"§袁绍",
            "JX_dianwei":"§典韦",
            "JX_shenluxun":"§神陆逊",
            "JX_simazhao":"§司马昭",
            "JX_boss_simazhao":"§司马昭",
            "JX_huangyueying":"§黄月英",
            "JX_sundengzhoufei":"§孙登周妃",
            "JX_lukang":"§陆抗",
            "JX_retaishici":"§太史慈",
            "JX_xingdaorong":"§邢道荣",
            "JX_miganfuren":"§甘夫人糜夫人",
            "JX_chenlin":"§陈琳",
            "JX_xunyou":"§荀攸",
            "JX_wutugu":"§兀突骨",
            "JX_liuzan":"§留赞",
            "JX_sunchen":"§孙綝",
            "JX_zhangbao":"§张宝",
            "JX_cheliji":"§彻里吉",
            "JX_zhuhuan":"§朱桓",
            "JX_dongzhuo":"§董卓",
            "JX_heqi":"§贺齐",
            "JX_yujin":"§于禁",
            "JX_fuqian":"§傅佥",
            "JX_zhanghe":"§张郃",
            "JX_gongsunzan":"§公孙瓒",
            "JX_jiayu":"§贾诩",
            "JX_caoang":"§曹昂",
            "JX_yanliangwenchou":"§颜良文丑",
            "JX_liuchen":"§刘谌",
            "JX_zhugeke":"§诸葛恪",
            "JX_gaoshun":"§高顺",
            "JX_zhaotongzhaoguang":"§赵统赵广",
            "JX_zhangzhaozhanghong":"§张昭张纮",
            "JX_tadun":"§蹋顿",
            "JX_dengai":"§邓艾",
            "JX_hetaihou":"§何太后",
            "JX_liuyao":"§刘繇",
            "JX_huangzhong":"§黄忠",
            "JX_liubei":"§刘备",
            "JX_wangji":"§王基",
            "JX_zhonghui":"§钟会",
            "JX_hanhaoshihuan":"§韩浩史涣",
            "JX_yl_luzhi":"§卢植",
            "JX_chendong":"§陈武董袭",
            "JX_xujingxushao":"§许靖许邵",
            "JX_gongsunyuan":"§公孙渊",
            "JX_dingyuan":"§丁原",
            "JX_wangyi":"§王异",
            "JX_zhugedan":"§诸葛诞",
            "JX_liufeng":"§刘封",
            "JX_ganning":"§甘宁",
            "JX_sp_zhugeliang":"§卧龙诸葛",
            "JX_luxun":"§陆逊",
            "JX_zhugeliang":"§诸葛亮",
            "JX_sunziliufang":"§孙资刘放",
            "JX_zhangrangzhaozhong":"§张让赵忠",
            "JX_sunquan":"§孙权",
            "JX_fazheng":"§法正",
            "JX_shen_zhouyu":"§神周瑜",
            "JX_fanjiangzhangda":"§范疆张达",
            "JX_lvmeng":"§吕蒙",
            "JX_zhangji":"§张济",
            "JX_daxiaoqiao":"§大小乔",
            "JX_sp_jiangwan":"§蒋琬",
            "JX_cuiyan":"§崔琰",
            "JX_zhouqun":"§周群",
            "JX_zhangliao":"§张辽",
            "JX_lingtong":"§凌统",
            "JX_xuyou":"§许攸",
            "JX_lvbu":"§吕布",
            "JX_guosi":"§郭汜",
            "JX_lingju":"§灵雎",
            "JX_sp_pangde":"§庞德",
            "db_yuji":"§于吉",
            "JX_huaxiong":"§华雄",
            "JX_jianggan":"§蒋干",
            "JX_haozhao":"§郝昭",
            "JX_zhangxingcai":"§张星彩",
            "JX_guanyinping":"§关银屏",
            "JX_mayunlu":"§马云禄",
            "JX_qinghegongzhu":"§清河公主",
            "JX_sunluban":"§全公主",
            "JX_xuhuang":"§徐晃",
            "JX_xuangongzhu":"§宣公主",
            "JX_caojinyu":"§金乡公主",
            "JX_liru":"§李儒",
            "JX_jianyong":"§简雍",
            "JX_sunce":"§孙策",
            "JX_wangyun":"§王允",
            "JX_caoying":"§曹婴",
            "JX_baosanniang":"§鲍三娘",
            "JX_caochun":"§曹纯",
            "JX_xiahoudun":"§夏侯惇",
            "JX_litong":"§李通",
            "JX_zhaoyun":"§赵云",
            "JX_jin_yanghu":"§羊祜",
            "JX_lvlingqi":"§吕玲绮",
            "JX_sp_machao":"§马超",
            "JX_machao":"§马超",
            "JX_cenhun":"§岑昏",
            "JX_caifuren":"§蔡夫人",
            "JX_wangshuang":"§王双",
            "JX_chengyu":"§程昱",
            "JX_shen_simayi":"§神司马懿",
            "JX_caoxiu":"§曹休",
            "JX_lvdai":"§吕岱",
            "JX_shen_machao":"§神马超",
            "JX_zhangchangpu":"§张昌蒲",
            "JX_shen_jiangwei":"§神姜维",
            "JX_zhangfei":"§张飞",
            "JX_guanyu":"§关羽",
            "JX_shen_xunyu":"§神荀彧",
            "JX_wangyuanji":"§王元姬",
            "JX_shen_taishici":"§神太史慈",
            "JX_xurong":"§徐荣",
            "JX_zhenji":"§甄姬",
            "JX_wei_simazhao":"§司马昭",
            "JX_shen_sunquan":"§神孙权",
            "JX_jikang":"§嵇康",
            "JX_caopicaozhi":"§曹丕曹植",
            "JX_xusheng":"§徐盛",
            "JX_shamoke":"§沙摩柯",
            "JX_simashi":"§司马师",
            "JX_guanping":"§关平",
            "JX_panjun":"§潘濬",
            "JX_caocao":"§曹操",
            "JX_zhouyu":"§周瑜",
            "JX_zhoufang":"§周鲂",
            "JX_luji":"§陆绩",
            "JX_zhangyì":"§张翼",
            "JX_zhouchu":"§周处",
            "JX_guohuai":"§郭淮",
            "JX_lijue":"§李傕",
            "JX_zhangyi":"§张嶷",
            "JX_shen_zhaoyun":"§神赵云",
            "JX_zhangjiao":"§张角",
            "JX_miheng":"§祢衡",
            "JX_huanggai":"§黄盖",
            "JX_shen_ganning":"§神甘宁",
            "JX_huangzu":"§黄祖",
			"JX_zhangning":"§张宁",
			"JX_lingcao":"§凌操",
			"JX_zhuzhi":"§朱治",
			"db_DIY_wenyang":"§文鸯",
			"JX_chenqun":"§陈群",
			"JX_jiangqing":"§蒋钦",
			"JX_weiwenzhugezhi":"§卫温诸葛直",
			"JX_sunjian":"§孙坚",
        },
    },
    card:{
        card:{
            "DIY_piliche":{
                fullskin:true,
                vanish:true,
                derivation:"JX_liuye",
                destroy:"DIY_polu",
                type:"equip",
                subtype:"equip1",
                distance:{
                    attackFrom:-9,
                },
                skills:["DIY_piliche"],
                selectTarget:-1,
                filterTarget:function (card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function (){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                image:"ext:天牢令/DIY_piliche.png",
                enable:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_feilunzhanyu":{
                fullskin:true,
                vanish:true,
                derivation:"JX_cheliji",
                destroy:"DIY_chexuan",
                type:"equip",
                subtype:"equip5",
                skills:["DIY_feilunzhanyu"],
                enable:true,
                selectTarget:-1,
                filterTarget:function(card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function(){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_sichengliangyu":{
                fullskin:true,
                vanish:true,
                derivation:"JX_cheliji",
                destroy:"DIY_chexuan",
                type:"equip",
                subtype:"equip5",
                skills:["DIY_sichengliangyu"],
                enable:true,
                selectTarget:-1,
                filterTarget:function(card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function(){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_tiejixuanyu":{
                fullskin:true,
                vanish:true,
                derivation:"JX_cheliji",
                destroy:"DIY_chexuan",
                type:"equip",
                subtype:"equip5",
                skills:["DIY_tiejixuanyu"],
                enable:true,
                selectTarget:-1,
                filterTarget:function(card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function(){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_baihongjian":{
                fullskin:true,
                vanish:true,
                derivation:"JX_shen_sunquan",
                destroy:"DIY_dili",
                type:"equip",
                subtype:"equip1",
                distance:{
                    attackFrom:-1,
                },
                skills:["DIY_baihongjian"],
                selectTarget:-1,
                filterTarget:function (card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function (){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                image:"ext:天牢令/DIY_baihongjian.png",
                enable:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_liuxingjian":{
                fullskin:true,
                vanish:true,
                derivation:"JX_shen_sunquan",
                destroy:"DIY_dili",
                type:"equip",
                subtype:"equip1",
                skills:["DIY_liuxingjian"],
                selectTarget:-1,
                filterTarget:function (card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function (){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                image:"ext:天牢令/DIY_liuxingjian.png",
                enable:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_zidianjian":{
                fullskin:true,
                vanish:true,
                derivation:"JX_shen_sunquan",
                destroy:"DIY_dili",
                type:"equip",
                subtype:"equip1",
                distance:{
                    attackFrom:-2,
                },
                skills:["DIY_zidianjian"],
                selectTarget:-1,
                filterTarget:function (card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function (){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                image:"ext:天牢令/DIY_zidianjian.png",
                enable:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_bixiejian":{
                fullskin:true,
                vanish:true,
                derivation:"JX_shen_sunquan",
                destroy:"DIY_dili",
                type:"equip",
                subtype:"equip1",
                distance:{
                    attackFrom:-2,
                },
                skills:["DIY_bixiejian"],
                selectTarget:-1,
                filterTarget:function (card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function (){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                image:"ext:天牢令/DIY_bixiejian.png",
                enable:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_qingmingjian":{
                fullskin:true,
                vanish:true,
                derivation:"JX_shen_sunquan",
                destroy:"DIY_dili",
                type:"equip",
                subtype:"equip1",
                distance:{
                    attackFrom:-2,
                },
                skills:["DIY_qingmingjian"],
                selectTarget:-1,
                filterTarget:function (card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function (){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                image:"ext:天牢令/DIY_qingmingjian.png",
                enable:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
            "DIY_bailijian":{
                fullskin:true,
                vanish:true,
                derivation:"JX_shen_sunquan",
                destroy:"DIY_dili",
                type:"equip",
                subtype:"equip1",
                distance:{
                    attackFrom:-1,
                },
                skills:["DIY_bailijian"],
                selectTarget:-1,
                filterTarget:function (card,player,target){
        return target==player;
    },
                modTarget:true,
                allowMultiple:false,
                content:function (){
        if(cards.length&&get.position(cards[0],true)=='o') target.equip(cards[0]);
    },
                toself:true,
                image:"ext:天牢令/DIY_bailijian.png",
                enable:true,
                ai:{
                    basic:{
                        order:function(card,player){
                if(player&&player.hasSkillTag('reverseEquip')){
                    return 8.5-get.equipValue(card,player)/20;
                }
                else{
                    return 8+get.equipValue(card,player)/20;
                }
            },
                        useful:2,
                        equipValue:1,
                        value:function(card,player,index,method){
                if(player.isDisabled(get.subtype(card))) return 0.01;
                var value=0;
                var info=get.info(card);
                var current=player.getEquip(info.subtype);
                if(current&&card!=current){
                    value=get.value(current,player);
                }
                var equipValue=info.ai.equipValue;
                if(equipValue==undefined){
                    equipValue=info.ai.basic.equipValue;
                }
                if(typeof equipValue=='function'){
                    if(method=='raw') return equipValue(card,player);
                    if(method=='raw2') return equipValue(card,player)-value;
                    return Math.max(0.1,equipValue(card,player)-value);
                }
                if(typeof equipValue!='number') equipValue=0;
                if(method=='raw') return equipValue;
                if(method=='raw2') return equipValue-value;
                return Math.max(0.1,equipValue-value);
            },
                    },
                    result:{
                        target:function(player,target,card){
                return get.equipResult(player,target,card.name);
            },
                    },
                },
            },
        },
        translate:{
            "DIY_piliche":"霹雳车",
            "DIY_piliche_info":"当你对其他角色造成伤害时，你可以随机执行以下一项：<br>①弃置其装备区内的所有牌；②弃置其手牌区内的所有牌；③令其翻面。",
            "DIY_feilunzhanyu":"飞轮战舆",
            "DIY_feilunzhanyu_info":"其他角色的回合结束时，你可以令其交给你一张牌，然后弃置此牌。",
            "DIY_sichengliangyu":"四乘粮舆",
            "DIY_sichengliangyu_info":"一名角色的回合结束时，你可以摸两张牌，然后弃置此牌。",
            "DIY_tiejixuanyu":"铁蒺玄舆",
            "DIY_tiejixuanyu_info":"其他角色的回合结束时，你可以令其弃置两张牌，然后弃置此牌。",
            "DIY_baihongjian":"白虹剑",
            "DIY_baihongjian_info":"每回合限一次，你可以视为使用或打出一张【杀】。",
            "DIY_liuxingjian":"流星剑",
            "DIY_liuxingjian_info":"锁定技，你可以对攻击范围外的角色使用【杀】；当你不以此法使用【杀】指定目标时，你将手牌中所有的【杀】对其使用。",
            "DIY_zidianjian":"紫电剑",
            "DIY_zidianjian_info":"当你对一名角色造成一点伤害后，你可以将一张牌当作【雷杀】对距离其为一的角色使用。",
            "DIY_bixiejian":"辟邪剑",
            "DIY_bixiejian_info":"锁定技，当你成为一张【杀】的目标时，你须对此【杀】使用者使用一张【杀】以抵消此【杀】，否则你不可响应此【杀】。",
            "DIY_qingmingjian":"青冥剑",
            "DIY_qingmingjian_info":"当你使用【杀】指定目标后，你可以弃置一张牌或失去1点体力并摸一张牌，然后此【杀】不可响应。",
            "DIY_bailijian":"百里剑",
            "DIY_bailijian_info":"每回合限一次，你可以收回一张未造成伤害的伤害类牌。",
        },
        list:[],
    },
    skill:{
        skill:{
            "DIY_jijun":{
                audio:"xinfu_jijun",
                trigger:{
                    player:"useCardToPlayered",
                },
                forced:true,
                charlotte:true,
                logTarget:"_status.currentPhase",
                filter:function(event,player){
        return event.targets.length==1;
    },
                content:function (){
        player.judge(function(card){
            return 1;
        }).callback=lib.skill.DIY_jijun.callback;
        game.log(player,'集民意万千');
    },
                callback:function(){
        player.addToExpansion(card,'gain2').gaintag.add('DIY_jijun');
    },
                onremove:function(player,skill){
        var cards=player.getExpansions(skill);
        if(cards.length) player.loseToDiscardpile(cards);
    },
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                    mark:function(dialog,content,player){
            var content=player.getExpansions('DIY_jijun');
            if(content&&content.length){
                dialog.addAuto(content);
                if(player==game.me||player.isUnderControl()){
                    var list=lib.skill.DIY_fangtong.getAuto(player);
                    if(list.length>0){
                        dialog.addText('<li>推荐方案：'+get.translation(list[0])+'+ '+get.translation(list.slice(1)));
                    }
                }
            }
        },
                },
                marktext:"方",
                group:'DIY_jijun_judge',
                subSkill:{
                    judge:{
                        audio:"xinfu_jijun",
                        trigger:{
                            player:"judgeEnd",
                        },
                        charlotte:true,
                        forced:true,
                        filter:function(event,player){
                            return get.position(event.result.card,true)=='o';
                        },
                        content:function(){
                            player.addToExpansion(trigger.result.card,'gain2').gaintag.add('DIY_jijun');
                        },
                    },
                },
            },
            "DIY_fangtong":{
                getAuto:function (player){
        var hs=player.getCards('he');
        var ss=player.getExpansions('DIY_jijun');
        var bool=false;
        for(var i=0;i<hs.length;i++){
            var num=36-hs[i].number;
            for(var j=0;j<ss.length;j++){
                if(ss[j]==num){var k=-1;bool=true;break}
                for(var k=j+1;k<ss.length;k++){
                    if(ss[j].number+ss[k].number==num){var l=-1;bool=true;break}
                    for(var l=k+1;l<ss.length;l++){
                        if(ss[j].number+ss[k].number+ss[l].number==num){var m=-1;bool=true;break}
                        for(var m=l+1;m<ss.length;m++){
                            if(ss[j].number+ss[k].number+ss[l].number+ss[m].number==num){var n=-1;bool=true;break}
                            for(var n=m+1;n<ss.length;n++){
                                if(ss[j].number+ss[k].number+ss[l].number+ss[m].number+ss[n].number==num){var o=-1;bool=true;break}
                                for(var o=n+1;o<ss.length;o++){
                                    if(ss[j].number+ss[k].number+ss[l].number+ss[m].number+ss[n].number+ss[o].number==num){var p=-1;bool=true;break}
                                    for(var p=o+1;p<ss.length;p++){
                                        if(ss[j].number+ss[k].number+ss[l].number+ss[m].number+ss[n].number+ss[o].number+ss[p].number==num){bool=true;break}
                                    }
                                    if(bool) break;
                                }
                                if(bool) break;
                            }
                            if(bool) break;
                        }
                        if(bool) break;
                    }
                    if(bool) break;
                }
                if(bool) break;
            }
            if(bool) break;
        }
        if(!bool) return [];
        var list=[i,j,k,l,m,n,o,p];
        for(var q=0;q<list.length;q++){
            if(list[q]==-1){
                list=list.slice(0,q);
                break;
            }
            else if(q==0){
                list[q]=hs[i];
            }
            else list[q]=ss[list[q]];
        }
        return list;
    },
                audio:"xinfu_fangtong",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                filter:function (event,player){
        return player.countCards('he')>0&&player.getExpansions('DIY_jijun').length>0;
    },
                direct:true,
                skillAnimation:true,
                animationColor:"metal",
                content:function (){
        'step 0'
        var info=['是否发动【方统】？'];
        info.push('<div class="text center">'+get.translation(player)+'的“方”</div>');
        info.push(player.getExpansions('DIY_jijun'));
        if(player.countCards('h')){
            info.push('<div class="text center">'+get.translation(player)+'的手牌区</div>');
            info.push(player.getCards('h'));
        }
        if(player.countCards('e')){
            info.push('<div class="text center">'+get.translation(player)+'的装备区</div>');
            info.push(player.getCards('e'));
        }
        var next=player.chooseButton();
        next.set('createDialog',info);
        next.set('selectButton',function (){
            var num=0;
            for(var i=0;i<ui.selected.buttons.length;i++){
                num+=get.number(ui.selected.buttons[i]);
            }
            if(num==36) return ui.selected.buttons.length;
            return ui.selected.buttons.length+2;
        });
        next.set('filterButton',function(button){
            var player=_status.event.player,cards=player.getExpansions('DIY_jijun');
            if(ui.selected.buttons.length){
                if(!cards.contains(button.link)) return false;
            }
            else if(cards.contains(button.link)) return false;
            var num=0;
            for(var i=0;i<ui.selected.buttons.length;i++){
                num+=get.number(ui.selected.buttons[i]);
            }
            return get.number(button.link)+num<=36;
        });
        next.set('autolist',lib.skill.DIY_fangtong.getAuto(player));
        next.set('processAI',function(){
            if(_status.event.autolist&&_status.event.autolist.length>0){
                return {
                    bool:true,
                    links:_status.event.autolist,
                }
            }
        });
        next.set('complexSelect',true);
        'step 1'
        if(result.bool){
            player.logSkill('DIY_fangtong');
            var tothrow=[];
            var cards=result.links.slice(0);
            for(var i=0;i<cards.length;i++){
                if(get.position(cards[i])=='x'){
                    tothrow.push(cards[i]);
                }
                else{
                    player.discard(cards[i]).delay=false;
                }
            }
            player.loseToDiscardpile(tothrow);
            player.chooseTarget('选择一个目标并对其造成3点雷电伤害',true,function(card,player,target){
                return target!=player;
            }).set('ai',function(target){
                return get.damageEffect(target,_status.event.player,_status.event.player,'thunder');
            });
        }
        else{
            event.finish();
        }
        'step 2'
        var target=result.targets[0];
        player.line(target,'thunder');
        target.damage(3,'thunder');
    },
            },
            "DIY_guanchao":{
                audio:"xinfu_guanchao",
                unique:true,
                group:["DIY_guanchao_dizeng","DIY_guanchao_dijian"],
            },
            "DIY_guanchao_dizeng":{
                trigger:{
                    player:"useCard",
                },
                audio:"xinfu_guanchao",
                forced:true,
                mod:{
                    aiOrder:function(player,card,num){
            if(typeof card.number!='number') return;
            var history=player.getHistory('useCard',function(evt){
                return evt.isPhaseUsing();
            });
            if(history.length==0) return num+10*(14-card.number);
            var num=get.number(history[0].card);
            if(!num) return;
            for(var i=1;i<history.length;i++){
                var num2=get.number(history[i].card);
                if(!num2||num2<=num) return;
                num=num2;
            }
            if(card.number>num) return num+10*(14-card.number);
        },
                },
                filter:function (event,player){
        var history=player.getHistory('useCard',function(evt){
            return evt.isPhaseUsing();
        });
        if(history.length<2) return false;
        var num=get.number(history[0].card);
        if(!num) return false;
        for(var i=1;i<history.length;i++){
            var num2=get.number(history[i].card);
            if(!num2||num2<=num) return false;
            num=num2;
        }
        return true;
    },
                content:function (){
        if(get.number(trigger.card,false)+1>13){
            player.draw();
            event.finish();
        }
        var num=get.number(trigger.card,false)+1,card=get.cardPile2(function(i){
                    return get.number(i,false)==num;
                });
        if(card) player.gain(card,'gain2');
    },
            },
            "DIY_guanchao_dijian":{
                init:function (player){
        player.storage.guanchao=0;
    },
                onremove:function (player){
        delete player.storage.guanchao;
    },
                trigger:{
                    player:"useCard",
                },
                audio:"xinfu_guanchao",
                forced:true,
                mod:{
                    aiOrder:function(player,card,num){
            if(typeof card.number!='number') return;
            var history=player.getHistory('useCard',function(evt){
                return evt.isPhaseUsing();
            });
            if(history.length==0) return num+10*card.number;
            var num=get.number(history[0].card);
            if(!num) return;
            for(var i=1;i<history.length;i++){
                var num2=get.number(history[i].card);
                if(!num2||num2>=num) return;
                num=num2;
            }
            if(card.number<num) return num+10*card.number;
        },
                },
                filter:function (event,player){
        var history=player.getHistory('useCard',function(evt){
            return evt.isPhaseUsing();
        });
        if(history.length<2) return false;
        var num=get.number(history[0].card);
        if(!num) return false;
        for(var i=1;i<history.length;i++){
            var num2=get.number(history[i].card);
            if(!num2||num2>=num) return false;
            num=num2;
        }
        return true;
    },
                content:function (){
        if(get.number(trigger.card,false)-1<1){
            player.draw();
            event.finish();
        }
        var num=get.number(trigger.card,false)-1,card=get.cardPile2(function(i){
                    return get.number(i,false)==num;
                });
        if(card) player.gain(card,'gain2');
    },
            },
            "DIY_xunxian":{
                audio:"xinfu_xunxian",
                trigger:{
                    player:["useCardAfter","respond"],
                },
                filter:function (event,player){
        if(get.itemtype(event.cards)!='cards') return false;
        if(player.getHistory('custom',function(evt){
            return evt.DIY_xunxian_name==event.card.name;
        }).length>0) return false;
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].isInPile()){
                return true;
            }
        }
        return false;
    },
                direct:true,
                content:function (){
        'step 0'
        player.getHistory('custom').push({DIY_xunxian_name:trigger.card.name});
        player.chooseTarget(get.prompt('DIY_xunxian'),'将'+get.translation(trigger.cards)+'交给一名其他角色',function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            var att=get.attitude(_status.event.player,target);
            if(att<3) return 0;
            if(target.hasJudge('lebu')){
                att/=5;
            }
            if(target.hasSha()&&_status.event.sha){
                att/=5;
            }
            if(_status.event.wuxie&&target.needsToDiscard(1)){
                att/=5;
            }
            return att/(1+get.distance(player,target,'absolute'));
        }).set('sha',trigger.cards[0].name=='sha').set('wuxie',trigger.cards[0].name=='wuxie');
        'step 1'
        if(result.bool){
            var list=[];
            for(var i=0;i<trigger.cards.length;i++){
                if(trigger.cards[i].isInPile()){
                    list.push(trigger.cards[i]);
                }
            }
            player.logSkill('DIY_xunxian',result.targets[0]);
            result.targets[0].gain(list,'gain2');
            if(_status.currentPhase!=player) player.draw();
        }
    },
                ai:{
                    expose:0.3,
                },
            },
            "DIY_funan":{
                audio:"funan",
                trigger:{
                    global:["respond","useCard"],
                },
                frequent:true,
                filter:function(event,player){
        if(!event.respondTo) return false;
        if(event.player==player) return false;
        if(player!=event.respondTo[0]) return false;
        if(!player.hasSkill('funan_jiexun')){
            var cards=[]
            if(get.itemtype(event.respondTo[1])=='card') cards.push(event.respondTo[1]);
            else if(event.respondTo[1].cards) cards.addArray(event.respondTo[1].cards);
            return cards.filterInD('od').length>0;
        }
        else return event.cards.filterInD('od').length>0;
    },
                logTarget:"player",
                content:function(){
        var cards=trigger.cards.filterInD('od');
        player.gain(cards,'log','gain2');
    },
            },
            "DIY_xunjie":{
                audio:"jiexun",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                onremove:true,
                direct:true,
                content:function(){
        'step 0'
        var num1=game.countPlayer(function(current){
            return current.countCards('ej',{suit:'diamond'});
        });
        var num2=player.countMark('DIY_xunjie');
        event.num1=num1;
        event.num2=num2;
        var str='令目标摸'+get.cnNumber(num1)+'张牌';
        if(num2){
            str+='，然后弃置'+get.cnNumber(num2)+'张牌';
        }
        player.chooseTarget(get.prompt('DIY_xunjie'),function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            return _status.event.coeff*get.attitude(_status.event.player,target);
        }).set('coeff',num1>=num2?1:-1).set('prompt2',str);
        'step 1'
        if(result.bool){
            var num3=player.countMark('DIY_xunjie_draw');
        var num4=player.countMark('DIY_xunjie');
        if(num3>0){
            player.draw(num3);
        }
            var target=result.targets[0];
            event.target=target;
            player.logSkill('DIY_xunjie',target);
            if(event.num1){
                target.draw(event.num1);
            }
            player.addMark('DIY_xunjie',1,false);
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.num2){
            event.target.chooseToDiscard(event.num2,true,'he');
        }
        else{
            event.finish();
        }
        'step 3'
        if(result.bool&&result.autochoose&&result.cards.length==result.rawcards.length){
            player.addMark('DIY_xunjie_draw',1,false);
        }
    },
                intro:{
                    content:"已经发动过了#次",
                },
            },
            "DIY_jianyan":{
                intro:{
                    content:"$",
                },
                audio:"jianyan",
                enable:"phaseUse",
                usable:3,
                delay:false,
                content:function(){
        "step 0"
        var list=['basic','trick','equip'];
        for(i in list){
            if(player.getStorage('DIY_jianyan').contains(i)) list.remove(i);
        }
        if(player.getStorage('DIY_jianyan').contains('basic')) list.remove('basic');
        if(player.getStorage('DIY_jianyan').contains('trick')) list.remove('trick');
        if(player.getStorage('DIY_jianyan').contains('equip')) list.remove('equip');
        player.chooseControl(list).set('ai',function(){
            var player=_status.event.player;
            if(!player.hasSha()) return 'basic';
            if(player.countCards('e')<=1) return 'equip';
            if(player.countCards('h')>2) return 'trick';
            return 'trick';
        });
        "step 1"
        player.markAuto('DIY_jianyan',[result.control]);
        event.card=get.cardPile(function(card){
            if(get.type(card)==result.control) return true;
            return false;
        },'cardPile');
        if(!event.card){
            event.finish();
            player.popup('牌堆中没有'+get.translation(result.control)+'牌了');
            return;
        }
        player.showCards([event.card]);
        "step 2"
        player.chooseTarget(true,'选择一名角色送出'+get.translation(event.card)).set('ai',function(target){
            var att=get.attitude(_status.event.player,target);
            if(_status.event.neg) return -att;
            return att;
        }).set('neg',get.value(event.card,player,'raw')<0);
        "step 3"
        player.line(result.targets,'green');
        result.targets[0].gain(event.card,'gain2');

    },
                ai:{
                    order:9,
                    result:{
                        player:function(player){
                if(game.hasPlayer(function(current){
                    return get.attitude(player,current)>0;
                })) return 2;
                return 0;
            },
                    },
                    threaten:1.2,
                },
                group:"DIY_jianyan_remove",
                subSkill:{
                    remove:{
                        trigger:{
                            player:"phaseUseEnd",
                        },
                        direct:true,
                        content:function(){
                            delete player.storage.DIY_jianyan;
            },
                        sub:true,
                    },
                },
            },
            "DIY_zhuhai":{
                audio:"zhuhai",
                trigger:{
                    global:"phaseJieshuBegin",
                },
                check:function(event,player){
        return get.damageEffect(event.player,player,player)>0;
    },
                filter:function(event,player){
        if(event.player==player||!event.player.isAlive()) return false;
        if(!lib.filter.targetEnabled({name:'sha'},player,event.player)) return false;
        var history=event.player.getHistory('useCard');
        for(var i=0;i<history.length;i++){
            if(!history[i].targets) continue;
            for(var j=0;j<history[i].targets.length;j++){
                if(history[i].targets[j]!=event.player) return true;
            }
        }
        return false;
    },
                prompt:"诛害：是否对其使用一张杀？",
                content:function(){
                    player.useCard({name:'sha',isCard:true},trigger.player,false,'noai');
    },
            },
            "DIY_qianya":{
                audio:"qianya",
                trigger:{
                    target:"useCardToTargeted",
                },
                frequent:true,
                filter:function(event,player){
        return get.type(event.card,'trick')=='trick'&&event.targets.length>0;
    },
                content:function(){
        "step 0"
        var num=Math.min(3,trigger.targets.length);
        event.card=get.cards(num);
        player.showCards(event.card);
        player.chooseTarget('选择获得此牌的角色',true).set('ai',function(target){
            var att=get.attitude(_status.event.player,target);
            if(_status.event.du){
                if(target.hasSkillTag('nodu')) return 0;
                return -att;
            }
            if(att>0){
                return att+Math.max(0,5-target.countCards('h'));
            }
            return att;
        }).set('du',event.card.name=='du');
        "step 1"
        if(result.targets){
            player.line(result.targets,'green');
            result.targets[0].gain(event.card,'gain2');
        }
    },
            },
            "DIY_shuomeng":{
                audio:"shuimeng",
                trigger:{
                    player:["phaseUseBefore","phaseUseAfter"],
                },
                group:"DIY_shuomeng2",
                direct:true,
                filter:function(event,player){
        return player.countCards('h');
    },
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt2('DIY_shuomeng'),function(card,player,target){
            return player.canCompare(target);
        }).set('ai',function(target){
            if(!_status.event.goon) return 0;
            return -get.attitude(_status.event.player,target);
        }).set('goon',player.needsToDiscard()||player.hasCard(function(card){
            var val=get.value(card);
            if(val<0) return true;
            if(val<=5){
                return card.number>=11;
            }
            if(val<=6){
                return card.number>=12;
            }
            return false;
        }));
        'step 1'
        if(result.bool){
            player.logSkill('DIY_shuomeng',result.targets);
            event.target=result.targets[0];
            player.chooseToCompare(event.target);
        }
        else{
            event.finish();
        }
    },
            },
            "DIY_shuomeng2":{
                forced:true,
                audio:"shuimeng",
                trigger:{
                    player:["chooseToCompareAfter","compareMultipleAfter"],
                    target:["chooseToCompareAfter","compareMultipleAfter"],
                },
                filter:function(event,player){
        if(event.preserve) return false;
        if(player==event.player){
            if(event.num1>event.num2){
                return !get.owner(event.card2);
            }
            else{
                return !get.owner(event.card1);
            }
        }
        else{
            if(event.num1<event.num1){
                return !get.owner(event.card1);
            }
            else{
                return !get.owner(event.card2);
            }
        }
    },
                content:function(){
        if(player==trigger.player){
            if(trigger.num1>trigger.num2){
                player.chooseUseTarget({name:'wuzhong',isCard:true},true);
            }
            else{
               trigger.player.useCard({name:'guohe',isCard:true},player);
            }
        }
        else{
            if(trigger.num1<trigger.num2){
                trigger.player.useCard({name:'guohe',isCard:true},player);
            }
            else{
                player.chooseUseTarget({name:'wuzhong',isCard:true},true);
            }
        }
    },
            },
            "DIY_zhenyong":{
                trigger:{
                    player:"useCardToPlayered",
                },
                direct:true,
                audio:"drlt_zhenrong",
                filter:function (event,player){
        if(get.type2(event.card)=='equip') return false;
        if(event.getParent().triggeredTargets3.length>1) return false;
		if(event.targets.length==1&&event.targets[0]==player) return false;
        return event.targets.length>0;
    },
                content:function(){
        'step 0'
		player.logSkill('DIY_zhenyong');
        player.judge(function(card){
               if(get.color(card)=="red") return 2;
               return 0;
             }).judge2=function(result){
               return result.bool?true:false;
             };
        'step 1'
        if(!result.bool){
            event.goto(5);
        }
        'step 2'
        player.chooseTarget(get.prompt('DIY_zhenyong'),'将一名角色的一张牌置于你的武将牌上，称为「荣」',function(card,player,target){
            return target!=player&&_status.event.targets.contains(target)&&target.countCards('he')>0;
        }).set('ai',function(target){
            return (1-get.attitude(_status.event.player,target))/target.countCards('he');
        }).set('targets',trigger.targets);
        'step 3'
        if(result.bool){
            var target=result.targets[0];
            event.target=result.targets[0];
            player.logSkill('DIY_zhenyong',target);
            player.choosePlayerCard(target,'he',true).ai=get.buttonValue;
        }
        else event.finish();
        'step 4'
        if(result.bool){
            var card=result.links[0];
            game.log(player,'选择了',card);
            target.$give(card,player,false);
            target.lose(card,ui.special,'toStorage');
            if(!player.storage.DIY_zhenyong) player.storage.DIY_zhenyong=[];
            player.storage.DIY_zhenyong.push(card);
            player.markSkill('DIY_zhenyong');
        }
        'step 5'
        game.delayx();
    },
                marktext:"荣",
                intro:{
                    content:"cards",
                    onunmark:"throw",
                },
            },
            "DIY_hongju":{
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                audio:"drlt_hongju",
                forced:true,
                unique:true,
                juexingji:true,
                skillAnimation:true,
                animationColor:"thunder",
                derivation:"DIY_qingce",
                filter:function(event,player){
        return player.storage.DIY_zhenyong&&player.storage.DIY_zhenyong.length>=3;
    },
                content:function(){
        'step 0'
        player.awakenSkill('DIY_hongju');
        var cards=player.getStorage('DIY_zhenyong');
        if(!cards.length||!player.countCards('h')){
            event.goto(2);
            return;
        }
        var next=player.chooseToMove('征荣：是否交换“荣”和手牌？');
        next.set('list',[
            [get.translation(player)+'（你）的“荣”',cards],
            ['手牌区',player.getCards('h')],
        ]);
        next.set('filterMove',function(from,to){
            return typeof to!='number';
        });
        next.set('processAI',function(list){
            var player=_status.event.player,cards=list[0][1].concat(list[1][1]).sort(function(a,b){
                return get.value(a)-get.value(b);
            }),cards2=cards.splice(0,player.storage.DIY_zhenyong.length);
            return [cards2,cards];
        });
        'step 1'
        if(result.bool){
            var pushs=result.moved[0],gains=result.moved[1];
            pushs.removeArray(player.storage.DIY_zhenyong);
            gains.removeArray(player.getCards('h'));
            if(!pushs.length||pushs.length!=gains.length) return;
            player.lose(pushs,ui.special,'toStorage');
            game.log(player,'将',pushs,'作为“荣”置于武将牌上');
            player.gain(gains,'gain2','log','fromStorage');
            player.storage.DIY_zhenyong.addArray(pushs);
            player.storage.DIY_zhenyong.removeArray(gains);
            player.markSkill('DIY_zhenyong');
        }
        'step 2'
        player.addSkill('DIY_qingce');
        game.log(player,'获得了技能','#g【清侧】');
        player.loseMaxHp();
    },
            },
            "DIY_qingce":{
                trigger:{
                    player:"phaseUseBegin",
                },
                audio:"drlt_qingce",
                init:function(player){
        if(!player.storage.DIY_qingce2) player.storage.DIY_qingce2=[];
    },
                filter:function(event,player){
        return player.storage.DIY_zhenyong&&player.storage.DIY_zhenyong.length>=1;
    },
                content:function(){
        'step 0'
        var cards=player.getStorage('DIY_zhenyong');
        if(!cards.length||!player.countCards('h')){
            event.goto(2);
            return;
        }
        var next=player.chooseToMove('征荣：是否交换“荣”和手牌？');
        next.set('list',[
            [get.translation(player)+'（你）的“荣”',cards],
            ['手牌区',player.getCards('h')],
        ]);
        next.set('filterMove',function(from,to){
            return typeof to!='number';
        });
        next.set('processAI',function(list){
            var player=_status.event.player,cards=list[0][1].concat(list[1][1]).sort(function(a,b){
                return get.value(a)-get.value(b);
            }),cards2=cards.splice(0,player.storage.DIY_zhenyong.length);
            return [cards2,cards];
        });
        'step 1'
        if(result.bool){
            var pushs=result.moved[0],gains=result.moved[1];
            pushs.removeArray(player.storage.DIY_zhenyong);
            gains.removeArray(player.getCards('h'));
            if(!pushs.length||pushs.length!=gains.length) return;
            player.lose(pushs,ui.special,'toStorage');
            game.log(player,'将',pushs,'作为“荣”置于武将牌上');
            player.gain(gains,'gain2','log','fromStorage');
            player.storage.DIY_zhenyong.addArray(pushs);
            player.storage.DIY_zhenyong.removeArray(gains);
            player.markSkill('DIY_zhenyong');
        }
        'step 2'
        player.storage.DIY_qingce2=player.storage.DIY_qingce2.concat(player.getCards('h'));
        game.addVideo('storage',player,['DIY_qingce2',get.cardsInfo(player.storage.DIY_qingce2),'cards']);
        player.lose(player.getCards('h'),ui.special,'toStorage');
        player.addSkill('DIY_qingce2');
        'step 3'
        var num=Math.min(8,player.storage.DIY_zhenyong.length);
        var list=[];
        var typelist=[];
        var getType=function(card){
            var sub=get.subtype(card);
            if(sub) return sub;
            return card.name;
        };
        for(var i=0;i<ui.cardPile.childElementCount;i++){
            var node=ui.cardPile.childNodes[i];
            var typex=getType(node);
            if(!typelist.contains(typex)){
                list.push(node);
                typelist.push(typex);
                if(list.length>=num) break;
            }
        }
        if(list.length<num){
            for(var i=0;i<ui.discardPile.childElementCount;i++){
                var node=ui.discardPile.childNodes[i];
                var typex=getType(node);
                    if(!typelist.contains(typex)){
                    list.push(node);
                    typelist.push(typex);
                    if(list.length>=num) break;
                }
            }
        }
        player.gain(list,'gain2');
        player.addTempSkill("DIY_qingce3");
        player.addTempSkill("DIY_qingce4");
        'step 4'
        game.updateRoundNumber();
    },
            },
            "DIY_qingce2":{
                trigger:{
                    global:"phaseJieshuBegin",
                },
                forced:true,
				direct:true,
                audio:"drlt_qingce",
                content:function(){
        player.gain(player.storage.DIY_qingce2,'fromStorage','draw');
		player.logSkill('DIY_qingce');
        player.storage.DIY_qingce2.length=0;
        player.removeSkill('DIY_qingce2');
        game.addVideo('storage',player,['DIY_qingce2',get.cardsInfo(player.storage.DIY_qingce2),'cards']);
    },
                mark:true,
				marktext:"清侧",
                intro:{
					name:'清侧',
                    content:"cardCount",
                    onunmark:function(storage,player){
            if(storage&&storage.length){
                player.$throw(storage,1000);
                game.cardsDiscard(storage);
                game.log(storage,'被置入了弃牌堆');
                player.storage.DIY_qingce2.length=0;
            }
        },
                },
				sub:true,
            },
            "DIY_qingce3":{
                trigger:{
                    player:"phaseUseAfter",
                },
                charlotte:true,
                forced:true,
				direct:true,
				sub:true,
                content:function(){
		player.logSkill('DIY_qingce');
        player.discard(player.getCards('he'));
    },
            },
            "DIY_qingce4":{
                direct:true,
                enable:"phaseUse",
                usable:1,
                content:function (){
        'step 0'
        var cards=player.getStorage('DIY_zhenyong');
        if(!cards.length||!player.countCards('h')){
            event.goto(2);
            return;
        }
        var next=player.chooseToMove('征荣：是否交换“荣”和手牌？');
        next.set('list',[
            [get.translation(player)+'（你）的“荣”',cards],
            ['手牌区',player.getCards('h')],
        ]);
        next.set('filterMove',function(from,to){
            return typeof to!='number';
        });
        next.set('processAI',function(list){
            var player=_status.event.player,cards=list[0][1].concat(list[1][1]).sort(function(a,b){
                return get.value(a)-get.value(b);
            }),cards2=cards.splice(0,player.storage.DIY_zhenyong.length);
            return [cards2,cards];
        });
        'step 1'
        if(result.bool){
            var pushs=result.moved[0],gains=result.moved[1];
            pushs.removeArray(player.storage.DIY_zhenyong);
            gains.removeArray(player.getCards('h'));
            if(!pushs.length||pushs.length!=gains.length) return;
            player.lose(pushs,ui.special,'toStorage');
            game.log(player,'将',pushs,'作为“荣”置于武将牌上');
			player.logSkill('DIY_qingce');
            player.gain(gains,'gain2','log','fromStorage');
            player.storage.DIY_zhenyong.addArray(pushs);
            player.storage.DIY_zhenyong.removeArray(gains);
            player.markSkill('DIY_zhenyong');
        }
    },
	            sub:true,
            },
            "DIY_yuanhu":{
                audio:"yuanhu",
                enable:"phaseUse",
                filterCard:true,
                selectCard:1,
                filterTarget:true,
                derivation:"DIY_yuanhu_equip5",
                content:function(){
        'step 1'
        var suit=get.suit(cards);
        if (suit=='spade') {
            var card1=game.createCard(get.inpile('equip1').randomGet());
            target.equip(card1);
            target.$draw(card1);
            game.delay();
            player.useSkill('DIY_yuanhu2',false);
        }
        if (suit=='heart') {
            var card2=game.createCard(get.inpile('equip2').randomGet());
            target.equip(card2);
            target.$draw(card2);
            game.delay();
            target.draw();
        }
        if (suit=='diamond') {
            var num = [1, 2].randomGet();
            if (num == 1) {
                var card3=game.createCard(get.inpile('equip3').randomGet());
                target.equip(card3);
                target.$draw(card3);
                game.delay();
                target.recover();
            }
            if (num == 2) {
                var card4=game.createCard(get.inpile('equip4').randomGet());
                target.equip(card4);
                target.$draw(card4);
                game.delay();
                target.recover();
            }
        }
        if (suit=='club') {
            var card5=game.createCard(get.inpile('equip5').randomGet());
            target.equip(card5);
            target.$draw(card5);
            game.delay();
            target.addTempSkill('DIY_yuanhu_equip5');
            target.addMark('DIY_yuanhu_equip5', 1, false);
        }
        'step 2'
        event.finish();
    },
            },
            "DIY_yuanhu2":{
                direct:true,
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt('DIY_yuanhu'),function(card,player,target){
            return target.countDiscardableCards(player,'ej')>0;
        }).ai=function(target){
            var att=get.attitude(player,target);
            if(att>0){
                if(target.hp==1&&target.maxHp>1) return att*2;
            }
            return att;
        };
        'step 1'
        if(result.bool){
            player.logSkill('DIY_yuanhu',result.targets);
            player.discardPlayerCard(true,result.targets[0],'ej');
        }
    },
            },
            "DIY_yuanhu_equip5":{
                mod:{
                    maxHandcard:function (player, num) {
            return num + (player.countMark('DIY_yuanhu_equip5') || 0);
        },
                },
				nobracket:true,
                marktext:"援护",
                intro:{
                    name:"援护",
                    content:function (storage) {
            return '手牌上限+' + storage;
        },
                },
            },
            "DIY_bizhuan":{
                audio:"bizhuan",
                trigger:{
                    player:"useCard",
                    target:"useCardToTargeted",
                },
                filter:function(event,player){
        if(event.name!='useCard'&&event.player==event.target) return false;
        return get.color(event.card)=='black';
    },
                init:function(player){
        if(!player.storage.DIY_bizhuan) player.storage.DIY_bizhuan=[];
    },
                intro:{
                    content:"cards",
                    onunmark:function(storage,player){
            if(storage&&storage.length){
                player.$throw(storage,1000);
                game.cardsDiscard(storage);
                game.log(storage,'被置入了弃牌堆');
             storage.length=0;
            }
        },
                },
                frequent:true,
                content:function(){
        var card=game.cardsGotoSpecial(get.cards()).cards[0];
        player.$draw(card);
        game.delay();
        player.storage.DIY_bizhuan.push(card);
        player.markSkill('DIY_bizhuan');
    },
                mod:{
                    maxHandcard:function(player,num){
            if(player.storage.DIY_bizhuan&&player.storage.DIY_bizhuan.length) return num+player.storage.DIY_bizhuan.length;
        },
                },
            },
            "DIY_tongbo":{
                trigger:{
                    player:"phaseDrawAfter",
                },
                direct:true,
                filter:function(event,player){
        return player.storage.DIY_bizhuan&&player.storage.DIY_bizhuan.length&&player.countCards('he')>0;
    },
                content:function(){
        "step 0"
        var four=false;
        var nofour=!player.hasFriend();
        if(player.storage.DIY_bizhuan.length==4){
            var suits=['club','spade','heart','diamond'];
            var list=player.getCards('he').concat(player.storage.DIY_bizhuan);
            for(var i=0;i<list.length;i++){
                suits.remove(get.suit(list[i]));
                if(suits.length==0){
                    four=true;
                    break;
                }
            }
        }
        var next=player.chooseToMove('通博：是否交换“书”和手牌？').set('four',four).set('suits2',suits2).set('nofour',nofour);
        next.set('list',[
            [get.translation(player)+'（你）的“书”',player.storage.DIY_bizhuan],
            ['你的牌',player.getCards('he')],
        ]);
        next.set('filterMove',function(from,to){
            return typeof to!='number';
        });
        next.set('processAI',function(list){
            var player=_status.event.player,cards=list[0][1].concat(list[1][1]),cards2=[];
            if(_status.event.four){
                var sorted=[[],[],[],[]];
                for(var i of cards){
                    var index=lib.suit.indexOf(get.suit(i,false));
                    if(sorted[index]) sorted[index].push(i);
                }
                if(_status.event.nofour){
                    sorted.sort(function(a,b){
                        return a.length-b.length;
                    });
                    var cards3=cards.slice(0).sort(function(a,b){
                        return get.useful(a)-get.useful(b);
                    });
                    cards3.removeArray(sorted[0]);
                    cards2=cards3.slice(0,4);
                    cards.removeArray(cards2);
                }
                else{
                    for(var i of sorted){
                        cards2.push(i.randomGet());
                        cards.remove(cards2);
                    }
                }
            }
            else{
                cards.sort(function(a,b){
                    return get.useful(a)-get.useful(b);
                });
                cards2=cards.splice(0,player.storage.DIY_bizhuan.length);
            }
            return [cards2,cards];
        });
        "step 1"
        if(result.bool){
            var pushs=result.moved[0],gains=result.moved[1];
            pushs.removeArray(player.storage.DIY_bizhuan);
            gains.removeArray(player.getCards('he'));
            if(!pushs.length||pushs.length!=gains.length){
                event.finish();
                return;
            }
            player.logSkill('DIY_tongbo');
            player.lose(pushs,ui.special,'toStorage');
            game.log(player,'将',pushs,'作为“书”置于武将牌上');
            player.gain(gains,'gain2','log','fromStorage');
            player.storage.DIY_bizhuan.addArray(pushs);
            player.storage.DIY_bizhuan.removeArray(gains);
            player.markSkill('DIY_bizhuan');
        }
        "step 2"
        var suits2=['club','spade','heart','diamond'];
        for(var i=0;i<player.storage.DIY_bizhuan.length;i++){
            suits2.remove(get.suit(player.storage.DIY_bizhuan[i]));
        }
        if(suits2.length>0){
            event.finish();
        }
        "step 3"
        event.cards=player.storage.DIY_bizhuan.slice(0);
        player.storage.DIY_bizhuan.length=0;
        player.unmarkSkill('DIY_bizhuan');
        "step 4"
        if(event.cards.length>1){
            player.chooseCardButton('将“书”交给任意名角色',true,event.cards,[1,event.cards.length]).set('ai',function(button){
                if(ui.selected.buttons.length==0) return 1;
                return 0;
            });
        }
        else if(event.cards.length==1){
            event._result={links:event.cards.slice(0),bool:true};
        }
        else{
            event.finish();
        }
        "step 5"
        if(result.bool){
            for(var i=0;i<result.links.length;i++){
                event.cards.remove(result.links[i]);
            }
            event.togive=result.links.slice(0);
            player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
                var att=get.attitude(_status.event.player,target);
                if(_status.event.enemy){
                    return -att;
                }
                else if(att>0){
                    return att/(1+target.countCards('h'));
                }
                else{
                    return att/100;
                }
            }).set('enemy',get.value(event.togive[0],player,'raw')<0);
        }
        else{
            event.finish();
        }
        "step 6"
        if(result.targets.length){
            result.targets[0].gain(event.togive,'draw');
            player.line(result.targets[0],'green');
            game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张','#g“书”');
            if(event.cards.length) event.goto(4);
        }
    },
                ai:{
                    combo:"DIY_bizhuan",
                },
            },
            "DIY_jieying":{
                audio:"hfjieying",
                locked:false,
                global:["DIY_jieying_mark","DIY_jieying_mark2"],
                group:["DIY_jieying_1","DIY_jieying_2","DIY_jieying_3","DIY_jieying_mark2"],
                subSkill:{
                    "1":{
                        audio:"hfjieying",
                        trigger:{
                            player:"phaseZhunbeiBegin",
                        },
                        forced:true,
                        filter:function(event,player){
                return !game.hasPlayer(function(current){
                    return current.hasMark('DIY_jieying_mark');
                });
            },
                        content:function(){
                player.addMark('DIY_jieying_mark',1);
            },
                        sub:true,
                    },
                    "2":{
                        audio:"hfjieying",
                        trigger:{
                            player:"phaseJieshuBegin",
                        },
                        direct:true,
                        filter:function(event,player){
                return player.hasMark('DIY_jieying_mark');
            },
                        content:function(){
                'step 0'
                player.chooseTarget(get.prompt('DIY_jieying'),"将“节”交给一名角色；其使用【杀】或普通锦囊牌无距离限制且可多指定一个目标，且当其造成伤害后，若其没有〖节应〗，其无法再使用牌直到回合结束。该角色回合结束后，其移去“节”标记，然后你获得其所有手牌。",function(card,player,target){
                    return target!=player;
                }).ai=function(target){
                    if(get.attitude(player,target)>0)
                    return 0.1;
                    if(get.attitude(player,target)<1&&(target.isTurnedOver()||target.countCards('h')<1))
                    return 0.2;
                        if(get.attitude(player,target)<1&&target.countCards('h')>0&&target.countCards('j',{name:'lebu'})>0)
                    return target.countCards('h')*0.8+target.getHandcardLimit()*0.7+2;
                    if(get.attitude(player,target)<1&&target.countCards('h')>0)
                    return target.countCards('h')*0.8+target.getHandcardLimit()*0.7;
                    return 1;
                };
                'step 1'
                if(result.bool){
                    var target=result.targets[0];
                    player.line(target);
                    player.logSkill('DIY_jieying',target);
                    var mark=player.countMark('DIY_jieying_mark');
                    player.removeMark('DIY_jieying_mark',mark);
                    target.addMark('DIY_jieying_mark',mark);
                };
            },
                        sub:true,
                    },
                    "3":{
                        audio:"hfjieying",
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        filter:function(event,player){
                return player!=event.player&&event.player.hasMark('DIY_jieying_mark')&&event.player.isAlive();
            },
                        logTarget:"player",
                        content:function(){
                if(trigger.player.countCards('h')>0){
                    trigger.player.give(trigger.player.getCards('h'),player);
                }
                trigger.player.removeMark('DIY_jieying_mark',trigger.player.countMark('DIY_jieying_mark'));
            },
                        sub:true,
                    },
                },
            },
            "DIY_weipo":{
                audio:"weipo",
                trigger:{
                    target:"useCardToTargeted",
                },
                forced:true,
                filter:function(event,player){
        return player!=event.player&&player.countCards('h')<Math.min(5,player.maxHp)&&(event.card.name=='sha'||get.type(event.card)=='trick');
    },
                content:function(){
        'step 0'
        player.addTempSkill('weipo2');
        player.drawTo(Math.min(5,player.maxHp));
        'step 1'
        var evt=trigger.getParent();
        if(!evt.weipo) evt.weipo={};
        evt.weipo[player.playerid]=player.countCards('h');
    },
            },
            "DIY_jieying_mark":{
                mod:{
                    targetInRange:function(card,player){
            if(player.hasMark('DIY_jieying_mark')&&player==_status.currentPhase&&(card.name=='sha'||get.type(card)=='trick')) return true;
        },
                    aiOrder:function(player,card,num){
            var info=get.info(card);
            if(!get.tag(card,'damage')&&(!info||!info.toself)) return num+8;
        },
                },
                onremove:true,
                trigger:{
                    player:"useCard2",
                },
                audio:"hfjieying_mark",
                direct:true,
                filter:function(event,player){
        if(!player.hasMark('DIY_jieying_mark')) return false;
        if(player!=_status.currentPhase) return false;
        var card=event.card;
        if(card.name!='sha'&&get.type(card)!='trick')return false;
        var info=get.info(card);
        if(info.allowMultiple==false) return false;
        if(event.targets&&!info.multitarget){
            if(game.hasPlayer(function(current){
                return !event.targets.contains(current)&&lib.filter.targetEnabled2(card,player,current);
            })){
                return true;
            }
        }
        return false;
    },
                content:function(){
        'step 0'
        var prompt2='为'+get.translation(trigger.card)+'增加一个目标'
        player.chooseTarget(get.prompt('DIY_jieying_mark'),function(card,player,target){
            var player=_status.event.player;
            return !_status.event.targets.contains(target)&&lib.filter.targetEnabled2(_status.event.card,player,target);
        }).set('prompt2',prompt2).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            return get.effect(target,trigger.card,player,player);
        }).set('card',trigger.card).set('targets',trigger.targets);
        'step 1'
        if(result.bool){
            if(!event.isMine()&&!event.isOnline()) game.delayx();
            event.targets=result.targets;
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.targets){
            player.logSkill('DIY_jieying_mark',event.targets);
            trigger.targets.addArray(event.targets);
        }
    },
                group:"DIY_jieying_mark3",
                mark:true,
                marktext:"节",
                intro:{
                    content:"使用【杀】或普通锦囊牌时无距离限制且可以多指定一个目标",
                },
            },
            "DIY_jieying_mark2":{
                trigger:{
                    source:"damageSource",
                },
                forced:true,
                popup:false,
                filter:function(event,player){
        return player.hasMark('DIY_jieying_mark')&&player==_status.currentPhase&&!player.hasSkill('DIY_jieying');
    },
                content:function(){
        player.addTempSkill('DIY_jieying_mark3');
    },
            },
            "DIY_jieying_mark3":{
                mod:{
                    cardEnabled:function(card,player){
            if(player.hasSkill('DIY_jieying_mark3')) return false;
        },
                    cardSavable:function(card,player){
            if(player.hasSkill('DIY_jieying_mark3')) return false;
        },
                },
                mark:true,
                marktext:"节应",
                intro:{
                    content:"不能使用牌直到回合结束",
                },
            },
            "DIY_juzhan":{
                audio:"nzry_juzhan_1",
                locked:false,
                group:["DIY_juzhan_1","DIY_juzhan_2"],
                subSkill:{
                    "1":{
                        audio:"nzry_juzhan_1",
                        trigger:{
                            target:"useCardToTargeted",
                        },
                        "prompt2":"当你成为其他角色【杀】的目标后，你可以与其各摸一张牌，然后其本回合内不能再对你使用牌。",
                        filter:function(event,player){
                return (get.type(event.card)=='basic'||get.type(event.card)=='trick')&&get.tag(event.card,'damage')>0;
            },
                        logTarget:"player",
                        content:function(){
                game.asyncDraw([player,trigger.player]);
                trigger.player.addTempSkill('DIY_juzhan_y');
                player.addTempSkill('DIY_juzhan_x');
            },
                        sub:true,
                    },
                    "2":{
                        audio:"nzry_juzhan_1",
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        "prompt2":"当你使用【杀】指定一名角色为目标后，你可以获得其一张牌，然后你本回合内不能再对其使用牌",
                        filter:function(event,player){
                return ((get.type(event.card)=='basic'||get.type(event.card)=='trick')&&get.tag(event.card,'damage')>0)&&event.player.countGainableCards(player,'he')>0;
            },
                        check:function(event,player){
                return event.player.countCards('he')>0&&event.targets&&event.targets.length==1;
            },
                        logTarget:"target",
                        content:function(){
                player.gainPlayerCard(trigger.targets[0],'he',true);
                trigger.target.addTempSkill('DIY_juzhan_x');
                player.addTempSkill('DIY_juzhan_y');
            },
                        sub:true,
                    },
                    x:{
                        mod:{
                            targetEnabled:function(card,player,target){
            if(player.hasSkill('DIY_juzhan_y')) return false;
        },
                        },
                        sub:true,
                    },
                    y:{
                        mod:{
                            targetEnabled:function(card,player,target){
            if(player.hasSkill('DIY_juzhan_x')) return false;
        },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_yaoming":{
                usable:1,
                mark:true,
                marktext:"邀名",
                intro:{
                    content:function(storage,player){
            var num=player.countMark("DIY_yaoming");
            var str='当你造成/受到伤害后，你可以：';
            str+='<br>摸一张牌'
            if(num==1){
                str+='<br>弃置一名其他角色的一张牌';
            }
            if(num==2){
                str+='<br>令一名其他角色失去一点体力';
            }
            if(num==3){
                str+='<br>令一名其他角色横置';
            }
            if(num==4){
                str+='<br>令一名其他角色翻面';
            }
            if(num==5){
                str+='<br>令一名其他角色翻面';
            }
            return str;
        },
                },
                audio:"xinyaoming",
                trigger:{
                    player:"damageEnd",
                    source:"damageSource",
                },
                init:function(player){
        player.storage.DIY_yaoming=[];
    },
                content:function(){
        'step 0'
        var num=player.countMark("DIY_yaoming");
        if(num<5) player.addMark("DIY_yaoming",1,false);
        'step 1'
        player.draw(player.countMark("DIY_yaoming"));
        if(player.countMark("DIY_yaoming")==1){
            player.draw();
            event.goto(4);
        }
        'step 2'
        var num=player.countMark("DIY_yaoming");
        var str='';
        if(num==2) str='弃置一名其他角色的一张牌';
        if(num==3) str='令一名其他角色失去一点体力';
        if(num==4) str='令一名其他角色横置';
        if(num==5) str='令一名其他角色翻面';
        player.chooseTarget(get.prompt('DIY_yaoming'),str,function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            if(ai.get.attitude(player,target)>0) return 0;
            if(ai.get.attitude(target,player)>0) return 1;
            return -ai.get.attitude(player,target);
        });
        'step 3'
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('DIY_yaoming',target);
            var mark=player.countMark("DIY_yaoming");
            if(mark==2){
                player.discardPlayerCard(target,'he',true);
            }
            if(mark==3){
                target.loseHp();
                event.finish();
            }
            if(mark==4){
                target.link(true);
                event.finish();
            }
            if(mark==5){
                target.turnOver();
                event.finish();
            }
        }
    },
                group:"DIY_yaoming_kanon",
                subSkill:{
                    kanon:{
                        trigger:{
                            global:"roundStart",
                        },
                        silent:true,
                        sub:true,
                        content:function(){
                            lib.skill.DIY_yaoming.init(player)
                        },
                        forced:true,
                        popup:false,
                    },
                },
            },
            "DIY_shuangren":{
                audio:"shuangren",
                trigger:{
                    player:["phaseUseBefore","phaseUseAfter"],
                },
                group:"DIY_shuangren_sha",
                direct:true,
                filter:function(event,player){
        return player.countCards('h');
    },
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt2('DIY_shuangren'),function(card,player,target){
            return player.canCompare(target);
        }).set('ai',function(target){
            if(!_status.event.goon) return 0;
            return -get.attitude(_status.event.player,target);
        }).set('goon',player.needsToDiscard()||player.hasCard(function(card){
            var val=get.value(card);
            if(val<0) return true;
            if(val<=5){
                return card.number>=11;
            }
            if(val<=6){
                return card.number>=12;
            }
            return false;
        }));
        'step 1'
        if(result.bool){
            player.logSkill('DIY_shuangren',result.targets);
            event.target=result.targets[0];
            player.chooseToCompare(event.target);
        }
        else{
            event.finish();
        }
    },
            },
            "DIY_shuangren_sha":{
                audio:"shuangren",
                trigger:{
                    player:["chooseToCompareAfter","compareMultipleAfter"],
                    target:["chooseToCompareAfter","compareMultipleAfter"],
                },
                forced:true,
                filter:function(event,player){
        if(event.preserve) return false;
        if(player==event.player){
            if(event.num1>event.num2){
                return !get.owner(event.card2);
            }
            else{
                return !get.owner(event.card1);
            }
        }
        else{
            if(event.num1<event.num1){
                return !get.owner(event.card1);
            }
            else{
                return !get.owner(event.card2);
            }
        }
    },
                content:function(){
        'step 0'
        if(player==trigger.player){
            if(trigger.num1>trigger.num2){
                player.chooseTarget(get.prompt2('DIY_shuangren_sha'),true,function(card,player,target){
                    if(!player.canUse('sha',target,false)) return false;
                    return true;
                }).set('ai',function(target){
                    var player=_status.event.player;
                    return get.effect(target,{name:'sha'},player,player);
                }).set('identity',target);
            }
            else{
               player.chooseUseTarget({name:'juedou',isCard:true},true);
               event.finish();
            }
        }
        else{
            if(trigger.num1<trigger.num2){
                player.chooseUseTarget({name:'juedou',isCard:true},true);
                event.finish();
            }
            else{
                player.chooseTarget(get.prompt2('DIY_shuangren_sha'),true,function(card,player,target){
                    if(!player.canUse('sha',target,false)) return false;
                    return true;
                }).set('ai',function(target){
                    var player=_status.event.player;
                    return get.effect(target,{name:'sha'},player,player);
                }).set('identity',target);
            }
        }
        'step 1'
        if(result.bool&&result.targets&&result.targets.length){
            player.useCard({name:'sha',isCard:true},result.targets[0],false);
        }
    },
            },
            "DIY_zhenwei":{
                mark:true,
                locked:true,
                zhuanhuanji:true,
                marktext:"☯",
                intro:{
                    content:function(storage,player,skill){
                        var str=player.storage.DIY_zhenwei?'当一名其他角色成为【杀】或锦囊牌的目标时（使用者不是你），若此牌的目标角色数为1，你可以弃置一张牌，然后摸一张牌，将牌转移给你。':'当一名其他角色成为【杀】或锦囊牌的目标时（使用者不是你），若此牌的目标角色数为1，你可以弃置一张牌，然后令此牌无效。';
                        return str;
                    },
                },
                audio:"zhenwei",
                trigger:{
                    global:"useCardToTarget",
                },
                check:function(event,player){
        return get.attitude(player,event.target)>0;
    },
                filter:function(event,player){
        if(!player.countCards('h')) return false;
        if(player==event.player) return false;
        if(event.targets.length>1) return false;
        if(!event.target) return false;
        var card=event.card;
        if(card.name=='sha') return true;
        if(get.type(card,'trick')=='trick') return true;
        return false;
    },
                content:function(){
        "step 0"
        var str='弃置一张牌再摸一张牌然后将'+get.translation(trigger.card)+'转移给你';
        if(!player.storage.DIY_zhenwei) str='弃置一张牌然后令'+get.translation(trigger.card)+'失效';
        var next=player.chooseToDiscard(str,'he').set('ai',function(card){
            return 7-get.value(card);
        });
        next.set('forced',true);
        "step 1"
        if(player.storage.DIY_zhenwei){
            player.draw(1);
            trigger.getParent().targets.remove(trigger.target);
            trigger.getParent().triggeredTargets2.remove(trigger.target);
            trigger.getParent().targets.push(player);
            trigger.untrigger();
            trigger.player.line(player);
        }
        else{
            trigger.targets.length=0;
            trigger.getParent().triggeredTargets2.length=0;
        }
        player.changeZhuanhuanji('DIY_zhenwei');
        event.finish();
        game.delay();
    },
                ai:{
                    threaten:2,
                },
            },
            "DIY_jianxiang":{
                audio:"nzry_jianxiang",
                trigger:{
                    global:"useCardToTargeted",
                },
                filter:function(event,player){
        var type=get.type(event.card);
        if(!event.target.isMinHandcard()&&!event.player.isMaxHandcard()) return false;
        return true;
    },
                prompt2:function(event,player){
                    return '令'+get.translation(event.target)+'摸一张牌';
                },
                check:function(event,player){
        return get.attitude(player,event.target)>0;
    },
                content:function(){
        trigger.target.draw();
    },
            },
            "DIY_shenshi":{
                audio:"nzry_shenshi_1",
                enable:"chooseToUse",
                zhuanhuanji:true,
                mark:true,
                marktext:"☯",
                intro:{
                    content:function(storage,player,skill){
            var history1=player.getAllHistory('useCard',function(evt){
                return evt.card&&get.type(evt.card)=='basic';
            });
            var name1='暂无';
            if(history1.length){
                name1='【'+get.translation(history1[history1.length-1].card.name)+'】';
            }
            var history2=player.getAllHistory('useCard',function(evt){
                return evt.card&&get.type(evt.card)=='trick';
            });
            var name2='暂无';
            if(history2.length){
                name2='【'+get.translation(history2[history2.length-1].card.name)+'】';
            }
            str='上一张使用的<font color=#F08080>基本牌</font>/<font color=#78BAFD>普通锦囊牌</font>：<font color=#F08080>'+get.translation(name1)+'</font>/<font color=#78BAFD>'+get.translation(name2)+'</font><br>';
            if(player.storage.DIY_shenshi=true){
                str+='将一张牌当作上一张使用的<font color=#F08080>基本牌</font>使用';
            }
            else{
                str+='将一张牌当作上一张使用的<font color=#78BAFD>普通锦囊牌</font>使用';
            }
            return str;
        },
                },
                init:function(player){
        player.storage.DIY_shenshi=true;
    },
                hiddenCard:function(player,name){
        var type=player.storage.DIY_shenshi?'basic':'trick';
        var history=player.getAllHistory('useCard',function(evt){
            return evt.card&&get.type(evt.card)==type;
        });
        if(history.length) return name==history[history.length-1].card.name;
    },
                filter:function(event,player){
        var type=player.storage.DIY_shenshi?'basic':'trick';
        var history=player.getAllHistory('useCard',function(evt){
            return evt.card&&get.type(evt.card)==type;
        });
        if(!history.length) return false;
        for(var name of lib.inpile){
            if(get.type(name)!=type) continue;
            if(name!=history[history.length-1].card.name) continue;
            if(event.filterCard({name:name,isCard:true},player,event)) return true;
        }
        return false;
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            for(var i=0;i<lib.inpile.length;i++){
                var name=lib.inpile[i];
                var type=player.storage.DIY_shenshi?'basic':'trick';
                var history=player.getAllHistory('useCard',function(evt){
                    return evt.card&&get.type(evt.card)==type;
                });
                if(get.type(name)!=type) continue;
                if(name!=history[history.length-1].card.name) continue;
                if(name=='sha'){
                    list.push(['基本','','sha']);
                    for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
                }
                else if(get.type(name)=='trick') list.push(['锦囊','',name]);
                else if(get.type(name)=='basic') list.push(['基本','',name]);
            }
            return ui.create.dialog('审时',[list,'vcard']);
        },
                    filter:function(button,player){
            return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function(button){
            var player=_status.event.player;
            if(player.countCards('hs',button.link[2])>0) return 0;
            if(button.link[2]=='wugu') return;
            var effect=player.getUseValue(button.link[2]);
            if(effect>0) return effect;
            return 0;
        },
                    backup:function(links,player){
            return {
                filterCard:function(){return true},
                selectCard:1,
                popname:true,
                check:function(card){
                    return 6-get.value(card);
                },
                position:'hes',
                viewAs:{name:links[0][2],nature:links[0][3]},
                precontent:function(player,link){
                    player.changeZhuanhuanji('DIY_shenshi');
                    player.logSkill('DIY_shenshi');
                },
            }
        },
                    prompt:function(links,player){
            return '将一张牌当做'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    respondSha:true,
                    respondShan:true,
                    order:1,
                    result:{
                        player:1,
                    },
                },
            },
            "DIY_jixu":{
                audio:"xinfu_jixu",
                enable:"phaseUse",
                usable:1,
                marktext:"击虚",
                mark:true,
                intro:{
                    content:function(storage,player){
            var num=player.countMark("DIY_jixu");
            var str='暂无任何效果';
            if(num>0){
                str='<li>猜错人数:'+get.translation(player.countMark("DIY_jixu"));
            }
            if(num>0&&player.hasSkill("DIY_jixu_sha")){
                str+='<br><li>使用【杀】上限+'+get.translation(player.countMark("DIY_jixu"));
            }
            if(num=0){
                str='暂无任何效果';
            }
            if(_status.currentPhase!=player){
                str='暂无任何效果';
            }
            return str;
        },
                },
                init:function(player){
        player.storage.DIY_jixu=0;
    },
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                filterTarget:function (card,player,target){
        if(player==target) return false;
        return true;
    },
                selectTarget:[1,Infinity],
                multitarget:true,
                multiline:true,
                content:function (){
        "step 0"
        targets.sort(lib.sort.seat);
        "step 1"
        if(!event.num) event.num=0;
        if(!event.caicuolist) event.caicuolist=[];
        targets[event.num].chooseBool("是否押杀？").ai=function(event,player){
            var evt=_status.event.getParent();
            if(get.attitude(targets[event.num],evt.player)>0) return evt.player.countCards('h','sha')?false:true;
            return Math.random()<0.5;
        };
        "step 2"
        if(result.bool){
            targets[event.num].chat('有杀');
            game.log(targets[event.num],'认为',player,'#g有杀');
            if(!player.countCards('h','sha')) event.caicuolist.add(targets[event.num]);
        }else{
            targets[event.num].chat('没杀');
            game.log(targets[event.num],'认为',player,'#y没有杀');
            if(player.countCards('h','sha')) event.caicuolist.add(targets[event.num]);
        }
        event.num++;
        game.delay();
        if(event.num<targets.length) event.goto(1);
        "step 3"
        player.popup(player.countCards('h','sha')?"有杀":"没杀");
        game.log(player,player.countCards('h','sha')?"有杀":"没杀");
        if(event.caicuolist.length==0){
            var evt=_status.event.getParent('phaseUse');
            if(evt&&evt.name=='phaseUse'){
                evt.skipped=true;
                player.skip("phaseDiscard");
                event.finish(); 
            }
        }
        else{
            player.draw(event.caicuolist.length)
            player.addMark('DIY_jixu',event.caicuolist.length,false);
            if(player.countCards('h','sha')){
                player.addTempSkill('DIY_jixu_sha');
                player.storage.DIY_jixu_sha=event.caicuolist;
                event.finish();
            }
            else event.num=0;
        }
        "step 4"
        if(event.num<event.caicuolist.length){
            var target=event.caicuolist[event.num];
            player.useCard({name:'sha',isCard:true},target,false,'noai');
            event.num++;
            event.redo();
        }
    },
                ai:{
                    order:function (){
            return get.order({name:'sha'})+0.1;
        },
                    result:{
                        target:function (player,target){
                var raweffect=function(player,target){
                    if(player.countCards('h','sha')){
                        return get.effect(target,{name:'sha'},player,target);
                    }
                    else{
                        var att=get.attitude(player,target);
                        var nh=target.countCards('h');
                        if(att>0){
                            if(target.getEquip('baiyin')&&target.isDamaged()&&
                                get.recoverEffect(target,player,player)>0){
                                if(target.hp==1&&!target.hujia) return 1.6;
                                if(target.hp==2) return 0.01;
                                return 0;
                            }
                        }
                        var es=target.getCards('e');
                        var noe=(es.length==0||target.hasSkillTag('noe'));
                        var noe2=(es.length==1&&es[0].name=='baiyin'&&target.isDamaged());
                        var noh=(nh==0||target.hasSkillTag('noh'));
                        if(noh&&(noe||noe2)) return 0;
                        if(att<=0&&!target.countCards('he')) return 1.5;
                        return -1.5;
                    }
                }
                var num=game.countPlayer(function(current){
                    return current!=player&&current.hp==target.hp&&(raweffect(player,current)*get.attitude(player,current))>0
                });
                return raweffect(player,target)*Math.max(0,num-1);
            },
                    },
                    expose:0.4,
                },
                group:"DIY_jixu_kanon",
                subSkill:{
                    kanon:{
                        trigger:{
                            player:"phaseEnd",
                        },
                        silent:true,
                        sub:true,
                        content:function(){lib.skill.DIY_jixu.init(player)},
                        forced:true,
                        popup:false,
                    },
                },
            },
            "DIY_jixu_sha":{
                audio:"xinfu_jixu",
                trigger:{
                    player:"useCard",
                },
                onremove:function (player){
        delete player.storage.DIY_jixu_sha;
    },
                filter:function (event,player){
        if(event.card.name=='sha'||get.type(event.card,'trick')=='trick'){
            return game.hasPlayer(function(current){
                return current!=player&&player.storage.DIY_jixu_sha.contains(current)&&!event.targets.contains(current);
            });
        }
        return false;
    },
                forced:true,
                silent:true,
                popup:false,
                mod:{
                    cardUsable:function(card,player,num){
            if(card.name=='sha') return num+player.countMark('DIY_jixu');
        },
                },
                content:function (){
        player.logSkill("DIY_jixu");
        for(var i=0;i<player.storage.DIY_jixu_sha.length;i++){
            if(!trigger.targets.contains(player.storage.DIY_jixu_sha[i])&&player.canUse('sha',player.storage.DIY_jixu_sha[i],false)){
                player.line(player.storage.DIY_jixu_sha[i],trigger.card.nature);
                trigger.targets.push(player.storage.DIY_jixu_sha[i]);
            }
        }
    },
            },
            "DIY_duorui":{
                audio:"drlt_duorui",
                trigger:{
                    player:"useCardToPlayered",
                },
                group:"DIY_duorui2",
                filter:function (event,player){
            if(event.target==player) return false;
            if(!['basic','trick'].contains(get.type(event.card))) return false;
            if(event.target.hasSkill('DIY_duorui_baiban')) return false;
            return true;
        },
                check:function(event,player){
            return get.attitude(player,event.target)<0;
                },
                logTarget:"target",
                content:function(){
        'step 0'
        player.judge(function(card){
               if(get.number(card)<8||get.number(card)>10) return 2;
               return 0;
             }).judge2=function(result){
               return result.bool?true:false;
             };
        'step 1'
        if(!result.bool){
            player.logSkill("DIY_duorui");
            event.goto(5);
        }
        'step 2'
        target=trigger.target;
        var list=[];
        var listm=[];
        var listv=[];
        if(trigger.player.name1!=undefined) listm=lib.character[target.name1][3];
        else listm=lib.character[target.name][3];
        if(trigger.player.name2!=undefined) listv=lib.character[target.name2][3];
        listm=listm.concat(listv);
        var func=function(skill){
            var info=get.info(skill);
            if(!info||info.limited) return false;
            return true;
        };
        for(var i=0;i<listm.length;i++){
            if(func(listm[i])) list.add(listm[i]);
        }
        event.skills=list;
        'step 3'
        if(event.skills.length>0){
            player.chooseControl(event.skills).set('prompt','请选择要夺锐的技能').set('ai',function(){return event.skills.randomGet()});
        }
        else event.finish();
        'step 4'
        player.addTempSkill(result.control,{player:'phaseBegin'});
        trigger.target.storage.DIY_duorui_baiban=[result.control];
        trigger.target.addSkill("DIY_duorui_baiban");
        player.logSkill("DIY_duorui");
        game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】');
        'step 5'
        game.delayx();
    },
                ai:{
                    result:{
                        player:1,
                    },
                    order:8,
                },
            },
            "DIY_duorui2":{
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                direct:true,
                charlotte:true,
                filter:function(event,player){
                    var num=game.hasPlayer(function(current){
                return current.hasSkill('DIY_duorui_baiban');
            });
        return num>0;
                },
                content:function(){
                    game.countPlayer(function(current){
            if(current.hasSkill('DIY_duorui_baiban')){
                current.removeSkill('DIY_duorui_baiban');
            }
        });
                },
            },
            "DIY_duorui_baiban":{
                init:function(player,skill){
        player.disableSkill(skill,player.storage.DIY_duorui_baiban);
    },
                onremove:function(player,skill){
        player.enableSkill(skill);
    },
                locked:true,
                mark:true,
                charlotte:true,
                intro:{
                    content:function(storage,player,skill){
            var list=[];
            for(var i in player.disabledSkills){
                if(player.disabledSkills[i].contains(skill)) list.push(i);
            };
            if(list.length){
                var str='失效技能：';
                for(var i=0;i<list.length;i++){
                    if(lib.translate[list[i]+'_info']) str+=get.translation(list[i])+'、';
                };
                return str.slice(0,str.length-1);
            };
        },
                },
            },
            "DIY_zhiti":{
                audio:"drlt_zhiti",
                global:"DIY_zhiti2",
                mod:{
                    maxHandcard:function(player,num){
            if(game.hasPlayer(function(current){
                return current.isDamaged();
            })) return num+1;
        },
                },
                trigger:{
                    player:["phaseDrawBegin2","damageEnd"],
                },
                forced:true,
                filter:function(event,player){
        var num=event.name=='phase'?5:3;
        if(num==3?event.numFixed:!game.hasPlayer(function(current){
            return current.countDisabled()<5;
        })) return false;
        return game.countPlayer(function(current){
            return current.isDamaged();
        })>=num;
    },
                direct:true,
                content:function(){
        'step 0'
        if(trigger.name=='phaseDraw'){
            player.logSkill('DIY_zhiti');
            trigger.num++;
            event.finish();
        }
        else{
            player.chooseTarget(get.prompt('DIY_zhiti'),'废除一名角色的一个随机装备栏',function(card,player,target){
                return target!=player&&target.countDisabled()<5;
            }).set('ai',function(target){
                return -get.attitude(_status.event.player,target)*(target.countCards('e')+1)
            });
        }
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('DIY_zhiti',target);
            var list=[];
            for(var i=1;i<6;i++){
                if(!target.isDisabled(i)) list.add((i==3||i==4)?6:i);
            }
            var num=list.randomGet();
            if(num!=6) target.disableEquip(num);
            else{
                target.disableEquip(3);
                target.disableEquip(4);
            }
        }
    },
            },
            "DIY_zhiti2":{
                mod:{
                    maxHandcard:function (player,num){
            if(player.maxHp>player.hp&&!player.hasSkill("DIY_zhiti")) return num-1;
        },
                },
            },
            "DIY_wanglie":{
                locked:false,
                mod:{
                    targetInRange:function(card,player,target,now){
            if(game.online){
                if(!player.countUsed()) return true;
            }
            else{
                var evt=_status.event.getParent('phaseUse');
                if(evt&&evt.name=='phaseUse'&&player.getHistory('useCard',function(evt2){
                    return evt2.getParent('phaseUse')==evt
                }).length==0) return true;
            }
        },
                },
                trigger:{
                    player:"useCardToPlayered",
                },
                audio:"drlt_wanglie",
                filter:function(event,player){
        return player.isPhaseUsing()&&(event.card.name=='sha'||get.type(event.card)=='trick');
    },
                check:function(event,player){
        return get.attitude(player,event.target)<0;
    },
                logTarget:"target",
                content:function(){
        trigger.directHit.addArray(game.filterPlayer(function(current){
            return current!=player;
        }));
        player.gainPlayerCard(trigger.target,true,'he');
        var num=player.countMark("DIY_wanglie_use");
        if(num>1) player.addTempSkill("drlt_wanglie2");
    },
                group:["DIY_wanglie_use","DIY_wanglie_kanon"],
                subSkill:{
                    kanon:{
                        trigger:{
                            global:"phaseEnd",
                        },
                        silent:true,
                        sub:true,
                        content:function(){lib.skill.DIY_wanglie_use.init(player)},
                        forced:true,
                        popup:false,
                    },
                },
            },
            "DIY_wanglie_use":{
                mark:true,
                marktext:"往烈",
                intro:{
                    content:function(storage,player){
            var num=player.countMark("DIY_wanglie_use");
            var str='<li>本回合已使用牌数：0';
            if(num>=1){
                str='<li>本回合已使用牌数:'+get.translation(player.countMark("DIY_wanglie_use"));
            }
            if(num=0){
                str='<li>本回合已使用牌数：0';
            }
            return str;
        },
                },
                audio:"ext:天牢令:false",
                trigger:{
                    player:"useCard",
                },
                direct:true,
                init:function(player){
        player.storage.DIY_wanglie_use=[];
    },
                content:function(){
        player.addMark("DIY_wanglie_use",1,false);
    },
            },
            "DIY_baobian":{
                group:"DIY_baobian2",
                unique:true,
                audio:"baobian",
                trigger:{
                    global:"gameDrawAfter",
                    player:"changeHp",
                },
                direct:true,
                init:function(player){
        player.storage.DIY_baobian=[];
        // player.storage.DIY_baobian2=0;
    },
                intro:{
                    content:"characters",
                },
                filter:function(event,player){
        return player.countMark("DIY_baobian")<5;
    },
                content:function(){
        'step 0'
        var list=["wei","shu","wu","qun","jin"];
        list.remove(player.group);
        player.chooseControl(list);
        'step 1'
        player.changeGroup(result.control);
        // if(player.storage.DIY_baobian2<1){
        //        player.storage.DIY_baobian2++;
        //        event.finish();
        // }
        // else{
        //        player.storage.DIY_baobian2=0;
        // }
        'step 2'
        var list=[];
        var list2=[];
        var players=game.players.concat(game.dead);
        var group=player.group;
        for(var i=0;i<players.length;i++){
            list2.add(players[i].name);
            list2.add(players[i].name1);
            list2.add(players[i].name2);
        }
        for(var i in lib.character){
            if(lib.character[i][1]!=group) continue;
            if(lib.character[i][4].contains('minskin')) continue;
            if(player.storage.DIY_baobian.contains(i)) continue;
            if(list2.contains(i)) continue;
            list.push(i);
        }
        var name=list.randomGet();
        player.storage.DIY_baobian.push(name);
        player.markSkill('DIY_baobian');
        var skills=lib.character[name][3];
        for(var i=0;i<skills.length;i++){
            player.addSkill(skills[i]);
        }
        event.dialog=ui.create.dialog('<div class="text center">'+get.translation(player)+'发动了【豹变】',[[name],'character']);
        game.delay(2);
        'step 3'
        event.dialog.close();
    },
            },
            "DIY_baobian2":{
                audio:"baobian",
                enable:"phaseUse",
                filter:function(event,player){
                    return get.skillCount('DIY_baobian2',player)<player.countMark("DIY_baobian");
                },
                content:function(){
                'step 0'
                player.chooseControl(true,player.storage.DIY_baobian);
                'step 1'
                if(result.control!='cancel2'){
                var skills=lib.character[result.control][3];
                for(var i=0;i<skills.length;i++){
                    player.removeSkill(skills[i]);
                }
                player.storage.DIY_baobian.remove(result.control);
                player.markSkill('DIY_baobian');
                player.useSkill('DIY_baobian');
                }
                },
            },
            "DIY_hongyuan":{
                audio:"hongyuan",
                trigger:{
                    global:"phaseDrawBegin2",
                },
                logTarget:"player",
                filter:function(event,player){
        return !event.numFixed&&event.player!=player&&!player.countMark('DIY_hongyuan')==0;
    },
                "prompt2":"移去一枚“谦”并令其多摸两张牌",
                check:function(event,player){
        return get.attitude(player,event.player)>0;
    },
                content:function(){
        trigger.num+=2;
        player.removeMark('DIY_hongyuan',1,false);
    },
                marktext:"援",
                intro:{
                    name:"援",
                    content:"mark",
                },
                group:["DIY_hongyuan_Draw","DIY_hongyuan_Begin"],
                subSkill:{
                    Draw:{
                        audio:"hongyuan",
                        trigger:{
                            player:"phaseDrawBegin2",
                        },
                        prompt:"少摸一张牌并获得两枚“援”",
                        filter:function(event,player){
                return !player.hasMark('DIY_hongyuan');
            },
                        content:function(){
                trigger.num--;
                player.addMark('DIY_hongyuan',2,false);
            },
                        sub:true,
                    },
                    Begin:{
                        audio:"hongyuan",
                        trigger:{
                            player:"phaseZhunbeiBegin",
                        },
                        forced:true,
                        filter:function(event,player){
                return player.hasMark('DIY_hongyuan');
            },
                        content:function(){
                var num=player.countMark('DIY_hongyuan');
                player.draw(num);
                player.removeMark('DIY_hongyuan',num,false);
            },
                        sub:true,
                    },
                },
            },
            "DIY_huanshi":{
                audio:"huanshi",
                srlose:true,
                trigger:{
                    global:"judge",
                },
                check:function (event, player) {
        var judge = event.judge(event.player.judging[0]);
        if (get.attitude(player, event.player) < 0) return judge > 0;
        if (get.attitude(player, event.player) > 0) return judge < 0;
        return 0;
      },
                content:function () {
        "step 0"
        player.chooseCard(get.translation(trigger.player) + '的' + (trigger.judgestr || '') + '判定为' +
          get.translation(trigger.player.judging[0]) + '，打出一张手牌代替之或亮出牌顶的一张牌代替之').set('ai', function (card) {
            var trigger = _status.event.getParent()._trigger;
            var player = _status.event.player;
            var judging = _status.event.judging;
            var result = trigger.judge(card) - trigger.judge(judging);
            var attitude = get.attitude(player, trigger.player);
            if (attitude == 0 || result == 0) return 0;
            if (attitude > 0) {
              return result - get.value(card) / 2;
            } else {
              return -result - get.value(card) / 2;
            }
          }).set('judging', trigger.player.judging[0]);
        "step 1"
        if (result.bool) {
          event.cards = result.cards;
        } else {
          event.cards = get.cards();
          game.log(get.translation(player) + '亮出了牌堆顶的' + get.translation(event.cards));
          player.showCards(event.cards);
        }
        player.respond(event.cards, 'highlight', 'noOrdering');
        "step 2"
        if (result.bool) {
          if (trigger.player.judging[0].clone) {
            trigger.player.judging[0].clone.classList.remove('thrownhighlight');
            game.addVideo('deletenode', player, get.cardsInfo([trigger.player.judging[0].clone]));
          }
          ui.discardPile.appendChild(trigger.player.judging[0]);
          trigger.player.judging[0] = result.cards[0];
          if (!get.owner(result.cards[0], 'judge')) {
            trigger.position.appendChild(result.cards[0]);
          }
          game.log(trigger.player, '的判定牌改为', result.cards[0]);
          game.delay(2);
        } else {
          if (trigger.player.judging[0].clone) {
            trigger.player.judging[0].clone.classList.remove('thrownhighlight');
            game.addVideo('deletenode', player, get.cardsInfo([trigger.player.judging[0].clone]));
          }
          ui.discardPile.appendChild(trigger.player.judging[0]);
          trigger.player.judging[0] = event.cards[0];
          if (!get.owner(event.cards[0], 'judge')) {
            trigger.position.appendChild(event.cards[0]);
          }
          game.log(trigger.player, '的判定牌改为', event.cards[0]);
        }
      },
                ai:{
                    tag:{
                        rejudge:1,
                    },
                },
            },
            "DIY_mingzhe":{
                audio:"mingzhe",
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
                },
                forced:true,
                charlotte:true,
                onremove:true,
                filter:function(event,player){
        var evt=event.getl(player);
        if(!evt||!evt.cards2||!evt.cards2.length) return false;
        for(var i of evt.cards2){
            if(get.color(i,player)=='red') return true;
        }
        return false;
    },
                content:function(){
        'step 0'
        var num=trigger.getl(player).cards2.filter(function(card){
            return get.color(card,player)=='red';
        }).length;
        var cards=[];
        while(num--){
            var card=get.cardPile2(function(card){
                return !cards.contains(card)&&get.color(card,false)!='red';
            });
            if(card) cards.push(card);
            else break;
        }
        if(cards.length) player.gain(cards,'gain2');
        else event.finish();
        'step 1'
        game.updateRoundNumber();
    },
            },
            "DIY_yinbing":{
                trigger:{
                    player:"phaseDiscardBegin",
                },
                direct:true,
                audio:"yinbing",
                init:function(player){
        if(!player.storage.DIY_yinbing) player.storage.DIY_yinbing=[];
    },
                marktext:"兵",
                content:function(){
        "step 0"
        var num=game.players.length;
        player.draw(num);
        player.chooseCard([num,Infinity],'he',get.prompt('DIY_yinbing')).set('ai',function(card){
            return 6-get.value(card);
        });
        "step 1"
        if(result.bool){
            player.$give(result.cards,player,false);
            player.logSkill('DIY_yinbing');
            game.log(player,'将',result.cards,'置于武将牌上');
            player.storage.DIY_yinbing=player.storage.DIY_yinbing.concat(result.cards);
            player.lose(result.cards,ui.special,'toStorage');
            player.markSkill('DIY_yinbing');
            player.syncStorage('DIY_yinbing');
        }
    },
                intro:{
                    content:"cards",
                    onunmark:function(storage,player){
            if(storage&&storage.length){
                player.$throw(storage,1000);
                game.cardsDiscard(storage);
                game.log(storage,'被置入了弃牌堆');
             storage.length=0;
            }
        },
                },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(card.name=='sha'||card.name=='juedou'){
                    if(current<0) return 1.2;
                }
            },
                    },
                    threaten:function(player,target){
            if(target.storage.DIY_yinbing&&target.storage.DIY_yinbing.length) return 2;
            return 1;
        },
                },
                subSkill:{
                    discard:{
                        trigger:{
                            player:"damageBegin4",
                        },
                        audio:"yinbing",
                        forced:true,
                        filter:function(event,player){
                return event.card&&player.storage.DIY_yinbing.length>0&&
                (event.card.name=='sha'||event.card.name=='juedou');
            },
                        content:function(){
                'step 0'
                player.chooseCardButton('移去一张引兵牌',true,player.storage.DIY_yinbing);
                'step 1'
                var card=result.links[0];
                player.storage.DIY_yinbing.remove(card);
                game.cardsDiscard(card);
                player.$throw(card);
                player.draw(2);
                trigger.num=1;
                game.log(player,'将',card,'置入弃牌堆');
                player.syncStorage('DIY_yinbing');
                if(player.storage.DIY_yinbing.length==0){
                    player.unmarkSkill('DIY_yinbing');
                }
            },
                        sub:true,
                    },
                },
                group:"DIY_yinbing_discard",
            },
            "DIY_juedi":{
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                filter:function(event,player){
        return player.storage.DIY_yinbing&&player.storage.DIY_yinbing.length>0;
    },
                forced:true,
                audio:"juedi",
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt2('DIY_juedi'),true).set('ai',function(target){
            var player=_status.event.player;
            var att=get.attitude(player,target);
            if(att<2) return att-10;
            var num=att/10;
            if(target==player){
                num+=player.maxHp-player.countCards('h')+0.5;
            }
            else{
                num+=_status.event.n2*2;
                if(target.isDamaged()){
                    if(target.hp==1){
                        num+=3;
                    }
                    else if(target.hp==2){
                        num+=2;
                    }
                    else{
                        num+=0.5;
                    }
                }
            }
            if(target.hasJudge('lebu')){
                num/=2;
            }
            return num;
        }).set('n2',player.storage.DIY_yinbing.length);
        'step 1'
        if(result.bool){
            player.line(result.targets[0],'green');
            if(result.targets[0]==player){
                player.$throw(player.storage.DIY_yinbing,1000);
                event.num=0;
                game.countPlayer(function(current){
                    if(current.countCards('h')>event.num) event.num=current.countCards('h');
                });
                var num=event.num-player.countCards('h');
                if(num>0) player.draw(num);
                game.cardsDiscard(player.storage.DIY_yinbing);
                player.recover();
                player.storage.DIY_yinbing=[];
                player.syncStorage('DIY_yinbing');
                player.unmarkSkill('DIY_yinbing');
            }
            else{
                var target=result.targets[0];
                target.recover();
                target.gain(player.storage.DIY_yinbing.slice(0),'gain2','log','fromStorage');
                target.draw(player.storage.DIY_yinbing.length);
                player.storage.DIY_yinbing.length=0;
            }
            player.syncStorage('DIY_yinbing');
            player.unmarkSkill('DIY_yinbing');
        }
    },
            },
            "DIY_shelie":{
                audio:"shelie",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                forced:true,
                content:function () {
        'step 0'
        trigger.cancel(null, null, 'notrigger');
        event.cards = [];
        event.num = 1;
        event.getResultString = function (str) {
          switch (str) {
            case '基本':
              return 'basic';
            case '锦囊':
              return 'trick';
            case '装备':
              return 'equip';
          }
          return str;
        };
        'step 1'
        player.chooseControl('基本', '锦囊', '装备', function () {
          var randomResult = Math.random();
          if (randomResult < 0.4) return '锦囊';
          if (randomResult < 0.8) return '基本';
          return '装备';
        }).set('prompt', '请选择想要获得的第' + get.cnNumber(event.num, true) + '张牌的类型');
        'step 2'
        event.control = event.getResultString(result.control);
        var card = get.cardPile2(function (card) {
          return get.type(card, 'trick') == event.control && !event.cards.contains(card);
        });
        if (card) {
          event.cards.push(card);
        } else {
          player.chat('无牌可得了吗');
          game.log(`但是牌堆里面已经没有${result.control}了！`);
        }
        if (event.num < 4) {
          event.num++;
          event.goto(1);
        } else {
          if (event.cards.length) {
            player.gain(event.cards, 'gain2');
          }
        }
      },
            },
            "DIY_gongxin":{
                audio:"gongxin",
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card, player, target) {
        return target!=player&&target.countCards('h');
      },
                content:function () {
        "step 0"
        player.chooseControl(lib.suit).set('prompt','攻心:选择一种花色').ai=function(){return lib.suit.randomGet()};
        "step 1"
        event.suit=result.control;
        player.viewCards('攻心', target.get('h'));
        event.cards = target.get('h', function (card) {
          return get.suit(card) == event.suit;
        });
        if (!event.cards.length) {
          event.finish();
          return;
        }
        "step 2"
        if (event.cards.length > 1) {
          event.videoId = lib.status.videoId++;
          game.broadcastAll(function (player, id, cards) {
            var str;
            if (player == game.me && !_status.auto) {
              str = '攻心：选择获得其中的一张牌';
            } else {
              str = '攻心';
            }
            var dialog = ui.create.dialog(str, cards);
            dialog.videoId = id;
          }, player, event.videoId, event.cards);
          event.time = get.utc();
          game.addVideo('showCards', player, ['攻心', get.cardsInfo(event.cards)]);
          game.addVideo('delay', null, 2);
        } else {
          player.showCards(event.cards, get.translation(target.name) + '的手牌');
        }
        "step 3"
        if (event.cards.length == 1) {
          target.discard(event.cards);
          target.damage();
          event.finish();
          return;
        }
        "step 4"
        if (event.cards.length == 0) {
          var num=target.countCards('h');
          player.drawTo(num);
          event.finish();
          return;
        }
        "step 5"
        var next = player.chooseButton();
        next.set('dialog', event.videoId);
        next.set('filterButton', function (button) {
          return true;
        });
        next.set('ai', function (button) {
          return get.value(button.link, _status.event.player);
        });
        "step 6"
        if (result.bool && result.links) {
          event.cards2 = result.links;
        }
        var time = 1000 - (get.utc() - event.time);
        if (time > 0) {
          game.delay(0, time);
        }
        "step 7"
        game.broadcastAll('closeDialog', event.videoId);
        if (event.cards2) {
          player.gain(event.cards2, 'log', 'gain2');
        }
      },
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player, target) {
                return -target.countCards('h');
              },
                    },
                    order:10,
                    expose:0.4,
                },
            },
            "DIY_botu":{
                audio:"botu",
                trigger:{
                    player:"phaseAfter",
                },
                round:1,
                group:["DIY_botu_suit","DIY_botu_suit_mark","DIY_botu_roundcount"],
                frequent:true,
                filter:function(event,player){
        return  player.getStorage('DIY_botu_suit_mark').contains('heart')&&player.getStorage('DIY_botu_suit_mark').contains('diamond')&&player.getStorage('DIY_botu_suit_mark').contains('club')&&player.getStorage('DIY_botu_suit_mark').contains('spade');
    },
                content:function(){
        player.insertPhase();
    },
            },
            "DIY_botu_suit":{
                trigger:{
                    global:["loseAfter","cardsDiscardAfter"],
                },
                forced:true,
                filter:function(event,player){
        if(player!=_status.currentPhase) return false;
        if(event.name=='lose'&&event.position!=ui.discardPile) return false;
        var list=[];
        for(var i=0;i<event.cards.length;i++){
            var card=event.cards[i];
            list.add(card.suit);
        }
        game.getGlobalHistory('cardMove',function(evt){
            if(evt==event||(evt.name!='lose'&&evt.name!='cardsDiscard')) return false;
            if(evt.name=='lose'&&evt.position!=ui.discardPile) return false;
            for(var i=0;i<evt.cards.length;i++){
                var card=evt.cards[i];
                list.remove(card.suit);
            }
        });
        return list.length>0;
    },
                content:function(){
        var list=[];
        var list2=[];
        for(var i=0;i<trigger.cards.length;i++){
            var card=trigger.cards[i];
            var suit=card.suit;
            list.add(suit);
            list2.add(suit);
        }
        game.getGlobalHistory('cardMove',function(evt){
            if(evt==trigger||(evt.name!='lose'&&evt.name!='cardsDiscard')) return false;
            if(evt.name=='lose'&&evt.position!=ui.discardPile) return false;
            for(var i=0;i<evt.cards.length;i++){
                var card=evt.cards[i];
                var suit=card.suit;
                list.remove(suit);
                list2.add(suit);
            }
        });
        list2.sort();
        player.storage.DIY_botu_suit_mark=list2;
        player.markSkill('DIY_botu_suit_mark');
    },
                subSkill:{
                    mark:{
                        marktext:"博图",
                        intro:{
                            name:"博图",
                            content:function(s){
                    var str='本回合已经进入过弃牌堆的卡牌的花色：';
                    for(var i=0;i<s.length;i++){
                        str+=get.translation(s[i]);
                    }
                    return str;
                },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_wuhun":{
                audio:"wuhun21",
                group:"DIY_wuhun_mark",
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
        return event.source!=undefined&&event.source!=player;
    },
                content:function (){
    trigger.source.addMark('DIY_wuhun_mark',trigger.num,false);
    if(player.hasSkill("DIY_wuhun_dying")) player.draw();
    },
                subSkill:{
                    mark:{
                        marktext:"魇",
                        intro:{
                            name:"梦魇",
                            content:"mark",
                        },
                        sub:true,
                    },
                },
                ai:{
                    threaten:0.01,
                    notemp:true,
                },
            },
            "DIY_wushen":{
                mod:{
                    cardname:function(card,player,name){
            if(get.suit(card)=='heart') return 'sha';
        },
                    cardnature:function(card,player){
            if(get.suit(card)=='heart') return false;
        },
                    targetInRange:function(card){
            if(get.suit(card)=='heart') return true;
        },
                    cardUsable:function(card){
            if(card.name=='sha'&&get.suit(card)=='heart') return Infinity;
        },
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard",
                },
                forced:true,
                filter:function(event,player){
        return event.card.name=='sha'&&get.suit(event.card)=='heart';
    },
                content:function(){
        trigger.directHit.addArray(game.players);
        if(trigger.addCount!==false){
            trigger.addCount=false;
            if(player.stat[player.stat.length-1].card.sha>0){
                player.stat[player.stat.length-1].card.sha--;
            }
        }
    },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(get.tag(card,'respondSha')&&current<0) return 0.6
            },
                    },
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            return arg.card.name=='sha'&&get.suit(arg.card)=='heart';
        },
                },
            },
            "DIY_wuhun_dying":{
                trigger:{
                    player:"dying",
                },
                skillAnimation:true,
                animationColor:"fire",
                audio:"wuhun21",
                mark:true,
                marktext:"追魂",
                intro:{
                    name:"追魂",
                    content:"未发动",
                },
                derivation:"DIY_wuhun_hun",
                forced:true,
                content:function(){
                'step 0'
                game.log(player,'开始使命');
                player.popup('开始使命');
                player.node.avatar.setBackgroundImage('extension/天牢令/JX_shenguanyu_zhuihun (1).jpg');
                player.removeSkill('DIY_wuhun_dying');
                player.addSkill("DIY_wuhun_hun");
                var num=game.countPlayer(function(current){
                    return current.hasMark('DIY_wuhun_mark');
                });
                player.draw(num);
                player.recover(player.maxHp-player.hp);
                },
            },
            "DIY_wuhun_hun":{
                group:["DIY_zhuihun_dying","DIY_zhuihun_finish","DIY_zhuihun"],
                mark:true,
                marktext:"追魂",
                intro:{
                    name:"追魂",
                    content:"使命进行中……",
                },
                dutySkill:true,
                forced:true,
                audio:"wuhun21",
                trigger:{
                    source:"damageBegin2",
                },
                logTarget:"player",
                filter:function(event,player){
                    return event.player&&event.player.isIn()&&event.player.hasMark('DIY_wuhun_mark');
                },
                content:function(){
                    trigger.num++;
                    trigger.player.removeMark('DIY_wuhun_mark',1,false);
                },
            },
            "DIY_zhuihun_dying":{
                trigger:{
                    player:"dying",
                },
                skillAnimation:true,
                animationColor:"fire",
                audio:"wuhun21",
                forced:true,
                filter:function(event,player){
                    var num=game.countPlayer(function(current){
                         return current.hasMark('DIY_wuhun_mark');
                    });
                    if(!num) return false;
                    return num>=0;
                },
                content:function(){
                    player.recover(1-player.hp);
                },
            },
            "DIY_zhuihun_finish":{
                trigger:{
                    global:"die",
                },
                skillAnimation:true,
                animationColor:"fire",
                audio:"wuhun21",
                forced:true,
                filter:function(event,player){
        return event.player.countMark('DIY_wuhun_mark')>0&&player==event.source;
    },
                content:function(){
                game.log(player,'成功完成使命');
                player.popup('成功完成使命');
                game.countPlayer(function(current){
                    if(current!=player&&current.countMark('DIY_wuhun_mark')>0){
                        player.line(current,'yellow');
                        current.die();
                        player.addSkill("DIY_zhuihun_finish2");
                        player.node.avatar.setBackgroundImage('extension/天牢令/JX_shenguanyu_zhuihun (3).jpg');
                        player.awakenSkill('DIY_wuhun_hun');
                    }
                });
                },
            },
            "DIY_zhuihun_finish2":{
                trigger:{
                    global:"phaseEnd",
                },
                mark:true,
                marktext:"追魂",
                intro:{
                    name:"追魂",
                    content:"使命已完成",
                },
                skillAnimation:true,
                animationColor:"fire",
                audio:"wuhun21",
                forced:true,
                content:function(){
                    game.log(player,'魂归故里');
                    player.popup('魂归故里');
                    player.die();
                    player.removeSkill("DIY_zhuihun_finish2");
                },
            },
            "DIY_zhuihun":{
                trigger:{
                    global:"dying",
                },
                forced:true,
                filter:function(event,player){
                    return event.player.countMark('DIY_wuhun_mark')>0&&event.source!=player;
                },
                content:function(){
                    game.log(player,'使命失败');
                    player.popup('使命失败');
                    player.node.avatar.setBackgroundImage('extension/天牢令/JX_shenguanyu_zhuihun (2).jpg');
                    player.awakenSkill('DIY_wuhun_hun');
                    player.die();
                },
            },
            "DIY_baonu":{
                audio:"ext:天牢令/image/audio:2",
                marktext:"暴",
                unique:true,
                trigger:{
                    source:"damageSource",
                    player:["damageEnd","enterGame"],
                    global:"phaseBefore",
                },
                forced:true,
                filter:function(event){
        return (event.name!='damage'&&(event.name!='phase'||game.phaseNumber==0))||event.num>0; 
    },
                content:function(){
        player.addMark('DIY_baonu',trigger.name=='damage'?trigger.num:2);
    },
                intro:{
                    name:"暴怒",
                    content:"mark",
                },
                ai:{
                    combo:"DIY_shenfen",
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "DIY_wumou":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard",
                },
                forced:true,
                filter:function(event){
        return get.type(event.card)=='trick';
    },
                content:function(){
        player.addTempSkill('DIY_wumou2');
    },
            },
            "DIY_wuqian":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                derivation:["DIY_wushuang","DIY_shenji"],
                filter:function(event,player){
        return player.countMark('DIY_baonu')>=1;
    },
                filterTarget:function(card,player,target){
        return target!=player&&!target.hasSkill('DIY_wuqian_targeted');
    },
                content:function(){
        player.removeMark('DIY_baonu',1);
        player.draw(1);
        player.addTempSkill('DIY_wushuang');
        player.addTempSkill('DIY_shenji');
        player.storage.DIY_wuqian_target=target;
        player.addTempSkill('DIY_wuqian_target');
        target.addTempSkill('DIY_wuqian_targeted');
    },
                subSkill:{
                    equip:{
                        ai:{
                            unequip:true,
                            skillTagFilter:function(player,tag,arg){
                    if(arg&&arg.target&&arg.target.hasSkill('DIY_wuqian_targeted')) return true;
                    return false;
                },
                        },
                        sub:true,
                    },
                    targeted:{
                        ai:{
                            "unequip2":true,
                        },
                        sub:true,
                    },
                    target:{
                        mark:"character",
                        onremove:true,
                        intro:{
                            content:"获得〖无双〗和〖神戟〗且$防具失效直到回合结束",
                        },
                        sub:true,
                    },
                },
            },
            "DIY_shenfen":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filter:function(event,player){
        return player.countMark('DIY_baonu')>=game.players.length-1;
    },
                usable:1,
                skillAnimation:true,
                animationColor:"metal",
                content:function(){
        "step 0"
        event.delay=false;
        var num=game.players.length-1;
        player.removeMark('DIY_baonu',num);
        event.targets=game.filterPlayer();
        event.targets.remove(player);
        event.targets.sort(lib.sort.seat);
        player.line(event.targets,'green');
        event.targets2=event.targets.slice(0);
        event.targets3=event.targets.slice(0);
        "step 1"
        if(event.targets2.length){
            event.targets2.shift().damage('nocard');
            event.redo();
        }
        "step 2"
        if(event.targets.length){
            event.current=event.targets.shift()
            if(event.current.countCards('e')) event.delay=true;
            event.current.discard(event.current.getCards('e')).delay=false;
        }
        "step 3"
        if(event.delay) game.delay(0.5);
        event.delay=false;
        if(event.targets.length) event.goto(2);
        "step 4"
        if(event.targets3.length){
            var target=event.targets3.shift();
            target.chooseToDiscard(Infinity,'h',true).delay=false;
            if(target.countCards('h')) event.delay=true;
        }
        "step 5"
        if(event.delay) game.delay(0.5);
        event.delay=false;
        if(event.targets3.length) event.goto(4);
    },
                ai:{
                    combo:"DIY_baonu",
                    order:10,
                    result:{
                        player:function(player){
                return game.countPlayer(function(current){
                    if(current!=player){
                        return get.sgn(get.damageEffect(current,player,player));
                    }
                });
            },
                    },
                },
            },
            "DIY_shenji":{
                mod:{
                    targetInRange:function (card,player){
                        if(card.name=='sha') return true;
                    },
                    selectTarget:function(card,player,range){
            if(range[1]==-1) return;
            if(card.name=='sha') range[1]+=2;
        },
                    cardUsable:function(card,player,num){
            if(card.name=='sha') return num+2;
        },
                },
            },
            "DIY_wushuang":{
                shaRelated:true,
                audio:"ext:天牢令/image/audio:6",
                forced:true,
                locked:true,
                group:["wushuang1","wushuang2","DIY_wushuang_sha"],
                preHidden:["wushuang1","wushuang2"],
            },
            "DIY_wushuang1":{
                audio:"DIY_wushuang",
                audioname:["re_lvbu","shen_lvbu","lvlingqi"],
                trigger:{
                    player:"useCardToPlayered",
                },
                forced:true,
                filter:function(event,player){
        return event.card.name=='sha'&&!event.getParent().directHit.contains(event.target);
    },
                logTarget:"target",
                content:function(){
        var id=trigger.target.playerid;
        var map=trigger.getParent().customArgs;
        if(!map[id]) map[id]={};
        if(typeof map[id].shanRequired=='number'){
            map[id].shanRequired++;
        }
        else{
            map[id].shanRequired=2;
        }
    },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
        },
                },
            },
            "DIY_wushuang2":{
                audio:"DIY_wushuang",
                trigger:{
                    player:"useCardToPlayered",
                    target:"useCardToTargeted",
                },
                forced:true,
                logTarget:function(trigger,player){
        return player==trigger.player?trigger.target:trigger.player
    },
                filter:function(event,player){
        return event.card.name=='juedou';
    },
                content:function(){
        var id=(player==trigger.player?trigger.target:trigger.player)['playerid'];
        var idt=trigger.target.playerid;
        var map=trigger.getParent().customArgs;
        if(!map[idt]) map[idt]={};
        if(!map[idt].shaReq) map[idt].shaReq={};
        if(!map[idt].shaReq[id]) map[idt].shaReq[id]=1;
        map[idt].shaReq[id]++;
    },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg.card.name!='juedou'||Math.floor(arg.target.countCards('h','sha')/2)>player.countCards('h','sha')) return false;
        },
                },
            },
            "DIY_wushuang_sha":{
                trigger:{
                    global:"damageSource",
                },
                audio:"DIY_wushuang",
                forced:true,
                logTarget:"source",
                filter:function(event,player){
        var target=event.source;
        return target&&target==_status.currentPhase&&target.isAlive()&&target.isFriendOf(player)&&event.card&&event.card.name=='sha'&&event.getParent().type=='card';
    },
                content:function(){
        var source=trigger.source;
        source.addTempSkill('DIY_wushuang_sha2');
        source.addMark('DIY_wushuang_sha2',1,false);
    },
            },
            "DIY_wushuang_sha2":{
                audio:"DIY_wushuang",
                mark:true,
                intro:{
                    name:"无双",
                    content:function(storage,player){
                        var num=player.countMark('DIY_wushuang_sha2');
                        var str='暂无任何效果';
                        if(num>=1){
                            str='<li>本回合你使用【杀】次数上限+'+get.translation(player.countMark('DIY_wushuang_sha2'));
                        }
                        return str;
                    },
                },
                onremove:true,
                charlotte:true,
                mod:{
                    cardUsable:function(card,player,num){
            if(card.name=='sha') return num+player.countMark('DIY_wushuang_sha2');
        },
                },
            },
            "DIY_wumou2":{
                unique:true,
                charlotte:true,
                intro:{
                    content:function(storage){
            return '<li>你的锦囊牌均视为【杀】且不计入次数上限';
        },
                },
                mark:true,
                popup:false,
                silent:true,
                firstDo:true,
                trigger:{
                    player:"useCard1",
                },
                filter:function(event,player){
                    return event.card&&event.card.name=='sha'&&event.addCount!==false&&event.cards&&event.cards.length==1&&get.type(event.cards[0],'trick')=='trick';
                },
                forced:true,
                onremove:true,
                content:function(){
                    trigger.addCount=false;
                    if(player.stat[player.stat.length-1].card.sha>0){
                        player.stat[player.stat.length-1].card.sha--;
                    }
                },
                mod:{
                    cardname:function(card,player,name){
            if(['trick','delay'].contains(lib.card[card.name].type)) return 'sha';
        },
                },
            },
            "DIY_qixing":{
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    player:["phaseBefore","phaseEnd","damage"],
                },
                group:"DIY_qixing_dying",
                forced:true,
                filter:function(event,player){
        if(player.countMark('DIY_qixing')==0&&player.hp>0) return true;
        if(player.countMark('DIY_qixing')==1&&player.countCards('h')!=0) return true;
        if(player.countMark('DIY_qixing')==2&&player.countCards('h')>player.hp) return true;
        if(player.countMark('DIY_qixing')==3&&player.countCards('e')>0) return true;
        if(player.countMark('DIY_qixing')==4&&player.countCards('j')>0) return true;
        if(player.countMark('DIY_qixing')==5&&(player.countCards('h')>0||player.countCards('e')>0||player.countCards('j')>0)) return true;
        if(player.countMark('DIY_qixing')==6&&player.countCards('hej')>=7) return true;
        return false;
    },
                content:function(){
        player.addMark('DIY_qixing',1,false);
        player.gainMaxHp();
        player.recover();
        game.log(player,'已点亮'+get.translation(player.countMark("DIY_qixing"))+'颗“星”');
        player.draw(3);
        if(player.countMark("DIY_qixing")>6){
            player.awakenSkill('DIY_qixing');
            game.log(player,'成功完成使命');
            player.popup('成功完成使命');
            player.reinit('JX_shenzhugeliang','JX_BOSS_zhugeliang');
            player.recover(player.maxHp);
        }
    },
                mark:true,
                intro:{
                    content:function(storage,player){
                        var str='<li>未点亮一颗“星”';
                        if(player.countMark("DIY_qixing")==0){
                            str+='<br>体力值不为0';
                        }
                        if(player.countMark("DIY_qixing")>0){
                            str='<li>已点亮'+get.translation(player.countMark("DIY_qixing"))+'颗“星”';
                        }
                        if(player.countMark("DIY_qixing")==1){
                            str+='<br>有手牌';
                        }
                        if(player.countMark("DIY_qixing")==2){
                            str+='<br>手牌数大于体力值';
                        }
                        if(player.countMark("DIY_qixing")==3){
                            str+='<br>装备区有牌';
                        }
                        if(player.countMark("DIY_qixing")==4){
                            str+='<br>判定区有牌';
                        }
                        if(player.countMark("DIY_qixing")==5){
                            str+='<br>区域内有牌';
                        }
                        if(player.countMark("DIY_qixing")==6){
                            str+='<br>区域内牌数>7';
                        }
                        return str;
                },
                },
                mod:{
                    maxHandcard:function(player,num){
            return num+player.countMark('DIY_qixing');
        },
                },
            },
            "DIY_xiangxing":{
                unique:true,
                init:function(player){
        player.storage.DIY_xiangxing=7;
        player.storage.DIY_xiangxing_count=0;
        player.addSkill('DIY_xiangxing7');
    },
                mark:true,
                intro:{
                    content:"当前有#枚星",
                },
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                popup:false,
                content:function(){
        'step 0'
        var num=trigger.num;
        if(num){
            player.storage.DIY_xiangxing_count+=num;
        }
        if(player.storage.DIY_xiangxing_count>=7){
            if(player.hasSkill('DIY_yueyin')&&lib.skill.DIY_yueyin.skipDamage['x'+player.storage.DIY_xiangxing](player,trigger)){
                event.goto(3);
            }
            player.removeSkill('DIY_xiangxing'+player.storage.DIY_xiangxing);
            player.storage.DIY_xiangxing--;
            player.storage.DIY_xiangxing_count=0;
            player.updateMarks();
            if(player.storage.DIY_xiangxing){
                player.addSkill('DIY_xiangxing'+player.storage.DIY_xiangxing);
            }
            else{
                player.awakenSkill('DIY_xiangxing');
            }
            player.popup('DIY_xiangxing');
            game.log(player,'失去了一枚星');
        }
        else{
            player.updateMarks();
            event.finish();
        }
        'step 1'
        var list=game.filterPlayer();
        list.remove(player);
        list.sort(lib.sort.seat);
        var list2=[];
        for(var i=0;i<list.length;i++){
            list2.push(0);
        }
        for(var i=0;i<7;i++){
            list2[Math.floor(Math.random()*list2.length)]++;
        }
        event.list=list;
        event.list2=list2;
        'step 2'
        if(event.list.length){
            var target=event.list.shift();
            target.damage(event.list2.shift(),'thunder');
            player.line(target,'thunder');
            event.redo();
        }
        'step 3'
        if(player.storage.DIY_xiangxing==0){
            player.maxHp=3;
            player.update();
        }
    },
            },
            "DIY_yueyin":{
                unique:true,
                mark:true,
                intro:{
                    content:function(storage,player){
            var str='扣减'+(7-player.storage.DIY_xiangxing_count)+'点体力后失去下一枚星;';
            str+='<br>防上禳星伤害条件：'+lib.translate['xiangxing'+player.storage.xiangxing+'_info'];
            return str;
        },
                    markcount:function(storage,player){
            return Math.max(0,7-player.storage.DIY_xiangxing_count);
        },
                },
                skipDamage:{
                    "x7":function(player){
            return player.countCards('h')==0;
        },
                    "x6":function(player,event){
            return event.nature=='fire';
        },
                    "x5":function(player,event){
            return event.nature=='thunder';
        },
                    "x4":function(player,event){
            return event.name=='loseHp';
        },
                    "x3":function(player,event){
            return game.hasPlayer(function(current){
                return current!=player&&current.countCards('e')>=4;
            });
        },
                    "x2":function(player){
            return player.countCards('j')>=2;
        },
                    "x1":function(){
            return game.players.length==2;
        },
                },
            },
            "DIY_fengqi":{
                trigger:{
                    player:["phaseZhunbeiBegin","phaseJieshuBegin"],
                },
                audio:"kuangfeng2",
                direct:true,
                content:function(){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
                list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('风起',[list.trick,'vcard']);
        // for(var i in list){
        //        dialog.addText(get.translation(i)+'牌');
        //        dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.countCards('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
        }
        'step 1'
        if(result.bool){
            player.chooseUseTarget(result.links[0][2],true,false);
        }
    },
                ai:{
                    threaten:1.5,
                },
            },
            "DIY_gaiming":{
                trigger:{
                    player:"judgeBefore",
                },
                audio:"ext:天牢令/image/audio:1",
                direct:true,
                priority:1,
                unique:true,
                content:function(){
        "step 0"
        event.cards=get.cards(7);
        player.chooseCardButton(true,event.cards,'改命：选择一张牌作为你的'+trigger.judgestr+'判定结果').ai=function(button){
            if(get.attitude(player,trigger.player)>0){
                return 1+trigger.judge(button.link);
            }
            if(get.attitude(player,trigger.player)<0){
                return 1-trigger.judge(button.link);
            }
            return 0;
        };
        "step 1"
        if(!result.bool){
            event.finish();
            return;
        }
        player.logSkill('DIY_gaiming',trigger.player);
        var card=result.links[0];
        event.cards.remove(card);
        var judgestr=get.translation(trigger.player)+'的'+trigger.judgestr+'判定';
        event.videoId=lib.status.videoId++;
        event.dialog=ui.create.dialog(judgestr);
        event.dialog.classList.add('center');
        event.dialog.videoId=event.videoId;

        game.addVideo('judge1',player,[get.cardInfo(card),judgestr,event.videoId]);
        for(var i=0;i<event.cards.length;i++) event.cards[i].discard();
        // var node=card.copy('thrown','center',ui.arena).animate('start');
        var node;
        if(game.chess){
            node=card.copy('thrown','center',ui.arena).animate('start');
        }
        else{
            node=player.$throwordered(card.copy(),true);
        }
        node.classList.add('thrownhighlight');
        ui.arena.classList.add('thrownhighlight');
        if(card){
            trigger.cancel();
            trigger.result={
                card:card,
                judge:trigger.judge(card),
                node:node,
                number:get.number(card),
                suit:get.suit(card),
                color:get.color(card),
            };
            if(trigger.result.judge>0){
                trigger.result.bool=true;
                trigger.player.popup('洗具');
            }
            if(trigger.result.judge<0){
                trigger.result.bool=false;
                trigger.player.popup('杯具');
            }
            game.log(trigger.player,'的判定结果为',card);
            trigger.direct=true;
            trigger.position.appendChild(card);
            game.delay(2);
        }
        else{
            event.finish();
        }
        "step 2"
        ui.arena.classList.remove('thrownhighlight');
        event.dialog.close();
        game.addVideo('judge2',null,event.videoId);
        ui.clear();
        var card=trigger.result.card;
        trigger.position.appendChild(card);
        trigger.result.node.delete();
        game.delay();
    },
            },
            "DIY_qixing_dying":{
                trigger:{
                    player:"dying",
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                content:function(){
    'step 0'
    game.log(player,'使命失败');
    player.popup('使命失败');
    var num=player.countMark('DIY_qixing');
    player.draw(num);
    player.recover(num-player.hp);
    player.awakenSkill('DIY_qixing');
    },
            },
            "DIY_sanwen":{
                audio:"xinfu_sanwen",
                trigger:{
                    player:["useCard","respond"],
                },
                frequent:true,
                filter:function(event,player){
        return get.type2(event.card)!='equip';
    },
                content:function(){
        if(player.getStorage('DIY_sanwen').contains(trigger.card.name)) player.draw();
        player.markAuto('DIY_sanwen',[trigger.card.name]);
    },
                intro:{
                    content:"已使用过：<br>$",
                },
            },
            "DIY_qiai":{
                audio:"spqiai",
                trigger:{
                    global:"damageBegin4",
                },
                round:1,
                filter:function(event,player){
        return event.player!=player&&!event.player.hasSkill("DIY_qiai_mark");
    },
                content:function(){
        'step 0'
        var target=trigger.player;
        player.line(target,'green');
        player.swapHandcards(target);
        target.addTempSkill("DIY_qiai_mark");
        'step 1'
        var num1=player.countCards('h');
        var num2=trigger.player.countCards('h');
        if(num1>num2) trigger.player.recover();
        if(num1<num2) trigger.player.draw();
    },
                ai:{
                    expose:0.5,
                },
                group:["DIY_qiai_roundcount"],
            },
            "DIY_denglou":{
                unique:true,
                audio:"xinfu_denglou",
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
                },
                round:1,
                filter:function (event,player){
        if(player.countCards('h')) return false;
        var evt=event.getl(player);
        return evt&&evt.hs&&evt.hs.length;
    },
                content:function (){
        "step 0"
        var num1=trigger.getl(player).hs.length;
        var num2=Math.min(16,num1*4);
        event.cards=get.cards(num2);
        event.gains=[]
        event.discards=[]
        var content=['牌堆顶的'+get.cnNumber(num2)+'张牌',event.cards];
        game.log(player,'观看了','#y牌堆顶的'+get.cnNumber(num2)+'张牌');
        player.chooseControl('ok').set('dialog',content);
        "step 1"
        if(get.type(event.cards[0])!="basic"){
            event.gains.push(event.cards[0]);
            event.cards.remove(event.cards[0]);
        }
        else{
            var bool=game.hasPlayer(function(current){
                return player.canUse(event.cards[0],current);
            });
            if(bool){
                player.chooseUseTarget(event.cards[0],true,false);
            }
            else event.discards.push(event.cards[0]);
            event.cards.remove(event.cards[0]);
        }
        "step 2"
        if(event.cards.length) event.goto(1);
        else{
            if(event.gains.length) player.gain(event.gains,'gain2');
            if(event.discards.length){
                player.$throw(event.discards);
                game.cardsDiscard(event.discards);
            }
        }
    },
                group:["DIY_denglou_roundcount"],
            },
            "DIY_qiai_mark":{
                marktext:"七哀",
                mark:true,
                intro:{
                    name:"七哀",
                    content:"本回合已成为过〖七哀〗的目标",
                },
                locked:true,
            },
            "DIY_guolun":{
                audio:"xinfu_guolun",
                enable:"phaseUse",
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h')&&!target.hasSkill("DIY_guolun_mark");
    },
                content:function (){
        'step 0'
        event.cardt=target.getCards('h').randomGet();
        target.showCards(event.cardt);
        player.chooseCard('he',true).ai=function(card){
            var numt=event.cardt.number;
            var att=get.attitude(player,target);
            var value=get.value(event.cardt);
            if(card.number<numt||att>2) return value+6-get.value(card);
            else if(card.number==numt) return value-get.value(card);
            return -1;
        };
        'step 1'
        if(!result.bool) event.finish();
        else{
            player.showCards(result.cards);
            event.cardp=result.cards;
        }
        'step 2'
        player.$giveAuto(event.cardp,target);
        target.gain(event.cardp,player);
        target.give(event.cardt,player);
        'step 3'
        var nump=event.cardp[0].number;
        var numt=event.cardt.number;
        if(nump<numt){
            player.draw();
            target.addTempSkill("DIY_guolun_mark");
        }
        else if(nump>numt){
            target.draw();
        }
    },
                ai:{
                    threaten:1.5,
                    order:8,
                    result:{
                        player:function (player,target){
                if(get.attitude(player,target)>0) return 1.5;
                return 0.5;
            },
                    },
                },
            },
            "DIY_songsang":{
                limited:true,
                unique:true,
                init:function (player){
        player.storage.DIY_songsang=false;
    },
                skillAnimation:true,
                animationColor:"wood",
                audio:"xinfu_songsang",
                derivation:"xinlianhuan",
                trigger:{
                    global:"dying",
                },
                filter:function (event,player){
        if(player.storage.DIY_songsang==true) return false;
        return true;
    },
                content:function (){
        player.awakenSkill('DIY_songsang');
        player.gainMaxHp();
        player.recover();
        player.storage.DIY_songsang=true;
    },
                mark:true,
                intro:{
                    content:"limited",
                },
            },
            "DIY_zhanji":{
                audio:"xinfu_zhanji",
                trigger:{
                    player:"gainAfter",
                },
                forced:true,
                filter:function (event,player){
        return event.getParent(2).name!='DIY_zhanji'&&event.getParent(2).name!='xinfu_zhanji'&&event.getParent(2).name!='zishu_draw';
    },
                content:function (){
        player.draw('nodelay');
    },
            },
            "DIY_guolun_mark":{
                marktext:"论",
                mark:true,
                intro:{
                    name:"论",
                    content:"共有一枚标记",
                },
                locked:true,
            },
            "DIY_qiaoshi":{
                audio:"qiaoshi",
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function(event,player){
        return event.player!=player&&event.player.isAlive();
    },
                check:function(event,player){
        return get.attitude(player,event.player)>=0;
    },
                logTarget:"player",
                content:function(){
                    var card=get.cardPile(function(card){
                    return card.name=='sha';
                });
                if(card) trigger.player.gain(card,'gain2');
            game.asyncDraw([player]);
    },
                ai:{
                    expose:0.1,
                },
            },
            "DIY_yanyu_sha":{
                audio:"yanyu",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                prompt:"摸牌阶段开始时，你可以改为获得两张【杀】，若如此做，本回合的出牌阶段，你可以重铸任意张【杀】并于回合结束摸等量的牌",
                filter:function(event,player){
        return !event.numFixed;
    },
                content:function(){
        "step 0"
        trigger.changeToZero();
        "step 1"
        var cards=[];
        for(var i=0;i<2;i++){
            cards.push(game.createCard('sha'));
        }
        player.gain(cards,'gain2');
        player.addTempSkill("DIY_yanyu_phaseUse");
    },
                ai:{
                    threaten:1.2,
                },
            },
            "DIY_yanyu_phaseUse":{
                audio:"yanyu",
                enable:"phaseUse",
                filter:function(event,player){
        return player.countCards('h','sha')>0;
    },
                filterCard:{
                    name:"sha",
                },
                prepare:function(cards,player){
        game.log(player,'将',cards,'置入了弃牌堆');
    },
                loseTo:"discardPile",
                visible:true,
                delay:0.5,
                content:function(){
        player.draw();
        player.addMark("DIY_yanyu_draw",1,false);
    },
                ai:{
                    basic:{
                        order:1,
                    },
                    result:{
                        player:1,
                    },
                },
            },
            "DIY_yanyu":{
                audio:"yanyu",
                group:["DIY_yanyu_sha","DIY_yanyu_draw","DIY_yanyu_man"],
            },
            "DIY_yanyu_draw":{
                audio:"yanyu",
                marktext:"燕语",
                intro:{
                    name:"燕语",
                    content:"本回合已重铸$张【杀】",
                },
                trigger:{
                    player:"phaseJieshuBegin",
                },
                frequent:true,
                preHidden:true,
                filter:function(event,player){
        return player.countMark('DIY_yanyu_draw')>0;
    },
                content:function(){
                    var num=Math.min(3,player.countMark('DIY_yanyu_draw'));
                    player.draw(num);
                    player.removeMark('DIY_yanyu_draw',player.countMark('DIY_yanyu_draw'),false);
                },
            },
            "DIY_yanyu_man":{
                audio:"yanyu",
                trigger:{
                    player:["useCard","respond"],
                },
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        if(event.cards){
            for(var i=0;i<event.cards.length;i++){
                if(get.position(event.cards[i],true)=='o') return true;
            }
        }
        return false;
    },
                frequent:true,
                content:function(){
        'step 0'
        cards=trigger.cards.slice(0);
        for(var i=0;i<cards.length;i++){
            if(get.position(cards[i],true)!='o'){
                cards.splice(i--,1);
            }
        }
        player.chooseTarget(true,'选择一名角色获得一张【杀】').set('ai',function(target){
            return get.attitude(_status.event.player,target);
        }).set('source',trigger.targets);
        'step 1'
        if(result.bool){
        var targets=result.targets[0]
        player.line(target,'green');
        var card=get.cardPile(function(card){
            return card.name=='sha';
        });
        if(card) targets.gain(card,'gain2');
        }
    },
            },
            "DIY_xunxun":{
                audio:"xunxun",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                preHidden:true,
                content:function(){
        "step 0"
        var num=Math.max(4,game.players.length);
        var cards=get.cards(num);
        game.cardsGotoOrdering(cards);
        var next=player.chooseToMove('恂恂：将两张牌置于牌堆顶',true);
        next.set('list',[
            ['牌堆顶',cards],
            ['牌堆底'],
        ]);
        next.set('filterMove',function(from,to,moved){
            if(to==1&&moved[1].length>=num-2) return false;
            return true;
        });
        next.set('filterOk',function(moved){
            return moved[1].length==num-2;
        });
        next.set('processAI',function(list){
            var cards=list[0][1].slice(0).sort(function(a,b){
                return get.value(b)-get.value(a);
            });
            return [cards,cards.splice(num-2)];
        })
        'step 1'
        var top=result.moved[0];
        var bottom=result.moved[1];
        top.reverse();
        for(var i=0;i<top.length;i++){
            ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
        }
        for(i=0;i<bottom.length;i++){
            ui.cardPile.appendChild(bottom[i]);
        }
        game.updateRoundNumber();
        game.delayx();
    },
            },
            "DIY_wangxi":{
                audio:"wangxi",
                trigger:{
                    player:"damageEnd",
                    source:"damageSource",
                },
                filter:function(event){
        if(event._notrigger.contains(event.player)) return false;
        return event.num&&event.source&&event.player&&
        event.player.isAlive()&&event.source.isAlive()&&event.source!=event.player;
    },
                check:function(event,player){
        if(player.isPhaseUsing()) return true;
        if(event.player==player) return get.attitude(player,event.source)>-3;
        return get.attitude(player,event.player)>-3;
    },
                logTarget:function(event,player){
        if(event.player==player) return event.source;
        return event.player;
    },
                preHidden:true,
                content:function(){
        "step 0"
        event.count=trigger.num;
        "step 1"
        list=[player];
        if(trigger.player.countCards('h')>trigger.source.countCards('h')) list.push(trigger.source);
        if(trigger.source.countCards('h')>trigger.player.countCards('h')) list.push(trigger.player);
        game.asyncDraw(list);
        event.count--;
        "step 2"
        game.delay();
        "step 3"
        if(event.count){
            player.chooseBool(get.prompt2('DIY_wangxi',lib.skill.DIY_wangxi.logTarget(trigger,player)))
        }
        else event.finish();
        "step 4"
        if(result.bool){
            player.logSkill('DIY_wangxi',lib.skill.DIY_wangxi.logTarget(trigger,player));
            event.goto(1);
        }
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "DIY_jili":{
                audio:"jili",
                trigger:{
                    global:"useCardToTargeted",
                },
                forced:true,
                filter:function(event,player){
        if(!event.targets) return false;
        if(event.player==player) return false;
        if(event.targets.contains(player)) return false;
        if(get.info(event.card).multitarget) return false;
        var type=get.type(event.card);
        if(type!='basic'&&type!='trick') return false;
        return true;
    },
                autodelay:true,
                content:function(){
        player.logSkill('DIY_jili_audio');
        player.logSkill('DIY_jili_audio');
        player.logSkill('DIY_jili_audio');
        trigger.getParent().targets.add(player);
        trigger.player.line(player,'green');
    },
            },
            "DIY_zhidao":{
                audio:"zhidao",
                trigger:{
                    target:"useCardToTargeted",
                },
                logTarget:"player",
                forced:true,
                preHidden:true,
                filter:function(event,player){
        var source=event.player;
        if(source==player) return false;
        if(source.countCards('hej')==0) return false;
        return true;
    },
                content:function(){
        var card=trigger.player.getCards('hej').randomGet();
        player.gain(card,trigger.player,'giveAuto','bySelf');
    },
            },
            "DIY_jili_audio":{
                audio:"jili",
            },
            "DIY_shensu":{
                group:["DIY_shensu1","DIY_shensu2","DIY_shensu3","DIY_shensu4","DIY_shensu_sha"],
                audio:"shensu1",
            },
            "DIY_shebian":{
                audio:"shebian",
                group:"DIY_shebian_over",
                trigger:{
                    global:["turnOverEnd","linkEnd","showCharacterEnd","hideCharacterEnd","removeCharacterEnd"],
                },
                check:function(event,player){
        return player.canMoveCard(true,true);
    },
                filter:function(event,player){
        return player.canMoveCard(null,true);
    },
                content:function(){
        player.moveCard();
    },
            },
            "DIY_shensu_sha":{
                audio:"shensu1",
                trigger:{
                    player:["phaseJudgeSkipped","phaseJudgeCancelled","phaseDrawSkipped","phaseDrawCancelled","phaseUseSkipped","phaseUseCancelled","phaseDiscardSkipped","phaseDiscardCancelled"],
                },
                direct:true,
                content:function(){
        "step 0"
        if(player.isMinHandcard()) player.draw();
        if(player.isMinHp()) player.recover();
        var check= player.countCards('h')>2;
        player.chooseTarget(get.prompt("shensu"),"视为对一名其他角色使用一张【杀】",function(card,player,target){
            if(player==target) return false;
            return player.canUse({name:'sha'},target,false);
        }).set('check',check).set('ai',function(target){
            if(!_status.event.check) return 0;
            return get.effect(target,{name:'sha'},_status.event.player);
        }).setHiddenSkill('shensu1');
        "step 1"
        if(result.bool){
            player.logSkill('shensu1',result.targets);
            player.useCard({name:'sha',isCard:true},result.targets[0],false);
        }
    },
            },
            "DIY_shensu1":{
                audio:"shensu1",
                trigger:{
                    player:"phaseJudgeBefore",
                },
                prompt:"神速：是否跳过判定阶段？",
                filter:function(event,player){
                    return player.countCards('j');
                },
                content:function(){
        trigger.cancel();
        player.link();
    },
            },
            "DIY_shensu4":{
                audio:"shensu1",
                trigger:{
                    player:"phaseDiscardBefore",
                },
                prompt:"神速：是否跳过弃牌阶段？",
                filter:function(event,player){
                    return player.needsToDiscard();
                },
                content:function(){
        trigger.cancel();
        player.turnOver();
    },
            },
            "DIY_shensu2":{
                audio:"shensu1",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                prompt:"神速：是否跳过摸牌阶段？",
                filter:function(event,player){
                    return !event.numFixed;
                },
                content:function(){
        trigger.cancel();
    },
            },
            "DIY_shensu3":{
                audio:"shensu1",
                trigger:{
                    player:"phaseUseBefore",
                },
                prompt:"神速：是否跳过出牌阶段？",
                filter:function(event,player){
                    return player.countCards('h')>0;
                },
                content:function(){
        trigger.cancel();
    },
            },
            "DIY_shebian_over":{
                audio:"shebian",
                trigger:{
                    player:"damageEnd",
                },
                filter:function(event,player){
        return player.classList.contains('turnedover');
    },
                check:function(event,player){
        return player.isTurnedOver();
    },
                prompt:"是否发动【设变】，将武将牌翻面？",
                content:function(){
        player.turnOver();
    },
            },
            "DIY_qirang":{
                audio:"qirang",
                trigger:{
                    player:"equipEnd",
                },
                frequent:true,
                content:function(){
        var card=get.cardPile(function(card){
            return get.type(card,'trick')=='trick';
        });
        if(card) player.gain(card,'gain2').gaintag.add('DIY_qirang');
    },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
            },
                    },
                    threaten:1.3,
                },
                group:["DIY_qirang2","DIY_qirang_use"],
                subSkill:{
                    use:{
                        audio:"qirang",
                        trigger:{
                            player:"useCard2",
                        },
                        direct:true,
                        filter:function(event,player){
                  if(get.type(event.card)!='trick') return false;
                  var info=get.info(event.card);
                  if(info.allowMultiple==false) return false;
                  if(!player.hasHistory('lose',function(evt){
                      if(evt.getParent()!=event) return false;
                      for(var i in evt.gaintag_map){
                          if(evt.gaintag_map[i].contains('DIY_qirang')) return true;
                      }
                      return false;
                  })) return false;
                  if(!info.multitarget){
                      if(game.hasPlayer(function(current){
                          return !event.targets.contains(current)&&lib.filter.targetEnabled2(event.card,player,current)&&lib.filter.targetInRange(event.card,player,current);
                      })){
                          return true;
                      }
                  }
                  return false;
              },
                        content:function(){
                  'step 0'
                  var prompt2='为'+get.translation(trigger.card)+'增加一个目标'
                  player.chooseTarget(get.prompt('DIY_qirang'),function(card,player,target){
                      var player=_status.event.player;
                      if(_status.event.targets.contains(target)) return false;
                      return lib.filter.targetEnabled2(_status.event.card,player,target)&&lib.filter.targetInRange(_status.event.card,player,target);
                  }).set('prompt2',prompt2).set('ai',function(target){
                      var trigger=_status.event.getTrigger();
                      var player=_status.event.player;
                      return get.effect(target,trigger.card,player,player)*(_status.event.targets.contains(target)?-1:1);
                  }).set('targets',trigger.targets).set('card',trigger.card);
                  'step 1'
                  if(result.bool){
                      if(!event.isMine()&&!event.isOnline()) game.delayx();
                      event.targets=result.targets;
                  }
                  else{
                      event.finish();
                  }
                  'step 2'
                  if(event.targets){
                      player.logSkill('DIY_qirang_use',event.targets);
                      trigger.targets.addArray(event.targets);
                  }
              },
                        sub:true,
                    },
                },
            },
            "DIY_yuhua":{
                audio:"yuhua",
                trigger:{
                    global:["loseEnd","discardAfter"],
                },
                filter:function(event,player){
        if(event.player==player) return false;
        if(event.name=='lose'&&event.parent.name!='equip') return false;
        for(var i=0;i<event.cards.length;i++){
            if(get.type(event.cards[i])=='equip'&&get.position(event.cards[i])=='d'){
                return true;
            }
        }
    },
                frequent:true,
                content:function(){
        "step 0"
        if(trigger.delay==false) game.delay();
        "step 1"
        var cards=[];
        for(var i=0;i<trigger.cards.length;i++){
            if(get.type(trigger.cards[i])=='equip'&&get.position(trigger.cards[i])=='d'){
                cards.push(trigger.cards[i]);
            }
        }
        if(cards.length){
            player.gain(cards,'gain2','log');
        }
    },
                mod:{
                    ignoredHandcard:function(card,player){
            if(get.type(card)!='basic'){
                return true;
            }
        },
                    cardDiscardable:function(card,player,name){
            if(name=='phaseDiscard'&&get.type(card)!='basic') return false;
        },
                },
            },
            "DIY_qirang2":{
                audio:"qirang",
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter"],
                },
                frequent:true,
                filter:function(event,player){
        var evt=event.getl(player);
        return evt&&evt.player==player&&evt.es&&evt.es.length>0;
    },
                content:function(){
                "step 0"
        event.count=trigger.getl(player).es.length;
                "step 1"
        event.count--;
        var card=get.cardPile(function(card){
            return get.type(card,'basic')=='basic';
        });
        if(card) player.gain(card,'gain2');
                "step 2"
        if(event.count>0){
            player.chooseBool(get.prompt2('DIY_qirang')).set('frequentSkill','DIY_qirang').ai=lib.filter.all;
        }
        else event.finish();
                "step 3"
        if(result.bool){
            player.logSkill('DIY_qirang');
            event.goto(1);
        }
    },
                ai:{
                    noe:true,
                    reverseEquip:true,
                    effect:{
                        target:function(card,player,target,current){
                if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
            },
                    },
                },
            },
            "DIY_fenxun":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                position:"he",
                filterCard:true,
                selectCard:function(card,player,target){
                    var num=_status.event.player.getHistory('custom',function(evt){
                        return evt.DIY_fenxun==true;
                    }).length;
                    return num;
                },
                check:function(card,player,target){
                    return 6-get.value(card);
                },
                filterTarget:function(card,player,target){
                    return target!=player&&!target.hasSkill("DIY_fenxun_1");
                },
                content:function(){
                    player.line(target,'yellow');
                    player.markAuto('DIY_fenxun_2',targets);
                    player.addSkill('DIY_fenxun_2');
                    target.addSkill('DIY_fenxun_1');
                    target.storage.DIY_fenxun_1=player;
                    player.getHistory('custom').push({DIY_fenxun:true});
                },
                ai:{
                    order:6.5,
                    result:{
                        player:function(player,target){
                            if(get.distance(player,target)<=1) return 0;
                            var hs=player.getCards('h','shunshou');
                            if(hs.length&&player.canUse(hs[0],target,false)){
                                return 1;
                            }
                            var geteff=function(current){
                                return player.canUse('sha',current,false,true)&&get.effect(current,{name:'sha'},player,player)>0;
                            }
                            if(player.hasSha()&&geteff(target)){
                                var num=game.countPlayer(function(current){
                                    return current!=player&&get.distance(player,current)<=1&&geteff(current);
                                });
                                if(num==0){
                                    if(game.hasPlayer(function(current){
                                        return player.canUse('sha',current)&&geteff(current)&&current!=target;
                                    })){
                                        return 1;
                                    }
                                }
                                else if(num==1){
                                    return 1;
                                }
                            }
                            return 0;
                        },
                    },
                },
                subSkill:{
                    "1":{
                        marktext:"奋迅",
                        mark:true,
                        intro:{
                            content:"计算距离时，视为在$的位置",
                        },
                        mod:{
                            globalFrom:function(from,to,distance){
                                return get.distance(from.storage.DIY_fenxun_1,to);
                            },
                            globalTo:function(from,to,distance){
                                return get.distance(to.storage.DIY_fenxun_1,from);
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:"fenxun",
                        trigger:{
                            player:"phaseZhunbei",
                        },
                        marktext:"奋迅",
                        onremove:true,
                        intro:{
                            content:"到$的距离视为1",
                        },
                        mod:{
                            globalFrom:function(from,to){
                                if(from.storage.DIY_fenxun_2.contains(to)){
                                    return -Infinity;
                                }
                            },
                        },
                        forced:true,
                        direct:true,
                        content:function(){
                player.removeSkill('DIY_fenxun_2');
                game.countPlayer(function(current){
                    if(current.hasSkill("DIY_fenxun_1")){
                        current.removeSkill('DIY_fenxun_1');
                    }
                });
            },
                        sub:true,
                    },
                    "3":{
                        audio:"fenxun",
                        trigger:{
                            player:"phaseDiscardBegin",
                        },
                        forced:true,
                        content:function(){
                    var num=game.players.length-player.countMark("DIY_fenxun_2");
                    if(num>0) player.chooseToDiscard('he',num,true);
                    player.removeMark("DIY_fenxun_2",Infinity,false);
            },
                        sub:true,
                    },
                },
            },
            "DIY_duanbing":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard2",
                },
                forced:true,
                content:function(){
        trigger.directHit.addArray(game.filterPlayer(function(current){
            return current!=player&&player.countCards('e')<=current.countCards('e');
        }));
    },
                group:"DIY_duanbing_sha",
                subSkill:{
                    sha:{
                        audio:"DIY_duanbing",
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        prompt:"短兵：是否使目标装备失效？",
                        filter:function(event,player){
                return event.card.name=='sha'&&get.distance(player,event.target)<=1;
            },
                        logTarget:"target",
                        content:function(){
                trigger.target.addTempSkill('qinggang2');
                trigger.target.storage.qinggang2.add(trigger.card);
            },
                        ai:{
                            "directHit_ai":true,
                            skillTagFilter:function(player,tag,arg){
            return get.distance(player,arg.target)<=1;
        },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_shenliu_jieying":{
                audio:"ext:天牢令/image/audio:2",
                locked:true,
                global:["DIY_shenliu_jieying_1","DIY_shenliu_jieying_3","DIY_shenliu_jieying_4"],
                ai:{
                    effect:{
                        target:function(card){
                if(card.name=='tiesuo') return 'zeroplayertarget';
            },
                    },
                },
                group:["DIY_shenliu_jieying_1","DIY_shenliu_jieying_2","DIY_shenliu_jieying_3","DIY_shenliu_jieying_4"],
                subSkill:{
                    "1":{
                        mod:{
                            maxHandcard:function (player,num){
            if(game.countPlayer(function(current){return current.hasSkill('DIY_shenliu_jieying')})>0&&player.hasMark('DIY_shenliu_jieying_1')) return num+2;
        },
                        },
                        audio:"ext:天牢令/image/audio:2",
                        trigger:{
                            global:"gameDrawAfter",
                            player:["linkBefore","showCharacterAfter","enterGame"],
                        },
                        direct:true,
                        marktext:"营",
                        intro:{
                            content:"结连营之策，拒暴虐之贼！",
                        },
                        forced:true,
                        filter:function(event,player){
                if(event.name=='link') return player.isLinked();
                return (event.name!='phase'||game.phaseNumber==0)&&!player.isLinked();
            },
                        content:function(){
                game.countPlayer(function(current){
                    if(current.hasSkill("DIY_shenliu_jieying")){
                        current.line(player,'yellow');
                        current.logSkill('DIY_shenliu_jieying',player);
                    }
                });
                if(trigger.name!='link') player.link(true);
                else trigger.cancel();
            },
                        ai:{
                            effect:{
                                target:function(card){
                if(card.name=='tiesuo') return 'zeroplayertarget';
            },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:"ext:天牢令/image/audio:2",
                        trigger:{
                            player:"phaseJieshuBegin",
                        },
                        direct:true,
                        filter:function(event,player){
                return game.hasPlayer(function(current){
                    return current!=player;
                });
            },
                        content:function(){
                "step 0"
                player.chooseTarget(true,'请选择【结营】的目标',function(card,player,target){
                    return target!=player;
                }).ai=function(target){
                    return 1+Math.random();
                };
                "step 1"
                if(result.bool){
                    result.targets[0].addMark('DIY_shenliu_jieying_1',1,false);
                    player.addMark('DIY_shenliu_jieying_1',1,false);
                    player.logSkill('DIY_shenliu_jieying');
                }else{
                    event.finish();
                };
            },
                        sub:true,
                    },
                    "3":{
                        audio:"ext:天牢令/image/audio:2",
                        trigger:{
                            player:"phaseDrawBegin2",
                        },
                        direct:true,
                        filter:function(event,player){
                return player.countMark("DIY_shenliu_jieying_1")>0;
            },
                        content:function(){
                trigger.num+=2;
                game.countPlayer(function(current){
                    if(current.hasSkill("DIY_shenliu_jieying")){
                        current.line(player,'yellow');
                        current.logSkill('DIY_shenliu_jieying',player);
                    }
                });
            },
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            player:"damageEnd",
                        },
                        direct:true,
                        filter:function(event,player){
                            if(player.hasSkill("DIY_guying")) return false;
                            if(event.nature=='fire'&&player.countMark("DIY_shenliu_jieying_1")>0) return true;
                return false;
            },
                        content:function(){
                player.removeMark('DIY_shenliu_jieying_1',1,false);
                game.countPlayer(function(current){
                    if(current.hasSkill("DIY_shenliu_jieying")){
                        current.line(player,'yellow');
                        current.logSkill('DIY_shenliu_jieying',player);
                    }
                });
            },
                        sub:true,
                    },
                },
            },
            "DIY_longnu":{
                mark:true,
                locked:true,
                marktext:"龙",
                intro:{
                    content:function(storage,player,skill){
            if(player.storage.DIY_longnu==true) return '锁定技，出牌阶段开始时，你摸一张牌，然后你获得如下效果直至回合结束：你的锦囊牌均视为雷杀且无距离和次数限制。';
            return '锁定技，出牌阶段开始时，你摸一张牌，然后你获得如下效果直至回合结束：你的红色手牌均视为火杀且无距离和次数限制。';
        },
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseUseBegin",
                },
                frequent:true,
                content:function(){
        'step 0'
        player.draw();
        'step 1'
        if(player.storage.DIY_longnu==true){
            player.storage.DIY_longnu=false;
            player.addTempSkill('DIY_longnu_2');
        }
        else{
            player.storage.DIY_longnu=true;
            player.addTempSkill('DIY_longnu_1');
        };
    },
                subSkill:{
                    "1":{
                        mod:{
                            cardname:function(card,player){
                    if(get.color(card)=='red') return 'sha';
                },
                            cardnature:function(card,player){
                    if(get.color(card)=='red') return 'fire';
                },
                            targetInRange:function(card){
                    if(get.color(card)=='red') return true;
                },
                            cardUsable:function(card,player){
                    if(get.color(card)=='red') return Infinity;
                },
                        },
                        ai:{
                            effect:{
                                target:function(card,player,target,current){
                        if(get.tag(card,'respondSha')&&current<0) return 0.6
                    },
                            },
                            respondSha:true,
                        },
                        sub:true,
                    },
                    "2":{
                        mod:{
                            cardname:function(card,player){
                    if(['trick','delay'].contains(lib.card[card.name].type)) return 'sha';
                },
                            cardnature:function(card,player){
                    if(['trick','delay'].contains(lib.card[card.name].type)) return 'thunder';
                },
                            cardUsable:function(card,player){
                    if(card.name=='sha'&&card.nature=='thunder') return Infinity;
                },
                            targetInRange:function(card){
                    if(card.name=='sha'&&card.nature=='thunder') return true;
                },
                        },
                        ai:{
                            effect:{
                                target:function(card,player,target,current){
                        if(get.tag(card,'respondSha')&&current<0) return 0.6
                    },
                            },
                            respondSha:true,
                        },
                        sub:true,
                    },
                },
                ai:{
                    fireAttack:true,
                    halfneg:true,
                    threaten:1.05,
                },
            },
            "DIY_polu":{
                audio:"polu",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                filter:function(event,player){
        if(!lib.inpile.contains('DIY_piliche')) return true;
        return !!get.cardPile(function(card){
            return card.name=='DIY_piliche';
        });
    },
                content:function(){
        var card;
        if(!lib.inpile.contains('DIY_piliche')){
            card=game.createCard2('DIY_piliche','diamond',1);
            lib.inpile.push('DIY_piliche');
        }
        else card=get.cardPile(function(card){
            return card.name=='DIY_piliche';
        });
        player.chooseUseTarget(card,true,'nopopup');
    },
                group:"DIY_polu_damage",
                subSkill:{
                    damage:{
                        trigger:{
                            player:"damageEnd",
                        },
                        audio:"polu",
                        forced:true,
                        content:function(){
                'step 0'
                event.count=trigger.num;
                'step 1'
                event.count--;
                player.draw(2);
                'step 2'
                var card=get.cardPile2(function(card){
                    return get.subtype(card,false)=='equip1'&&player.canUse(card,player);
                });
                if(card) player.chooseUseTarget(card,true,'nopopup');
                'step 3'
                if(event.count>0) event.goto(1);
            },
                        sub:true,
                    },
                },
            },
            "DIY_choulue":{
                audio:"choulve",
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                filter:function(event,player){
        return game.hasPlayer(function(current){
            return current!=player&&current.countCards('he');
        })
    },
                content:function(){
        'step 0'
        var str='令一名其他角色交给你一张牌';
        var history=player.getAllHistory('damage',function(evt){
            return evt.card&&evt.card.name&&lib.card[evt.card.name];
        })
        if(history.length) event.cardname=history[history.length-1].card.name;
        if(event.cardname){
            str+='若其如此做，视为你使用【'+get.translation(event.cardname)+'】';
        }
        var goon=true;
        if(event.cardname){
            goon=game.hasPlayer(function(current){
                return player.canUse(event.cardname,current)&&get.effect(current,{name:event.cardname},player,player)>0;
            });
        }
        player.chooseTarget(get.prompt('DIY_choulue'),str,function(card,player,target){
            return target!=player&&target.countCards('he');
        }).set('ai',function(target){
            if(!_status.event.goon) return 0;
            var player=_status.event.player;
            if(get.attitude(player,target)>=0&&get.attitude(target,player)>=0){
                return Math.sqrt(target.countCards('he'));
            }
            return 0;
        }).set('goon',goon);
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('DIY_choulue',target);
            target.chooseCard(true,'he','交给'+get.translation(player)+'一张牌',
                event.cardname?('若如此做，视为'+get.translation(player)+
                '使用【'+get.translation(event.cardname)+'】'):null).set('ai',function(card){
                if(_status.event.goon) return 7-get.value(card);
                return 0;
            }).set('goon',get.attitude(target,player)>1);
            event.target=target;
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            event.target.give(result.cards,player);
            if(event.cardname){
                player.chooseUseTarget(event.cardname,true,false);
            }
        }
    },
            },
            "DIY_piliche":{
                trigger:{
                    source:"damageSource",
                },
                check:function(event,player){
        return get.attitude(player,event.player)*get.value(event.player.getDiscardableCards(player,'e'),event.player)>0;
    },
                filter:function(event,player){
                    if(event.player.countCards('e')<=0&&event.player.countCards('h')<=0&&event.player.isTurnedOver()) return false;
        return player!=event.player&&event.player.isIn();
    },
                logTarget:"player",
                content:function(){
        'step 0'
        var num=[1,0].randomGet();
        if(num=1){
            player.discardPlayerCard(trigger.player,'e',true,trigger.player.countCards('e'));
            event.finish();
        }
        'step 1'
        var num=[1,0].randomGet();
        if(num=1){
            player.discardPlayerCard(trigger.player,'h',true,trigger.player.countCards('h'));
        }
        'step 2'
        var num=[1,0].randomGet();
        if(num=1&&!trigger.player.isTurnedOver()){
            trigger.player.turnOver();
        }
        'step 3'
        game.delay();
        event.finish();
    },
            },
            "DIY_guying":{
                audio:"guying",
                trigger:{
                    player:"loseAfter",
                },
                mod:{
                    maxHandcard:function(player,num){
            return num+player.countMark('DIY_guying');
        },
                },
                forced:true,
                filter:function(event,player){
        var num=player.getHistory('custom',function(evt){
            return evt.DIY_guying==true;
        }).length;
        if(event.getParent(2).name=='DIY_guying') return false;
        if(num>player.hp) return false;
        if(event.type!='discard'){
            var evt=event.getParent();
            if(evt.name!='useCard'&&evt.name!='respond') return false;
        }
        var target=_status.currentPhase;
        if(!event.cards2||event.cards2.length!=1||!target||target==player||!target.isIn()) return false;
        return get.position(event.cards2[0])=='d'||target.countCards('he')<0;
    },
                logTarget:function(){
        return _status.currentPhase;
    },
                content:function(){
        'step 0'
        if(trigger.delay===false) game.delayx();
        event.target=_status.currentPhase;
        event.card=trigger.cards2[0];
        'step 1'
        player.addMark('DIY_guying',1,false);
        event.addIndex=0;
        player.gain(event.target.getCards('he').randomGet(),'giveAuto',event.target);
        player.gain(card,'gain2');
        player.getHistory('custom').push({DIY_guying:true});
        'step 2'
        if(player.isIn()&&player.getCards('h').contains(card)&&get.type(card,player)=='equip') player.chooseUseTarget(card,true,'nopopup');
    },
                onremove:true,
                intro:{
                    content:"已发动过#次",
                },
                group:["DIY_guying_discard","DIY_guying_jieying","DIY_guying_shenganning","DIY_guying_lianying","DIY_guying_link","DIY_guying_xiying"],
                locked:true,
                ai:{
                    effect:{
                        target:function(card){
                if(card.name=='tiesuo') return 'zeroplayertarget';
            },
                    },
                },
                subSkill:{
                    discard:{
                        audio:"guying",
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function(event,player){
                return player.countMark('DIY_guying')>0;
            },
                        content:function(){
                var num=player.countMark('DIY_guying');
                player.removeMark('DIY_guying',num,false);
            },
                        sub:true,
                    },
                    jieying:{
                        audio:"guying",
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function(event,player){
                return player.hasMark('drlt_jieying_mark');
            },
                        content:function(){
                game.countPlayer(function(current){
            if(current!=player&&current.hasSkill("drlt_jieying")&&current.isAlive()){
                player.line(current,'yellow');
                game.log(current,'的<font color=#68DD7F>【劫营】</font>被'+get.translation(player)+'防止了');
                current.addTempSkill('DIY_guying_drlt_jieying');
            }
        });
            },
                        sub:true,
                    },
                    shenganning:{
                        audio:"guying",
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        filter:function(event,player){
                return player!=event.player&&event.player.hasMark('drlt_jieying_mark')&&event.player.hasSkill("drlt_jieying")&&event.player.isAlive();
            },
                        content:function(){
                game.countPlayer(function(current){
            if(current!=player&&current.hasSkill("drlt_jieying")&&current.isAlive()){
                player.line(current,'yellow');
                current.removeMark('drlt_jieying_mark',trigger.player.countMark('drlt_jieying_mark'));
                player.addMark('drlt_jieying_mark',1);
                game.log(current,'，你不发动<font color=#68DD7F>【劫营】</font>你玩什么，今天我'+get.translation(player)+'帮你<font color=#68DD7F>【劫营】</font>');
            }
        });
            },
                        sub:true,
                    },
                    link:{
                        audio:"guying",
                        trigger:{
                            player:"linkBegin",
                        },
                        forced:true,
                        filter:function(event,player){
                return !player.isLinked();
            },
                        content:function(){
                trigger.cancel();
            },
                        sub:true,
                    },
                    lianying:{
                        audio:"guying",
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        content:function(){
                game.countPlayer(function(current){
            if(current!=player&&current.hasSkill("lianying")&&current.isAlive()){
                player.line(current,'yellow');
                game.log(current,'因<font color=#68DD7F>【连营】</font>被'+get.translation(player)+'制裁');
                current.addTempSkill('DIY_guying_drlt_jieying');
            }
        });
                game.countPlayer(function(current){
            if(current!=player&&current.hasSkill("relianying")&&current.isAlive()){
                player.line(current,'yellow');
                game.log(current,'因<font color=#68DD7F>【连营】</font>被'+get.translation(player)+'制裁');
                current.addTempSkill('DIY_guying_drlt_jieying');
            }
        });
            },
                        sub:true,
                    },
                    xiying:{
                        audio:"guying",
                        trigger:{
                            global:"useCard",
                        },
                        forced:true,
                        filter:function(event,player){
                return player.hasSkill("xiying2");
            },
                        content:function(){
                game.countPlayer(function(current){
            if(current!=player&&current.hasSkill("xiying")&&current.isAlive()){
                player.line(current,'yellow');
                game.log(current,'的<font color=#68DD7F>【袭营】</font>被'+get.translation(player)+'破解了');
                player.removeSkill("xiying2");
                current.addTempSkill('DIY_guying_drlt_jieying');
            }
        });
            },
                        sub:true,
                    },
                },
            },
            "DIY_guying_drlt_jieying":{
                init:function(player,skill){
        player.addSkillBlocker(skill);
    },
                onremove:function(player,skill){
        player.removeSkillBlocker(skill);
    },
                charlotte:true,
                skillBlocker:function(skill,player){
                return skill!='DIY_guying_drlt_jieying';
    },
                mark:true,
                intro:{
                    content:function(storage,player,skill){
            var list=player.getSkills(null,false,false).filter(function(i){
                return lib.skill.DIY_guying_drlt_jieying.skillBlocker(i,player);
            });
            if(list.length) return '失效技能：'+get.translation(list);
            return '无失效技能';
        },
                },
            },
            "DIY_buqu":{
                trigger:{
                    player:"changeHp",
                },
                marktext:"创",
                intro:{
                    content:"已有#枚“创”",
                },
                mod:{
                    maxHandcard:function(player,num){
            if(player.countMark('DIY_buqu')>0) return player.countMark('DIY_buqu');
        },
                },
                audio:"buqu",
                forced:true,
                filter:function(event,player){
        return player.hp<=0&&player.countMark('DIY_buqu')<13;
    },
                content:function(){
    player.addMark('DIY_buqu',1,false);
    player.recover(1-player.hp);
    },
                group:"DIY_buqu_draw",
                subSkill:{
                    draw:{
                        audio:"buqu",
                        trigger:{
                            player:"phaseDrawBegin2",
                        },
                        forced:true,
                        filter:function(event,player){
                             return !event.numFixed&&player.countMark('DIY_buqu')>0;
                         },
                        content:function(){
                             trigger.num=player.countMark('DIY_buqu');
                         },
                        sub:true,
                    },
                },
            },
            "DIY_fenji":{
                audio:"fenji",
                trigger:{
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAfter","loseAsyncAfter"],
                },
                group:"DIY_fenji2",
                check:function(event,player){
        return get.attitude(player,event.player)>2;
    },
                filter:function(event){
        if(event.player.countCards('h')<event.player.hp&&event.player.isAlive()) return true;
        return false;
    },
                content:function(){
        "step 0"
        player.loseHp();
        "step 1"
        player.line(trigger.player,'green');
        trigger.player.draw(2);
    },
            },
            "DIY_fenji2":{
                audio:"fenji",
                trigger:{
                    global:"damageBegin4",
                },
                check:function(event,player){
        return get.attitude(player,event.player)>3;
    },
                filter:function(event,player){
        return event.player!=player&&event.num>=event.player.hp;
    },
                content:function(){
        player.loseHp();
        trigger.cancel();
    },
            },
            "DIY_gongjian":{
                audio:"gongjian",
                trigger:{
                    global:"useCardToTarget",
                },
                usable:1,
                logTarget:"target",
                filter:function(event,player){
        return event.card.name=='sha'&&event.target!=player&&event.target&&event.target.countMark('DIY_gongjian_mark')>0;
    },
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                content:function(){
        'step 0'
        if(trigger.target.countMark('DIY_gongjian_mark')==1) trigger.target.addMark('DIY_gongjian_mark',1,false);
        player.discardPlayerCard(trigger.target,true,'he',2);
        'step 1'
        if(result.bool){
            var cards=result.cards.filter(function(card){
                return get.name(card,card.original=='h'?trigger.target:false)=='sha';
            });
            if(cards.length) player.gain(cards,'gain2','log');
        }
        if(trigger.target.countCards('h')==0&&_status.currentPhase.hasSkill('xinfenyue')){
            player.say(["义真,你我合势而击之；区区贼寇岂能不溃！"].randomGet());
            game.log('<font color=#96CAFF>公伟</font>、<font color=#96CAFF>义真</font>并以上将之略，受脤仓卒之时。及其功成师克，威声满天下。');
            card=game.createCard2('du','spade',1);
            trigger.target.gain(card,'gain2');
        }
        if(_status.currentPhase.hasSkill('fenyue')){
            player.say(["义真,你我合势而击之；区区贼寇岂能不溃！"].randomGet());
            game.log('<font color=#96CAFF>公伟</font>、<font color=#96CAFF>义真</font>并以上将之略，受脤仓卒之时。及其功成师克，威声满天下。');
            card=game.createCard2('du','spade',1);
            trigger.target.gain(card,'gain2');
        }
    },
                group:"DIY_gongjian_count",
                subSkill:{
                    count:{
                        trigger:{
                            player:"useCardToTargeted",
                        },
                        logTarget:"target",
                        forced:true,
                        charlotte:true,
                        filter:function(event,player){
                return event.card.name=='sha'&&event.target!=player&&event.target&&event.target.countMark('DIY_gongjian_mark')==0;
            },
                        content:function(){
                trigger.target.addMark('DIY_gongjian_mark',1,false);
            },
                        sub:true,
                    },
                },
            },
            "DIY_kuimang":{
                audio:"kuimang",
                trigger:{
                    global:"damage",
                },
                forced:true,
                filter:function(event,player){
        return event.player!=player&&event.player.countMark('DIY_gongjian_mark')==2;
    },
                content:function(){
        if(_status.currentPhase==player) player.draw(1);
    },
            },
            "DIY_gongjian_mark":{
                marktext:"坚",
                intro:{
                    content:function(storage,player){
                        var num=player.countMark("DIY_gongjian_mark");
                        var str='暂无任何效果';
                        if(num>=1){
                            str='<li>已成为过【杀】的目标';
                        }
                        if(num>=2){
                            str+='<br><li>已成为过〖攻坚〗的目标';
                        }
                        return str;
                    },
                },
            },
            "DIY_biantian":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseBegin",
                },
                forced:true,
                charlotte:true,
                content:function(){
        "step 0"
        player.judge(function(card){
            return get.color(card)!='black'?1:-1;
        }).judge2=function(result){
            return result.bool;
        };
        "step 1"
        if(result.bool){
            game.countPlayer(function(current){
            if(current.isAlive()){
                player.line(current,'green');
                game.playTLAoAudio('kuangfeng1');
                game.playTLAoAudio('kuangfeng2');
                current.addTempSkill("kuangfeng2");
            }
            });
        }
        else{
            game.countPlayer(function(current){
            if(current.isAlive()){
                player.line(current,'green');
                game.playTLAoAudio('dawu1');
                current.addTempSkill("dawu2")
            }
            });
        }
    },
                ai:{
                    expose:0.3,
                },
            },
            "DIY_zhuiji":{
                mod:{
                    globalFrom:function(from,to){
                        var history=from.getAllHistory('useCard',function(evtx){
                            return evtx.card.name=='sha'
                        });
                        if(history.length>0){
                            var targets=history[history.length-1].targets;
                            if(targets.contains(to)){
                                return -Infinity;
                            }
                        }
                    },
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard",
                },
                forced:true,
                charlotte:true,
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        var history=player.getAllHistory('useCard',function(evtx){
                return evtx.card.name=='sha'
        });
        if(history.length<2) return false;
        var targets=history[history.length-2].targets;
        return game.hasPlayer(function(current){
            return !event.targets.contains(current)&&targets.contains(current);
        });
    },
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt('DIY_zhuiji'),'为'+get.translation(trigger.card)+'增加一个目标',function(card,player,target){
            var history=player.getAllHistory('useCard',function(evtx){
                return evtx.card.name=='sha'
            });
            if(history.length<2) return false;
            var targets=history[history.length-2].targets;
            return !_status.event.sourcex.contains(target)&&targets.contains(target);
        }).set('sourcex',trigger.targets).set('ai',function(target){
            var player=_status.event.player;
            return get.effect(target,_status.event.card,player,player);
        }).set('card',trigger.card).setHiddenSkill(event.name);
        'step 1'
        if(result.bool){
            if(!event.isMine()&&!event.isOnline()) game.delayx();
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 2'
        player.logSkill('DIY_zhuiji',event.target);
        trigger.targets.push(event.target);
    },
            },
            "DIY_shichou":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardAfter",
                },
                usable:1,
                mod:{
                    cardUsable:function(card,player,num){
                        if(card.name=='sha') return num+1;
                    },
                    targetInRange:function(card,player){
                        if(card.name=='sha'&&player.countUsed('sha',true)==0) return true;
                    },
                },
                forced:true,
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        return !player.getHistory('sourceDamage',function(evt){
            return evt.card==event.card;
        }).length&&event.cards.filterInD().length>0;
    },
                content:function(){
        player.gain(trigger.cards.filterInD(),'gain2');
    },
            },
            "DIY_tieqi":{
                audio:"ext:天牢令/image/audio:4",
                enable:"phaseUse",
                position:"he",
                filterTarget:function(card,player,target){
        return target!=player;
    },
                filter:function(event,player){
        return get.skillCount('DIY_tieqi',player)<game.countGroup();
    },
                content:function(){
        'step 0'
        target.addTempSkill('fengyin');
        'step 1'
        if(player.inRange(target)){
            player.useCard({name:'sha'},target,false);
        }
        else{
            player.discardPlayerCard(target,1,'he',true);
        }
    },
                group:"DIY_tieqi_sha",
                subSkill:{
                    sha:{
                        shaRelated:true,
                        audio:"DIY_tieqi",
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        check:function(event,player){
                            return get.attitude(player,event.target)<=0;
                        },
                        filter:function(event,player){
                            return event.card.name=='sha'&&event.target.countCards('he')>1;
                        },
                        logTarget:"target",
                        content:function(){
                            'step 0'
                            player.choosePlayerCard(get.prompt('DIY_tieqi',trigger.target),'he',trigger.target,2,true);
                            'step 1'
                            if(result.bool&&result.cards.length==2&&get.color(result.cards[0],result.cards[0].original=='h'?trigger.target:false)!=get.color(result.cards[1],result.cards[1].original=='h'?trigger.target:false)){
                                player.showCards(result.cards);
                                trigger.getParent().directHit.add(trigger.target);
                            }
                            else{
                                player.showCards(result.cards);
                                player.gain(result.cards,'gain2','log');
                            }
                        },
                        sub:true,
                    },
                },
                check:function(card){
        return 6-get.value(card);
    },
                filterCard:true,
                ai:{
                    order:4,
                    result:{
                        return:-1,
                    },
                },
            },
            "DIY_machaocaidan":{
                trigger:{
                    global:"gameDrawAfter",
                },
                filter:function(event,player){
        if(game.hasPlayer(function(current){
             return current.name1=='caocao';
        })) return true;
        if(game.hasPlayer(function(current){
             return current.name1=='re_caocao';
        })) return true;
        if(game.hasPlayer(function(current){
             return current.name1=='shen_caocao';
        })) return true;
        return false;
    },
                forced:true,
                charlotte:true,
                content:function(){
    player.say(["曹贼！恶贼！奸贼！逆贼！<br>曹贼！你也有脸提朝廷二字吗！<br>你欺君罔上 杀我父兄<br>我誓当生擒汝 食汝肉 寝汝皮"].randomGet());
    var card=get.cardPile(function(card){
        return card.name=='sha';
    });
    if(card) player.gain(card,'gain2');
    player.gainMaxHp();
    player.recover();
        game.countPlayer(function(current){
            if(current!=player&&current.name1=='shen_caocao'){
                player.line(current,'yellow');
                player.useCard({name:'sha',isCard:true},current,false,'noai');
            }
        });
        game.countPlayer(function(current){
            if(current!=player&&current.name1=='re_caocao'){
                player.line(current,'yellow');
                player.useCard({name:'sha',isCard:true},current,false,'noai');
            }
        });
        game.countPlayer(function(current){
            if(current!=player&&current.name1=='caocao'){
                player.line(current,'yellow');
                player.useCard({name:'sha',isCard:true},current,false,'noai');
            }
        });
    ui.backgroundMusic.src=lib.assetURL+'extension/天牢令/840229455.mp3'
    },
            },
            "DIY_kunfen":{
                audio:"kunfen",
                trigger:{
                    global:"phaseJieshuBegin",
                },
                direct:true,
                content:function(){
        player.logSkill('DIY_kunfen');
        player.loseHp();
        player.draw(2);
    },
                ai:{
                    threaten:1.5,
                },
            },
            "DIY_fengliang":{
                skillAnimation:true,
                animationColor:"thunder",
                unique:true,
                juexingji:true,
                audio:"fengliang",
                derivation:["DIY_tiaoxin","DIY_zhiji","DIY_guanxing"],
                trigger:{
                    player:"dying",
                },
                forced:true,
                charlotte:true,
                content:function(){
        "step 0"
        player.gainMaxHp();
        "step 1"
        player.recover(player.maxHp-player.hp);
        "step 2"
        player.addSkill('DIY_tiaoxin');
        player.addSkill('DIY_zhiji');
        player.changeGroup("shu");
        player.node.avatar.setBackgroundImage('extension/天牢令/JX_jiangwei.jpg');
        player.removeSkill('DIY_kunfen');
        player.awakenSkill('DIY_fengliang');
        
    },
            },
            "DIY_tiaoxin":{
                audio:"tiaoxin",
                audioname:["sp_jiangwei","xiahouba","re_jiangwei","gz_jiangwei","ol_jiangwei"],
                enable:"phaseUse",
                usable:2,
                filter:function(event,player){
        if(player.getStat('skill').oltiaoxin) return !player.hasSkill('oltiaoxin2');
        return true;
    },
                filterTarget:function(card,player,target){
        return target!=player&&target.inRange(player)&&target.countCards('he')>0;
    },
                content:function(){
        "step 0"
        target.chooseToUse(function(card,player,event){
            if(get.name(card)!='sha') return false;
            return lib.filter.filterCard.apply(this,arguments);
        },'挑衅：对'+get.translation(player)+'使用一张杀，或令其弃置你的一张牌').set('targetRequired',true).set('complexSelect',true).set('filterTarget',function(card,player,target){
            if(target!=_status.event.sourcex&&!ui.selected.targets.contains(_status.event.sourcex)) return false;
            return lib.filter.filterTarget.apply(this,arguments);
        }).set('sourcex',player);
        "step 1"
        if(result.bool&&player.getHistory('damage',function(evt){
            return evt.getParent().type=='card'&&evt.getParent(4)==event;
        }).length>0) player.addTempSkill('oltiaoxin2','phaseUseEnd');
        else if(target.countDiscardableCards(player,'he')>0) player.discardPlayerCard(target,'he',true).boolline=true;
    },
                ai:{
                    order:4,
                    expose:0.2,
                    result:{
                        target:-1,
                        player:function(player,target){
                if(target.countCards('h')==0) return 0;
                if(target.countCards('h')==1) return -0.1;
                if(player.hp<=2) return -2;
                if(player.countCards('h','shan')==0) return -1;
                return -0.5;
            },
                    },
                    threaten:1.1,
                },
                group:"DIY_tiaoxin_2",
                subSkill:{
                    "2":{
                        audio:"tiaoxin",
                        trigger:{
                            global:"phaseEnd",
                        },
                        filter:function(event,player){
        if(event.player==player||!event.player.isAlive()) return false;
        var history=event.player.getHistory('useCard');
        for(var i=0;i<history.length;i++){
            if(history[i].card.name=='sha'&&history[i].isPhaseUsing()) return false;
        }
        return true;
    },
                        content:function(){
        "step 0"
        trigger.player.chooseToUse(function(card,player,event){
            if(get.name(card)!='sha') return false;
            return lib.filter.filterCard.apply(this,arguments);
        },'挑衅：对'+get.translation(player)+'使用一张杀，或令其弃置你的一张牌').set('targetRequired',true).set('complexSelect',true).set('filterTarget',function(card,player,target){
            if(target!=_status.event.sourcex&&!ui.selected.targets.contains(_status.event.sourcex)) return false;
            return lib.filter.filterTarget.apply(this,arguments);
        }).set('sourcex',player);
        "step 1"
        if(result.bool&&player.getHistory('damage',function(evt){
            return evt.getParent().type=='card'&&evt.getParent(4)==event;
        }).length>0) player.addTempSkill('oltiaoxin2','phaseUseEnd');
        else if(trigger.player.countDiscardableCards(player,'he')>0) player.discardPlayerCard(trigger.player,'he',true).boolline=true;
    },
                        sub:true,
                    },
                },
            },
            "DIY_zhiji":{
                skillAnimation:true,
                animationColor:"fire",
                audio:"zhiji",
                unique:true,
                juexingji:true,
                derivation:"DIY_guanxing",
                trigger:{
                    global:"phaseZhunbeiBegin",
                },
                forced:true,
                filter:function(event,player){
        if(player.storage.DIY_zhiji) return false;
        return player.countCards('h')==0||player.hp<=1;
    },
                content:function(){
        "step 0"
        player.gainMaxHp();
        player.awakenSkill('DIY_zhiji');
        "step 1"
        player.chooseDrawRecover(2,true);
        player.storage.DIY_zhiji=true;
        if(player.hp>player.maxHp) player.hp=player.maxHp;
        player.update();
        player.addSkill('DIY_guanxing');
        player.node.avatar.setBackgroundImage('extension/天牢令/JX_jiangwei2.jpg');
    },
            },
            "DIY_guanxing":{
                trigger:{
                    global:["drawBegin","judgeBegin"],
                },
                audio:"ext:天牢令/image/audio:4",
                direct:true,
                filter:function(){
        return ui.cardPile.childNodes.length>0;
    },
                content:function(){
        'step 0'
        player.logSkill("DIY_guanxing");
        player.chooseButton(['观星：请选择要置于牌堆'+(trigger.bottom?'底':'顶')+'的牌（先选择的在上）',Array.from(ui.cardPile.childNodes)],[1,trigger.num||1]);
        'step 1'
        if(result.bool){
            while(result.links.length){
                if(trigger.bottom){
                    var card=result.links.shift();
                    ui.cardPile.removeChild(card);
                    ui.cardPile.appendChild(card);
                }
                else{
                    var card=result.links.pop();
                    ui.cardPile.removeChild(card);
                    ui.cardPile.insertBefore(card,ui.cardPile.firstChild)
                }
            }
        }
    },
                ai:{
                    isLuckyStar:true,
                },
            },
            "DIY_jiangchi":{
                audio:"new_jiangchi",
                trigger:{
                    player:"damageEnd",
                },
                derivation:["DIY_jiangchi_chaofeng"],
                group:["DIY_jiangchi_push","DIY_jiangchi_push_zhuan"],
                content:function (){
        "step 0"
        if(get.itemtype(trigger.cards)=='cards'&&get.position(trigger.cards[0],true)=='o'){
            player.gain(trigger.cards,"gain2");
        }
        player.draw(4);
        player.turnOver();
        'step 1'
        player.chooseCard('h',true,'弃置一张手牌，若你以此法弃置的是装备牌，则你改为使用之；若不为装备牌，你将此牌置于武将牌上');
        'step 2'
        if(result.bool&&result.cards.length){
            if(get.type(result.cards[0])=='equip'&&!player.isDisabled(get.subtype(result.cards[0]))){
                player.chooseUseTarget(result.cards[0],true,'nopopup');
            }
            else{
                player.addToExpansion(result.cards[0],'give',player).gaintag.add('DIY_jiangchi');
            }
        }
    },
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                onremove:function(player,skill){
        var cards=player.getExpansions(skill);
        if(cards.length) player.loseToDiscardpile(cards);
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function (card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')&&player!=target) return [1,0.6];
            },
                    },
                },
            },
            "DIY_jiangchi_push":{
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function(event,player){
        return event.player!=player&&player.getExpansions('DIY_jiangchi').length>0;
    },
                content:function(){
        'step 0'
        player.viewHandcards(trigger.player);
        'step 1'
        player.chooseButton([get.prompt('DIY_jiangchi',trigger.player),player.getExpansions('DIY_jiangchi')],true).set('ai',function(button){
            var player=_status.event.player;
            var target=_status.event.getTrigger().player;
            if(get.attitude(player,target)>-1) return 0;
            var card=button.link;
            var color=get.color(button.link,false);
            var eff=target.countCards('h',function(card){
                return get.color(card,target)==color&&target.hasValueTarget(card);
            });
            if(!target.countCards('h',function(card){
                return get.color(card,target)==color&&get.name(card,target)=='sha'&&target.hasValueTarget(card);
            })) eff+=1.5;
            if(!target.countCards('h',function(card){
                return get.color(card,target)==color&&get.type2(card,target)=='trick'&&target.hasValueTarget(card);
            })) eff+=1.5;
            return eff-1;
        });
        'step 2'
        if(result.bool){
            if(!trigger.DIY_jiangchi) trigger.DIY_jiangchi=[];
            trigger.DIY_jiangchi.push(player);
            var card=result.links[0];
            var target=trigger.player;
            player.logSkill('DIY_jiangchi',target);
            player.loseToDiscardpile(card);
            var color=get.color(card,false);
            if(!target.storage.DIY_jiangchi2) target.storage.DIY_jiangchi2=[];
            target.storage.DIY_jiangchi2.add(color);
            target.addTempSkill('DIY_jiangchi2','phaseUseAfter');
            target.markSkill('DIY_jiangchi2');
            player.addTempSkill('DIY_jiangchi3','phaseUseAfter');
        }
    },
                subSkill:{
                    zhuan:{
                        trigger:{
                            source:"damageAfter",
                        },
                        forced:true,
                        popup:false,
                        filter:function(event,player){
               return event.parent.parent.parent.name=='DIY_jiangchi3'&&player!=event.player&&!event.player.storage._disableJudge&&event.player.countCards('he')&&!event.player.countCards('j');
            },
                        content:function(){
                'step 0'
        player.choosePlayerCard(trigger.player,'he').set('ai',function(card){
            if(get.attitude(_status.event.player,_status.event.target)>=0) return 0;
            return get.buttonValue(card);
        });
        'step 1'
        if(result.bool){
            player.logSkill('DIY_jiangchi');
            var card=result.cards[0];
            trigger.player.$throw(card);
            game.delayx();
            if(get.type(card,false)=='delay') trigger.player.addJudge(card);
            else trigger.player.addJudge({name:get.color(card,false)=='red'?'lebu':'bingliang'},result.cards);
        }
            },
                        sub:true,
                    },
                },
            },
            "DIY_jiangchi2":{
                onremove:true,
                mod:{
                    "cardEnabled2":function(card,player){
            if(player.getStorage('DIY_jiangchi2').contains(get.color(card,player))) return false;
        },
                },
                intro:{
                    content:"不能使用$的牌",
                },
                marktext:"将驰",
            },
            "DIY_jiangchi3":{
                audio:"rejiangchi",
                trigger:{
                    global:"phaseUseEnd",
                },
                forced:true,
                filter:function(event,player){
        if(!event.DIY_jiangchi||!event.DIY_jiangchi.contains(player)) return false;
        var sha=(player.canUse('sha',event.player,false)),trick=true;
        event.player.getHistory('useCard',function(evt){
            if(evt.getParent('phaseUse')!=event) return false;
            if(sha&&evt.card.name=='sha') sha=false;
            if(trick&&get.type2(evt.card,false)=='trick') trick=false;
        });
        return sha||trick;
    },
                content:function(){
        var sha=(player.canUse('sha',trigger.player,false)),trick=true;
        trigger.player.getHistory('useCard',function(evt){
            if(evt.getParent('phaseUse')!=trigger) return false;
            if(sha&&evt.card.name=='sha') sha=false;
            if(trick&&get.type2(evt.card,false)=='trick') trick=false;
        });
        if(sha) player.useCard({name:'sha',isCard:true},trigger.player);
        if(trick) player.draw(2);
        if(sha&&trick) player.recover();
    },
            },
            "DIY_jiangchi_chaofeng":{
            },
            "DIY_luanji":{
                audio:"reluanji",
                enable:"phaseUse",
                viewAs:{
                    name:"wanjian",
                },
                filterCard:function(card,player){
        if(!player.storage.DIY_luanji) return true;
        return !player.storage.DIY_luanji.contains(get.suit(card));
    },
                position:"hs",
                selectCard:2,
                check:function(card){
        var player=_status.event.player;
        var targets=game.filterPlayer(function(current){
            return player.canUse('wanjian',current);
        });
        var num=0;
        for(var i=0;i<targets.length;i++){
            var eff=get.sgn(get.effect(targets[i],{name:'wanjian'},player,player));
            if(targets[i].hp==1){
                eff*=1.5;
            }
            num+=eff;
        }
        if(!player.needsToDiscard(-1)){
            if(targets.length>=7){
                if(num<2) return 0;
            }
            else if(targets.length>=5){
                if(num<1.5) return 0;
            }
        }
        return 6-get.value(card);
    },
                ai:{
                    basic:{
                        order:2,
                        useful:1,
                        value:5,
                    },
                    wuxie:function(target,card,player,viewer){
            if(get.attitude(viewer,target)>0&&target.countCards('h','shan')){
                if(!target.countCards('h')||target.hp==1||Math.random()<0.7) return 0;
            }
        },
                    result:{
                        "target_use":function(player,target){
                if(player.hasUnknown(2)&&get.mode()!='guozhan') return 0;
                var nh=target.countCards('h');
                if(get.mode()=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                        target:function(player,target){
                var nh=target.countCards('h');
                if(get.mode()=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:1,
                        multitarget:1,
                        multineg:1,
                    },
                },
                group:["DIY_luanji_count","DIY_luanji_reset","DIY_luanji_respond","DIY_luanji_draw"],
                subSkill:{
                    reset:{
                        trigger:{
                            player:"phaseAfter",
                        },
                        silent:true,
                        content:function(){
                delete player.storage.DIY_luanji;
                delete player.storage.DIY_luanji2;
            },
                        sub:true,
                        forced:true,
                        popup:false,
                        "audioname2":{
                            "key_shiki":"shiki_omusubi",
                        },
                    },
                    count:{
                        trigger:{
                            player:"useCard",
                        },
                        silent:true,
                        content:function(){
                "step 0"
                if(trigger.cards.name!='wanjian'){
                    player.storage.DIY_luanji2=trigger.card;
                }
                "step 1"
                if(trigger.cards.name=='wanjian'){
                    player.addTempSkill("DIY_luanji_invalid");
                }
                "step 2"
                if(trigger.skill=='DIY_luanji'){
                    player.addTempSkill("DIY_luanji_invalid");
                    if(!player.storage.DIY_luanji){
                        player.storage.DIY_luanji=[];
                    }
                    for(var i=0;i<trigger.cards.length;i++){
                        player.storage.DIY_luanji.add(get.suit(trigger.cards[i]));
                    }
                }
            },
                        sub:true,
                        forced:true,
                        popup:false,
                        "audioname2":{
                            "key_shiki":"shiki_omusubi",
                        },
                    },
                    respond:{
                        trigger:{
                            global:"respond",
                        },
                        silent:true,
                        filter:function(event){
                return event.getParent(2).skill=='DIY_luanji';
            },
                        content:function(){
                trigger.player.draw();
            },
                        sub:true,
                        forced:true,
                        popup:false,
                        "audioname2":{
                            "key_shiki":"shiki_omusubi",
                        },
                    },
                    invalid:{
                        mark:true,
                        marktext:"乱击",
                        intro:{
                            content:"本回合〖乱击〗失效",
                        },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    draw:{
                        audio:"reluanji",
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        silent:true,
                        popup:false,
                        filter:function(event,player){
                return player==_status.currentPhase&&player.storage.DIY_luanji2&&event.card==player.storage.DIY_luanji2&&!player.hasSkill("DIY_luanji_invalid");
            },
                        content:function(){
                player.logSkill("DIY_luanji");
                player.draw(trigger.targets.length);
                delete player.storage.DIY_luanji2;
            },
                        sub:true,
                        "audioname2":{
                            "key_shiki":"shiki_omusubi",
                        },
                    },
                },
                "audioname2":{
                    "key_shiki":"shiki_omusubi",
                },
            },
            "DIY_xueyi":{
                trigger:{
                    player:"phaseDiscardBefore",
                },
                audio:"xueyi",
                forced:true,
                firstDo:true,
                filter:function(event,player){
        return player.hasZhuSkill('DIY_xueyi')&&game.hasPlayer(function(current){
            return current!=player;
        })&&player.countCards('h')>player.hp;
    },
                content:function(){},
                mod:{
                    maxHandcard:function(player,num){
            if(player.hasZhuSkill('DIY_xueyi')){
                return num+game.countPlayer(function(current){
                    if(player!=current) return 2;
                });
            }
            return num;
        },
                },
                zhuSkill:true,
                "audioname2":{
                    "key_shiki":"shiki_omusubi",
                },
            },
            "DIY_qiangxi":{
                subSkill:{
                    off:{
                        sub:true,
                    },
                },
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filterCard:function (card){
        return get.subtype(card)=='equip1';
    },
                selectCard:function (){
        return [0,1];
    },
                filterTarget:function(card,player,target){
        if(player==target) return false;
        return true;
    },
                filter:function(event,player){
        return !player.hasSkill('DIY_qiangxi2');
    },
                content:function (){
        "step 0"
        if(cards.length==0){
            player.loseHp();
        }
        "step 1"
        player.addTempSkill('DIY_qiangxi3');
        target.damage('nocard');
    },
                check:function (card){
        return 10-get.value(card);
    },
                position:"he",
                ai:{
                    order:8.5,
                    result:{
                        target:function (player,target){
                if(!ui.selected.cards.length){
                    if(player.hp<2) return 0;
                    if(target.hp>=player.hp) return 0;
                }
                return get.damageEffect(target,player);
            },
                    },
                },
                threaten:1.5,
            },
            "DIY_qiangxi3":{
                trigger:{
                    global:"dyingAfter",
                },
                forced:true,
                popup:false,
                charlotte:true,
                filter:function(event,player){
        return event.player.isAlive()&&event.reason&&event.reason.getParent().name=='DIY_qiangxi';
    },
                content:function(){
        player.addTempSkill('DIY_qiangxi2');
    },
            },
            "DIY_qiangxi2":{
                mark:true,
                marktext:"强袭",
                intro:{
                    content:"本回合〖强袭〗失效",
                },
            },
            "DIY_zhanhuo":{
                trigger:{
                    source:"damageEnd",
                },
                audio:"nzry_dinghuo",
                direct:true,
                filter:function(event,player){
        return event.nature='fire';
    },
                filterTarget:function(card,player,target){
        return get.distance(event.player,target)<=1;
    },
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt2('DIY_zhanhuo'),function(card,player,target){
            return get.distance(trigger.player,target)==1;
        }).set('ai',function(target){
            return -get.attitude(_status.event.player,target);
        });
        'step 1'
        if(result.bool){
            player.logSkill('DIY_zhanhuo',result.targets);
            var target=result.targets[0];
            event.target=target;
            player.judge(function(card){
                if(get.color(card)=='red') return -1;
                return 0;
            });
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.color){
            if(result.color=='red'){
                event.target.damage(1,'fire');
            }
        }
    },
            },
            "DIY_cuike":{
                trigger:{
                    source:"damageBefore",
                },
                forced:true,
                audio:"nzry_cuike",
                filter:function(event){
                    return event.nature!='fire';
                },
                check:function(){return false;},
                content:function(){
        trigger.nature='fire';
    },
                ai:{
                    jueqing:true,
                },
            },
            "DIY_junlue":{
                audio:"nzry_junlve",
                trigger:{
                    target:"useCardToTarget",
                },
                frequent:true,
                filter:function(event,player){
        return get.tag(event.card,'damage')&&event.player!=player&&event.targets.length==1;
    },
                logTarget:"player",
                content:function(){
        'step 0'
        player.line(trigger.player,'green');
        var list1=["诱敌出战","连营破敌"];
        trigger.player.chooseControl(list1).set("displayIndex", false).set('choiceList',[
                '诱敌出战：防止'+get.translation(player)+'对你造成伤害',
                '连营破敌：防止'+get.translation(player)+'无效'+get.translation(trigger.cards),
            ]).set('ai',function(){
            var num=[0,1].randomGet();
            if(num==0){
                return '诱敌出战';
            }
            else{
                return '连营破敌';
            }
        }).set('prompt','请选择一种策略');
        'step 1'
        if(result.control=='诱敌出战'){
            trigger.player.say(["损身熬心，誓报此仇！","怒伤心肝，也阻止不了这复仇之火！"].randomGet());
            game.delay();
            event.goto(2);
        }
        else{
            trigger.player.say(["怒伤心肝，也阻止不了这复仇之火！","损身熬心，誓报此仇！"].randomGet());
            game.delay();
            event.goto(4);
        }
        'step 2'
        var list2=["立即出战","坚守不战"];
            player.chooseControl(list2).set("displayIndex", false).set('choiceList',[
                '立即出战：对'+get.translation(trigger.player)+'造成1点火焰伤害',
                '坚守不战：令'+get.translation(trigger.cards)+'对你无效',
            ]).set('ai',function(){
                return '坚守不战';
            }).set('prompt','请选择一种策略');
        'step 3'
        if(result.control=='立即出战'){
            trigger.player.say(["诱敌出战"].randomGet());
            player.say(["立即出战"].randomGet());
            game.delay();
            game.log(player,'谋弈失败');
            player.popup('谋弈失败');
            event.goto(6);
        }
        else{
            trigger.player.say(["诱敌出战"].randomGet());
            player.say(["坚守不战"].randomGet());
            game.delay();
            trigger.targets.remove(player);
            game.log(player,'谋弈成功');
            player.popup('谋弈成功');
            event.goto(6);
        }
        event.goto(6);
        'step 4'
        var list2=["立即出战","坚守不战"];
            player.chooseControl(list2).set("displayIndex", false).set('choiceList',[
                '立即出战：对'+get.translation(trigger.player)+'造成1点火焰伤害',
                '坚守不战：令'+get.translation(trigger.cards)+'对你无效',
            ]).set('ai',function(){
                return '立即出战';
            }).set('prompt','军略：请选择一种策略');
        'step 5'
        if(result.control=='立即出战'){
            trigger.player.say(["连营破敌"].randomGet());
            player.say(["立即出战"].randomGet());
            game.delay();
            trigger.player.damage('fire');
            game.log(player,'谋弈成功');
            player.popup('谋弈成功');
            event.goto(6);
        }
        else{
            trigger.player.say(["连营破敌"].randomGet());
            player.say(["坚守不战"].randomGet());
            game.delay();
            game.log(player,'谋弈失败');
            player.popup('谋弈失败');
            event.goto(6);
        }
        'step 6'
        game.delay();
    },
            },
            "DIY_qianxi":{
                audio:"oldqianxi",
                trigger:{
                    source:"damageBegin2",
                },
                frequent:true,
                group:"DIY_reqianxi",
                check:function(event,player){
        var att=get.attitude(player,event.player);
        if(event.player.hp==event.player.maxHp) return att<0;
        if(event.player.hp==event.player.maxHp-1&&
            (event.player.maxHp<=3||event.player.hasSkillTag('maixie'))) return att<0;
        return att>0;
    },
                filter:function(event,player){
        return true;
    },
                logTarget:"player",
                content:function(){
        trigger.cancel();
        trigger.player.loseMaxHp(true);
    },
            },
            "DIY_reqianxi":{
                audio:"qianxi",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                preHidden:true,
                content:function(){
        "step 0"
        player.draw();
        player.chooseToDiscard('he',true);
        "step 1"
        if(!result.bool){
            event.finish();
            return;
        }
        event.color=get.color(result.cards[0],result.cards[0].original=='h'?player:false);
        player.chooseTarget(function(card,player,target){
            return player!=target;
        },true).set('ai',function(target){
            return -get.attitude(_status.event.player,target);
        });
        "step 2"
        if(result.bool&&result.targets.length){
            result.targets[0].loseMaxHp(true);
            result.targets[0].storage.DIY_reqianxi2=event.color;
            result.targets[0].addTempSkill('DIY_reqianxi2');
            player.line(result.targets,'green');
            game.addVideo('storage',result.targets[0],['DIY_reqianxi2',event.color]);
        }
    },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(!arg.target.hasSkill('DIY_reqianxi2')) return false;
            if(arg.card.name=='sha') return arg.target.storage.qianxi2=='red'&&(!arg.target.getEquip('bagua')||player.hasSkillTag('unequip',false,{
                name:arg.card?arg.card.name:null,
                target:arg.target,
                card:arg.card
            })||player.hasSkillTag('unequip_ai',false,{
                name:arg.card?arg.card.name:null,
                target:arg.target,
                card:arg.card
            }));
            return arg.target.storage.DIY_reqianxi2=='black';
        },
                },
            },
            "DIY_reqianxi2":{
                forced:true,
                mark:true,
                audio:"ext:天牢令/image/audio:false",
                content:function(){
        player.removeSkill('reqianxi2');
        delete player.storage.reqianxi2;
    },
                mod:{
                    "cardEnabled2":function(card,player){
            if(get.color(card)==player.storage.reqianxi2&&get.position(card)=='h') return false;
        },
                },
                intro:{
                    content:function(color){
            return '不能使用或打出'+get.translation(color)+'的手牌';
        },
                },
            },
            "DIY_guijin":{
                audio:"zhaoran",
                superCharlotte:true,
                charlotte:true,
                fixed:true,
                unique:true,
                noAdd:true,
                noRemove:true,
                noDisabled:true,
                silent:true,
                forced:true,
                skillAnimation:true,
                animationColor:"thunder",
                init:function(event,player){
                    if(get.mode()!='boss'&&player!=game.boss) game.over(true);
                },
                content:function(){
                },
                popup:false,
            },
            "DIY_guijin_audio":{
                audio:"zhaoran",
            },
            "DIY_jizhi":{
                audio:"rejizhi",
                trigger:{
                    global:"useCard",
                },
                frequent:true,
                preHidden:true,
                filter:function(event){
        return (get.type(event.card)=='trick'&&event.card.isCard);
    },
                content:function(){
        player.draw();
    },
                ai:{
                    threaten:1.4,
                    noautowuxie:true,
                },
            },
            "DIY_qicai":{
                audio:"reqicai",
                mod:{
                    targetInRange:function(card,player,target,now){
            var type=get.type(card);
            if(type=='trick'||type=='delay') return true;
        },
                },
                trigger:{
                    target:"useCardToBefore",
                },
                usable:1,
                forced:true,
                check:function(event,player){
        return get.effect(event.target,event.card,event.player,player)<0;
    },
                filter:function(event,player){
        return get.type(event.card,'trick')=='trick'&&_status.currentPhase!=player;
    },
                content:function(){
        trigger.cancel();
    },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(get.type(card,'trick')=='trick'&&get.distance(player,target)>1) return 'zeroplayertarget';
            },
                    },
                },
            },
            "DIY_zhendu":{
                audio:"zhendu",
                trigger:{
                    global:"phaseUseBegin",
                },
                derivation:"DIY_zhendu_dushi",
                group:"DIY_zhendu2",
                check:function(event,player){
        return get.damageEffect(event.player,player,player)>0;
    },
                filter:function(event,player){
        return /*(get.mode()!='guozhan'||event.player!=player)&&*/player.countCards('h')>0&&event.player.isAlive()&&event.player!=player;
    },
                direct:true,
                preHidden:true,
                content:function(){
        "step 0"
        var nono=(Math.abs(get.attitude(player,trigger.player))<3);
        if(player==trigger.player||get.damageEffect(trigger.player,player,player)<=0||!trigger.player.hasUseTarget({name:'jiu'},null,true)){
            nono=true
        }
        else if(trigger.player.hp>2){
            nono=true;
        }
        else if(trigger.player.hp>1&&player.countCards('h')<3&&(trigger.player.canUse('sha',player)&&!player.countCards('h','shan')&&trigger.player.countCards('h')>=3)){
            nono=true;
        }
        var next=player.chooseToDiscard('he',get.prompt2("鸩毒:是否弃置一张牌令其使用一张酒，并受到一点伤害",trigger.player));
        next.set('ai',function(card){
            if(_status.event.nono) return -1;
            return 7-get.useful(card);
        });
        next.set('logSkill',['zhendu',trigger.player]);
        next.set('nono',nono);
        next.setHiddenSkill('zhendu');
        "step 1"
        if(result.bool){
            trigger.player.chooseUseTarget({name:'jiu'},true,'noTargetDelay','nodelayx');
            trigger.player.damage();
        }
    },
                ai:{
                    threaten:2,
                    expose:0.3,
                },
            },
            "DIY_qiluan":{
                audio:"qiluan2",
                preHidden:true,
                trigger:{
                    global:"dieAfter",
                },
                frequent:true,
                group:"DIY_qiluan_damage",
                content:function(){
            player.draw(3);
    },
                subSkill:{
                    damage:{
                        trigger:{
                            global:"damageBegin4",
                        },
                        preHidden:true,
                        audio:"qiluan2",
                        direct:true,
                        filter:function(event,player,name){
        return event.num>0&&event.player!=player&&_status.currentPhase!=player&&player.countCards('he')>0;
    },
                        content:function(){
                            'step 0'
                            num=get.cnNumber(2*trigger.num,true);
                            var nono=(Math.abs(get.attitude(player,trigger.player))<3);
        var next=player.chooseToDiscard('he','戚乱：是否弃置一张牌令即将对'+get.translation(trigger.player)+'的伤害翻倍至'+get.translation(num)+'点');
        next.set('ai',function(card){
            if(_status.event.nono) return -1;
            return 7-get.useful(card);
        });
        next.complexCard=true,
        next.logSkill=['DIY_qiluan',trigger.player];
        'step 1'
        if(result.bool){
            trigger.num=trigger.num*2;
        }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_kuangbi":{
                enable:"phaseUse",
                usable:1,
                audio:"kuangbi",
                filterTarget:function(card,player,target){
        return target!=player&&target.countCards('he')>0;
    },
                content:function(){
        'step 0'
        target.chooseCard('he',3,'匡弼：将3张牌置于'+get.translation(player)+'的武将牌上',true).set('ai',function(card){
            if(get.attitude(_status.event.player,_status.event.getParent().player)>0){
                return 7-get.value(card);
            }
            return -get.value(card);
        });
        'step 1'
        if(result.bool){
            target.$give(result.cards.length,player,false);
            target.lose(result.cards,ui.special,'toStorage');
            if(!player.storage.DIY_kuangbi_draw) player.storage.DIY_kuangbi_draw=[];
            player.storage.DIY_kuangbi_draw.push([result.cards,target]);
            player.addSkill('DIY_kuangbi_draw');
            player.syncStorage('DIY_kuangbi_draw');
            player.updateMarks('DIY_kuangbi_draw');
        }
    },
                ai:{
                    order:1,
                    result:{
                        target:function(player,target){
                if(get.attitude(player,target)>0){
                    return Math.sqrt(target.countCards('he'));
                }
                return 0;
            },
                        player:1,
                    },
                },
                subSkill:{
                    draw:{
                        trigger:{
                            player:"phaseZhunbeiBegin",
                        },
                        forced:true,
                        mark:true,
                        charlotte:true,
                        audio:"kuangbi",
                        intro:{
                            onunmark:function(storage,player){
                    var cards=[];
                    while(storage.length){
                        cards.addArray(storage.shift()[0]);
                    }
                    if(cards.length){
                        game.cardsDiscard(cards);
                        player.$throw(cards,1000);
                        game.log(cards,'被置入了弃牌堆');
                    }
                },
                            markcount:function(content){
                    var cards=[];
                    for(var i=0;i<content.length;i++){
                        cards.addArray(content[i][0]);
                    }
                    return cards.length;
                },
                            mark:function(dialog,content,player){
                    if(content&&content.length){
                        var cards=[];
                        for(var i=0;i<content.length;i++){
                            cards.addArray(content[i][0]);
                        }
                        dialog.addText('共有'+get.cnNumber(cards.length)+'张牌');
                    }
                },
                        },
                        content:function(){
                var storage=player.storage.DIY_kuangbi_draw;
                if(storage.length){
                    var next=storage.shift();
                    player.gain(next[0],'gain2','fromStorage');
                    var target=next[1];
                    if(target&&target.isAlive()){
                        target.draw(next[0].length);
                    }
                    event.redo();
                }
                else player.removeSkill('DIY_kuangbi_draw');
            },
                        sub:true,
                    },
                },
            },
            "DIY_liangyin":{
                audio:"DIY_liangyin",
                group:["DIY_liangyin_1","DIY_liangyin_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:["loseAfter","addToExpansionAfter","cardsGotoSpecialAfter","loseAsyncAfter"],
                        },
                        filter:function(event,player,name){
                if(event.name=='lose'||event.name=='loseAsync') return event.getlx!==false&&event.toStorage==true;
                if(event.name=='cardGotoSpecial') return !event.notrigger;
                return true;
            },
                        direct:true,
                        content:function(){
                "step 0"
                player.chooseTarget('是否发动【良姻】令一名角色摸1-2随机张牌？').ai=function(target){
                    return get.attitude(player,target);
                };
                "step 1"
                if(result.bool){
                    var num=[1,2].randomGet();
                    if(get.isLuckyStar(player)) num=2;
                    player.logSkill('liangyin',result.targets);
                    result.targets[0].draw(num);
                }
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"gainAfter",
                        },
                        filter:function(event,player){
                return event.fromStorage==true||game.hasPlayer2(function(current){
                    var evt=event.getl(current);
                    return evt&&evt.xs&&evt.xs.length>0;
                });
            },
                        direct:true,
                        content:function(){
                "step 0"
                player.chooseTarget('是否发动【良姻】令一名角色弃置1-2随机张牌？',function(card,player,target){
                    return target.countCards('he')>0;
                }).ai=function(target){
                    return -get.attitude(player,target);
                };
                "step 1"
                if(result.bool){
                    var num=[1,2].randomGet();
                    if(get.isLuckyStar(player)) num=2;
                    player.logSkill('liangyin',result.targets);
                    result.targets[0].chooseToDiscard('he',(num),true);
                }
            },
                        sub:true,
                    },
                },
            },
            "DIY_kongsheng":{
                audio:"kongsheng",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                direct:true,
                filter:function(event,player){
        return player.countCards('he')>0;
    },
                content:function(){
        'step 0'
        player.chooseCard(get.prompt('DIY_kongsheng'),'将任意张牌置于武将牌上','he',[1,player.countCards('he')]).set('ai',function(card){
            if(get.position(card)=='e') return 1-get.value(card);
            if(card.name=='shan'||card.name=='du'||!player.hasValueTarget(card)) return 1;
            return 4-get.value(card);
        });
        'step 1'
        if(result.bool){
            player.logSkill('DIY_kongsheng');
            player.addSkill('DIY_kongsheng2');
            player.addToExpansion(result.cards,'log','give',player).gaintag.add('DIY_kongsheng2');
        }
    },
            },
            "DIY_kongsheng2":{
                audio:"kongsheng",
                marktext:"箜",
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                trigger:{
                    player:"phaseJieshuBegin",
                },
                filter:function(event,player){
        return player.getExpansions('DIY_kongsheng2').length>0;
    },
                forced:true,
                charlotte:true,
                content:function(){
        'step 0'
        player.addTempSkill('kongsheng_ai','DIY_kongsheng2After');
        'step 1'
        var cards=player.getExpansions('DIY_kongsheng2').filter(function(i){
            return get.type(i,false)=='equip'&&player.hasUseTarget(i);
        });
        if(cards.length==1){
            event._result={bool:true,links:cards}
        }
        else if(cards.length) player.chooseButton(true,['选择要使用的装备牌',cards]).set('ai',function(button){
            return get.order(button.link);
        });
        else event.goto(3);
        'step 2'
        if(result.bool){
            player.chooseUseTarget(result.links[0],true);
            event.goto(1);
        }
        'step 3'
        var cards=player.getExpansions('DIY_kongsheng2');
        if(cards.length) player.gain(cards,'gain2');
    },
            },
            "DIY_zhendu2":{
                trigger:{
                    global:"dying",
                },
                audio:"zhendu",
                direct:true,
                check:function(event,player){
        return get.attitude(player,event.target)>3;
    },
                filter:function(event,player){
        return event.player.hp<=0&&player!=event.player&&player.countCards('he')>0;
    },
                content:function(){
                    'step 0'
        var nono=(Math.abs(get.attitude(player,trigger.player))<3);
        var next=player.chooseToDiscard('he','鸩毒：是否弃置一张牌令'+get.translation(trigger.player)+'获得“毒逝”直到下轮开始？');
        next.ai=function(card){
            if(nono){
                return 7-get.useful(card);
            }
            return 0;
        };
        next.complexCard=true,
        next.logSkill=['DIY_zhensha',trigger.player];
        'step 1'
        if(result.bool){
        trigger.player.addTempSkill("DIY_zhendu_dushi","roundStart");
        }
    },
                ai:{
                    expose:10,
                    threaten:1.5,
                },
            },
            "DIY_jueyan":{
                mark:true,
                marktext:"决堰",
                intro:{
                    content:function(storage,player){
            name:'决堰';
            var str='<li>暂无任何效果';
            if(player.countDisabled()>0){
                str='<li>当前拥有效果：';
            }
            if(player.isDisabled('equip1')){
                str+='<br>可以多使用三张【杀】';
            }
            if(player.isDisabled('equip2')){
                str+='<br>手牌上限+3';
            }
            if(player.isDisabled('equip3')||player.isDisabled('equip4')){
            str+='<br>使用牌没有距离限制';
            }
            if(player.isDisabled('equip5')){
            str+='<br>拥有技能〖集智〗';
            }
            return str;
        },
                },
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                derivation:["DIY_jueyan5"],
                group:["DIY_jueyan1","DIY_jueyan2","DIY_jueyan3","DIY_jueyan5"],
                filter:function(event,player){
        return player.storage.disableEquip!=undefined&&player.storage.disableEquip.length<5;
    },
                content:function(){
        'step 0'
        player.chooseToDisable(true).set('ai',function(event,player,list){
            if(list.contains('equip2')) return 'equip2';
            if(list.contains('equip1')&&(player.countCards('h',function(card){
                return get.name(card,player)=='sha'&&player.hasUseTarget(card);
            })-player.getCardUsable('sha'))>1) return 'equip1';
            if(list.contains('equip5')&&player.countCards('h',function(card){
                return get.type2(card,player)=='trick'&&player.hasUseTarget(card);
            })>1) return 'equip5';
        });
        'step 1'
        if(result.control=='equip1'){
        };
        if(result.control=='equip2'){
            player.draw(3);
        };
        if(result.control=='equip6'){
        };
        if(result.control=='equip5'){
        };
    },
                ai:{
                    order:13,
                    result:{
                        player:function(player){
                if(!player.isDisabled('equip2')) return 1;
                if(!player.isDisabled('equip1')&&(player.countCards('h',function(card){
                    return get.name(card,player)=='sha'&&player.hasValueTarget(card);
                })-player.getCardUsable('sha'))>1) return 1;
                if(!player.isDisabled('equip5')&&player.countCards('h',function(card){
                    return get.type2(card,player)=='trick'&&player.hasUseTarget(card);
                })>1) return 1;
                return -1;
            },
                    },
                },
            },
            "DIY_qianjie":{
                audio:"ext:天牢令/image/audio:2",
                group:["DIY_qianjie_1","DIY_qianjie_2","DIY_qianjie_3"],
                locked:true,
                mod:{
                    targetEnabled:function(card,player,target,now){
                    if(card.name=='shunshou'||card.name=='zhujinqiyuan'||card.name=='chuqibuyi') return false;
                    },
                },
                ai:{
                    effect:{
                        target:function(card){
                if(card.name=='tiesuo') return 'zeroplayertarget';
            },
                    },
                },
                subSkill:{
                    "1":{
                        audio:'DIY_qianjie',
                        trigger:{
                            player:"linkBegin",
                        },
                        forced:true,
                        filter:function(event,player){
                return !player.isLinked();
            },
                        content:function(){
                trigger.cancel();
            },
                        sub:true,
                    },
                    "2":{
                        mod:{
                            targetEnabled:function(card,player,target){
                    if(get.type(card)=='delay') return false;
                },
                        },
                        sub:true,
                    },
                    "3":{
                        ai:{
                            noCompareTarget:true,
                        },
                        sub:true,
                    },
                },
            },
            "DIY_poshi":{
                audio:"ext:天牢令/image/audio:2",
                skillAnimation:true,
                animationColor:"wood",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                unique:true,
                juexingji:true,
                derivation:["DIY_huairou"],
                init:function(player){
        player.storage.DIY_poshi=false;
    },
                filter:function(event,player){
        return !player.storage.DIY_poshi&&((player.storage.disableEquip!=undefined&&player.storage.disableEquip.length==5)||player.hp==1);
    },
                content:function(){
        "step 0"
        player.storage.DIY_poshi=true;
        player.awakenSkill('DIY_poshi');
        player.addSkill('DIY_huairou');
        player.gainMaxHp();
        player.disableEquip('equip1');
        player.disableEquip('equip2');
        player.disableEquip('equip3');
        player.disableEquip('equip4');
        player.disableEquip('equip5');
        player.disableJudge();
        "step 1"
        var num1=player.maxHp-player.countCards('h');
        if(num1>0) player.draw(num1);
        player.recover(player.maxHp-player.hp);
    },
            },
            "DIY_jueyan1":{
                mod:{
                    cardUsable:function(card,player,num){
            if(player.isDisabled('equip1')&&card.name=='sha') return num+3;
        },
                },
                intro:{
                    name:"决堰 - 武器",
                    content:"可以多使用三张【杀】",
                },
            },
            "DIY_jueyan2":{
                mod:{
                    targetInRange:function(card,player,target,now){
            if(player.isDisabled('equip3')||player.isDisabled('equip4')) return true;
        },
                },
                intro:{
                    name:"决堰 - 坐骑",
                    content:"使用牌没有距离限制",
                },
            },
            "DIY_jueyan3":{
                mod:{
                    maxHandcard:function(player,num){
            if(player.isDisabled('equip2')) return num+3;
        },
                },
                intro:{
                    name:"决堰 - 防具",
                    content:"手牌上限+3",
                },
            },
            "DIY_jueyan5":{
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    player:"useCard",
                },
                frequent:true,
                filter:function(event,player){
        return player.isDisabled('equip5')&&(get.type(event.card)=='trick'&&event.card.isCard);
    },
                content:function(){
        player.draw();
    },
                ai:{
                    threaten:1.4,
                    noautowuxie:true,
                },
            },
            "DIY_huairou":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"damageBegin2",
                },
                direct:true,
                filter:function(event,player){
                    return player.countCards('he',function(card){
                        return get.type(card)=='equip';
                    })>0;
                },
                content:function(){
                    'step 0'
                    player.chooseCard(get.prompt('DIY_huairou'),'重铸一张装备牌并防止此伤害','he',function(card){
                        return get.type(card)=='equip';
                    }).set('ai',function(card){
                        return 6-get.value(card);
                    });
                    'step 1'
                    if(result&&result.cards){
                        player.logSkill('DIY_huairou');
                        trigger.cancel();
                        var card=result.cards[0];
                        player.lose(result.cards,ui.discardPile,'visible');
                        player.$throw(result.cards,1000);
                        game.log(player,'将',result.cards,'置入弃牌堆');
                        player.draw();
                    }
                },
                mod:{
                    ignoredHandcard:function(card,player){
                        if(get.type(card)=='equip'){
                            return true;
                        }
                    },
                    cardDiscardable:function(card,player,name){
                        if(name=='phaseDiscard'&&get.type(card)=='equip'){
                            return false;
                        }
                    },
                },
            },
            "DIY_hanzhan":{
                audio:"hanzhan",
                trigger:{
                    global:"chooseToCompareBegin",
                },
                filter:function(event,player){
        if(player==event.player) return true;
        if(event.targets) return event.targets.contains(player);
        return player==event.target;
    },
                logTarget:function(event,player){
        if(player!=event.player) return event.player;
        return event.targets||event.target;
    },
                "prompt2":function(event,player){
        return '选择你区域内的一张牌作为其的拼点牌进行拼点'
    },
                content:function(){
        "step 0"
        var cards=player.getCards('hej');            
        player.chooseButton(['请选择一张牌作为拼点牌', player.getCards('hej')],1,true).set('ai',function(card){
            return 13-get.number(card);
        });
        "step 1"
        if(result.bool){
            var targets=player==trigger.player?(trigger.targets?trigger.targets.slice(0):[trigger.target]):[trigger.player];
            if(!trigger.fixedResult) trigger.fixedResult={};
            while(targets.length){
				var target=targets.shift();
                trigger.fixedResult[target.playerid]=result.links[0];
			}
        }
    },
            },
            "DIY_tianyi":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filterTarget:function(card,player,target){
        return player.canCompare(target);
    },
                filter:function(event,player){
        return !player.hasSkill('DIY_tianyi2');
    },
                content:function(){
        "step 0"
        player.draw();
        player.chooseToCompare(target);
        "step 1"
        if(result.bool){
            player.gainPlayerCard(target,true,'he','visibleMove');
            if(target.isAlive) player.chooseToUse(function(card,player,event){
            if(get.name(card)!='sha') return false;
            return lib.filter.filterCard.apply(this,arguments);
        },'天义：是否对'+get.translation(target)+'使用一张杀？').set('logSkill','DIY_tianyi').set('complexSelect',true).set('filterTarget',function(card,player,target){
            if(target!=_status.event.sourcex&&!ui.selected.targets.contains(_status.event.sourcex)) return false;
            return lib.filter.targetEnabled.apply(this,arguments);
        }).set('sourcex',target);
        }
        else{
            player.addTempSkill('DIY_tianyi2');
        }
    },
                ai:{
                    order:function(name,player){
            var cards=player.getCards('h');
            if(player.countCards('h','sha')==0){
                return 1;
            }
            for(var i=0;i<cards.length;i++){
                if(cards[i].name!='sha'&&cards[i].number>11&&get.value(cards[i])<7){
                    return 9;
                }
            }
            return get.order({name:'sha'})-1;
        },
                    result:{
                        player:function(player){
                if(player.countCards('h','sha')>0) return 0.6;
                var num=player.countCards('h');
                if(num>player.hp) return 0;
                if(num==1) return -2;
                if(num==2) return -1;
                return -0.7;
            },
                        target:function(player,target){
                var num=target.countCards('h');
                if(num==1) return -1;
                if(num==2) return -0.7;
                return -0.5
            },
                    },
                    threaten:1.3,
                },
            },
            "DIY_tianyi2":{
                charlotte:true,
                mod:{
                    cardEnabled:function(card){
            if(card.name=='sha') return false;
        },
                    ignoredHandcard:function(card,player){
            if(get.name(card)=='sha'){
                return true;
            }
        },
                    cardDiscardable:function(card,player,name){
            if(name=='phaseDiscard'&&get.name(card)=='sha'){
                return false;
            }
        },
                },
            },
            "DIY_xuxie":{
                audio:"xuxie",
                trigger:{
                    global:"phaseUseBegin",
                },
                logTarget:function(event,player){
        return game.filterPlayer(function(current){
            return get.distance(player,current)<=1;
        }).sortBySeat();
    },
                forced:true,
                content:function(){
        'step 0'
        player.loseMaxHp();
        'step 1'
        var targets=game.filterPlayer(function(current){
            return current==player||current.inRange(player)||player.inRange(current);
        }).sortBySeat();
        if(!targets.length) event.finish();
        else{
            event.targets=targets;
            player.chooseControl().set('choiceList',[
                '弃置'+get.translation(targets)+'的各一张牌',
                '令'+get.translation(targets)+'各摸一张牌',
            ]).set('ai',function(){
                var player=_status.event.player;
                var list=_status.event.getParent().targets.slice(0);
                var draw=0;
                var discard=0;
                while(list.length){
                    var target=list.shift();
                    var att=get.attitude(player,target);
                    if(att>0){
                        draw++;
                        if(target.countDiscardableCards(player,'he')>0) discard--;
                    }
                    if(att<0){
                        draw--;
                        if(target.countDiscardableCards(player,'he')>0) discard++;
                    }
                }
                if(draw>discard) return 1;
                return 0;
            });
        }
        'step 2'
        event.index=result.index;
        if(result.index==1){
            game.asyncDraw(targets);
        }
        else event.goto(4);
        'step 3'
        game.delay();
        event.finish();
        'step 4'
        var target=targets.shift();
        if(target.countDiscardableCards(player,'he')>0) player.discardPlayerCard(target,'he',true);
        if(targets.length) event.redo();
    },
                group:["DIY_xuxie_add","DIY_xuxie_draw"],
            },
            "DIY_xuxie_add":{
                audio:"xuxie",
                trigger:{
                    global:"phaseUseEnd",
                },
                forced:true,
                locked:false,
                content:function(){
        player.gainMaxHp();
    },
            },
            "DIY_xuxie_draw":{
                audio:"xuxie",
                trigger:{
                    player:["gainMaxHpEnd","loseMaxHpEnd"],
                },
                forced:true,
                filter:function(event,player){
                    return !player.isMaxHandcard()
                },
                content:function(){
                    player.draw();
                },
            },
            "DIY_shushen":{
                audio:"shushen",
                trigger:{
                    player:"recoverAfter",
                },
                direct:true,
                filter:function (event,player){
                    return event.getParent(2).name!='DIY_shushen';
                },
                content:function(){
        "step 0"
        event.count=trigger.num;
        "step 1"
        player.chooseTarget(get.prompt('DIY_shushen'),'令一名角色选择摸两张牌或回复1点体力').set('ai',function(target){
            return get.attitude(_status.event.player,target);
        });
        "step 2"
        if(result.bool){
            event.count--;
            player.logSkill('DIY_shushen',result.targets);
            result.targets[0].chooseDrawRecover(2,true);
            if(event.count) event.goto(1);
        }
    },
                ai:{
                    threaten:0.8,
                    expose:0.1,
                },
            },
            "DIY_shenzhi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                check:function(event,player){
        if(player.hp>2) return false;
        var cards=player.getCards('h');
        if(cards.length>3) return false;
        for(var i=0;i<cards.length;i++){
            if(get.value(cards[i])>7||get.tag(cards[i],'recover')>=1) return false;
        }
        return true;
    },
                filter:function(event,player){
        return player.countCards('h')>=player.hp&&player.isDamaged();
    },
                preHidden:true,
                content:function(){
        player.chooseToDiscard(player.hp,'he',true);
        player.recover();
    },
            },
            "DIY_guixiu":{
                audio:"spguixiu",
                trigger:{
                    global:"phaseJieshuBegin",
                },
                forced:true,
                filter:function(event,player){
                    if(player.hp%2==1&&player.countCards('h')%2==1) return false;
        return true;
    },
                content:function(){
        player.recover();
    },
            },
            "DIY_qingyu":{
                audio:"qingyu",
                dutySkill:true,
                trigger:{
                    player:"damage",
                },
                forced:true,
                filter:function(event,player){
                    return player.countCards('he',function(card){
                        return lib.filter.cardDiscardable(card,player,'DIY_qingyu');
                        })>1;
                },
                content:function(){
        player.chooseToDiscard(2,'he',true);
        player.recover();
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    "maixie_defend":true,
                    filterDamage:true,
                    skillTagFilter:function(player,tag,arg){
            if(arg&&arg.player){
                if(arg.player.hasSkillTag('jueqing',false,player)) return false;
            }
        },
                },
                group:["DIY_qingyu_achieve","DIY_qingyu_fail"],
                subSkill:{
                    achieve:{
                        trigger:{
                            player:"phaseZhunbeiBegin",
                        },
                        forced:true,
                        skillAnimation:true,
                        animationColor:"fire",
                        filter:function(event,player){
                return player.isHealthy()&&player.countCards('h')==0;
            },
                        content:function(){
                game.log(player,'成功完成使命');
                player.awakenSkill('DIY_qingyu');
                player.addSkillLog('DIY_xuancun');
            },
                        sub:true,
                    },
                    fail:{
                        trigger:{
                            player:"dying",
                        },
                        forced:true,
                        content:function(){
                game.log(player,'使命失败');
                player.awakenSkill('DIY_qingyu');
                player.loseMaxHp();
            },
                        ai:{
                            threaten:2,
                        },
                        sub:true,
                    },
                },
                derivation:"DIY_xuancun",
            },
            "DIY_xuancun":{
                audio:"xuancun",
                trigger:{
                    global:"phaseEnd",
                },
                filter:function(event,player){
        return player.countCards('h')<player.hp;
    },
                logTarget:"player",
                check:function(event,player){
        return get.attitude(player,event.player)>0;
    },
                "prompt2":function(event,player){
        return '令你与其摸'+get.cnNumber(player.hp-player.countCards('h'))+'张牌';
    },
                content:function(){
        trigger.player.draw(player.hp-player.countCards('h'));
    },
            },
            "DIY_bifa":{
                audio:"ext:天牢令/image/audio:7",
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                mark:true,
                marktext:"檄",
                intro:{
                    name:"《为袁绍檄豫州文》",
                    content:function(storage,player){
                        var num=Math.min(1756,player.countMark("DIY_bifa"));
                        var str='  左将军领豫州刺史郡国相守：';
                        var list='盖闻明主图危以制变，忠臣虑难以立权。是以有非常之人，然后有非常之事，有非常之事，然后立非常之功。夫非常者，故非常人所拟也。曩者强秦弱主，赵高执柄，专制朝权，威福由己，时人迫胁，莫敢正言，终有望夷之败，祖宗焚灭，污辱至今，永为世鉴。及臻吕后季年，产、禄专政，内兼二军，外统梁、赵，擅断万机，决事省禁，下凌上替，海内寒心。于是绛侯、朱虚兴兵奋怒，诛夷逆暴，尊立太宗，故能王道兴隆，光明显融，此则大臣立权之明表也。司空曹操祖父中常侍腾，与左悺、徐璜并作妖孽，饕餮放横，伤化虐民。父嵩，乞丐携养，因赃假位，舆金辇璧，输货权门，窃盗鼎司，倾覆重器。操赘阉遗丑，本无懿德，僄狡锋协，好乱乐祸。幕府董统鹰扬，扫除凶逆。续遇董卓侵官暴国，于是提剑挥鼓，发命东夏。收罗英雄，弃瑕取用，故遂与操同谘合谋，授以裨师，谓其鹰犬之才，爪牙可任。至乃愚佻短略，轻进易退，伤夷折衄，数丧师徒。幕府辄复分兵命锐，修完补辑，表行东郡领兖州刺史，被以虎文，奖中非威柄，冀获秦师一克之报。而操遂承资拔扈，肆行凶忒，割剥元元，残贤害善。故九江太守边让，英才俊伟，天下知名，直言正色，论不阿谄，身首被枭悬之诛，妻孥受灰灭之咎。自是士林愤痛，民怨弥重，一夫奋臂，举州同声，故躬破于徐方，地夺于吕布，彷徨东裔，蹈据无所。幕府惟强干弱枝之义，且不登叛人之党，故复援旌擐甲，席卷起征，金鼓响振，布众奔沮，拯其死亡之患，复其方伯之位，则幕府无德于兖土之民，而有大造于操也。后会鸾驾反旆，群虏寇攻。时冀州方有北鄙之警，匪遑离局，故使从事中郎徐勋就发遣操，使缮修郊庙，翊卫幼主。操便放志，专行胁迁，当御者禁，卑侮王室，败法乱纪，坐领三台，专制朝政，爵赏由心，刑戮在口，所爱光五宗，所恶灭三族，群谈者受显诛，腹议者蒙隐戮，百寮钳口，道路以目，尚书记朝会，公卿充员品而已。故太尉杨彪，典历二司，享国极位，操因缘眦睚，被以非罪，榜楚参并，五毒备至，触情任忒，不顾宪纲。又议郎赵彦，忠谏直言，议有可纳。是以圣朝含听，改容加饰，操欲迷夺时明，杜绝言路，檀收立杀，不俟报闻。又梁孝王，先帝母昆，坟陵尊显，桑梓松柏，犹宜肃恭，而操帅将吏士，亲临发掘，破棺裸尸，掠取金宝，至令圣朝流涕，士民伤怀。操又特置发丘中郎将、摸金校尉，所遇隳突，无骸不露。身处三公之位，而行桀虏之态，污国虐民，毒施人鬼。加其细政苛惨，科防互设，罾缴充蹊，坑阱塞路，举手挂网罗，动足蹈机陷，是以兖、豫有无聊之民，帝都有吁嗟之怨。历观载籍，无道之臣，贪残酷烈，于操为甚。幕府方诘外奸，未及整训，加绪含容，冀可弥缝。而操豺狼野心，潜包祸谋，乃欲摧挠栋梁，孤弱汉室，除灭忠正，专为枭雄。往者伐鼓北征公孙瓒，强寇桀逆，拒围一年。操因其未破，阴交书命，外助王师，内相掩袭，故引兵造河，方舟北济。会其行人发露，瓒亦枭夷，故使锋芒挫缩，厥图不果。尔乃大军过荡西山，屠各左校，皆束手奉质，争为前登，犬羊残丑，消沦山谷。于是操师震慑，晨夜逋遁，屯据敖仓，阻河为固，欲以螗螂之斧，御隆车之隧。幕府奉汉威灵，折冲宇宙，长戟百万，胡骑千群，奋中黄、育、获之士，骋良弓劲弩之势，并州越太行，青州涉济、漯，大军泛黄河而角其前，荆州下宛、叶而掎其后，雷霆虎步，并集虏庭，若举炎火以焫飞蓬，覆沧海以沃熛炭，有何不灭者哉？又操军吏士，其可战者，皆出自幽、冀，或故营部曲，咸怨旷思归，流涕北顾。其馀兖、豫之民，及吕布、张扬之遗众，覆亡迫胁，权时苟从，各被创痍，人为雠敌。若回旆方徂，登高罔而击鼓吹，扬素挥以启降路，必土崩瓦解，不俟血刃。方今汉室陵迟，纲维弛绝，圣朝无一介之辅，股肱无折冲之势，方畿之内，简练之臣皆垂头拓翼，莫所凭恃，虽有忠义之佐，胁于暴虐之臣，焉能展其节？又操持部曲精兵七百，围守宫阙，外托宿卫，内实拘执，惧其篡逆之萌，因斯而作。此乃忠臣肝脑涂地之秋，烈士立功之会，可不勖哉！操又矫命称制，遣使发兵，恐边远州郡过听而给与，强寇弱主违众旅叛，举以丧名，为天下笑，则明哲不敢也。即日幽、并、青、冀四州并进。书到，荆州勒见兵，与建忠将军协同声势，州郡各整戎马，罗落境界，举师扬威，并匡社稷，则非常之功于是乎著。其得操首者，封五行户侯，赏钱五千万。部曲偏裨将校诸吏降者，勿有所问。广宣恩信，班扬符赏，布告天下，咸使知圣朝有拘逼之难，如律令。';
                        for(var i=0;i<num;i++){
                            str+=list[i];
                        }
                        if(num<1756) str+='<br><li>'+get.translation(player)+'正在奋笔疾书中...';
                        return str;
                    },
                },
                forced:true,
                content:function(){
                    'step 0'
                    var num=get.translation(trigger.card.name).length*5;
                    player.addMark('DIY_bifa',num,false);
                    if(!player.storage.DIY_bifa_damage) player.storage.DIY_bifa_damage=0;
                    player.storage.DIY_bifa_damage+=num;
                    'step 1'
                    var num=player.countMark("DIY_bifa");
                    if(num<1756) event.goto(4);
                    'step 2'
                    player.chooseTarget(get.prompt('DIY_bifa'),'笔伐：对一名角色造成一点伤害',true).set('ai',function(target){
                        var att=get.attitude(player,target);
                        return att<0;
                    });
                    'step 3'
                    if(result.bool){
                        player.storage.DIY_bifa_damage--;
                        var target=result.targets[0];
                        target.damage(1);
                        if(player.storage.DIY_bifa_damage>0) event.goto(2);
                    }
                    'step4'
                },
            },
            "DIY_songci":{
                audio:"songci",
                enable:"phaseUse",
                filterTarget:true,
                filter:function(event,player){
        return player.getHistory('custom',function(evt){
            return evt.DIY_songci==true;
        }).length<player.hp;
    },
                content:function(){
        player.getHistory('custom').push({DIY_songci:true});
        if(target.countCards('h')>target.hp){
            target.chooseToDiscard(2,'he',true);
        }
        else{
            target.draw(2);
        }
    },
                ai:{
                    order:7,
                    threaten:1.6,
                    expose:0.2,
                    result:{
                        target:function(player,target){
                if(target.countCards('h')<=target.hp){
                    return 1;
                }
                else if(target.countCards('h')>target.hp){
                    return -1;
                }
            },
                    },
                },
            },
            "DIY_pingjian":{
                audio:"pingjian",
                trigger:{
                    player:["phaseZhunbeiBegin","damageEnd","phaseJieshuBegin"],
                },
                initList:function(){
        var list=[];
        if(_status.connectMode) var list=get.charactersOL();
        else{
            var list=[];
            for(var i in lib.character){
                if(lib.filter.characterDisabled2(i)||lib.filter.characterDisabled(i)) continue;
                list.push(i);
            }
        }
        game.countPlayer2(function(current){
            list.remove(current.name);
            list.remove(current.name1);
            list.remove(current.name2);
            if(current.storage.DIY_baobian&&current.storage.DIY_baobian.character) list.removeArray(current.storage.DIY_baobian.character)
        });
        _status.characterlist=list;
    },
                frequent:true,
                content:function(){
        'step 0'
        if(!player.storage.DIY_pingjian) player.storage.DIY_pingjian=[];
        event._result={bool:true};
        'step 1'
        if(result.bool){
            if(!_status.characterlist){
                lib.skill.DIY_pingjian.initList();
            }
            var list=[];
            var skills=[];
            var map=[];
            _status.characterlist.randomSort();
            var name2=event.triggername;
            for(var i=0;i<_status.characterlist.length;i++){
                var name=_status.characterlist[i];
                if(name.indexOf('zuoci')!=-1||name.indexOf('xushao')!=-1) continue;
                var skills2=lib.character[name][3];
                for(var j=0;j<skills2.length;j++){
                    if(player.storage.DIY_pingjian.contains(skills2[j])) continue;
                    if(skills.contains(skills2[j])){
                        list.add(name);
                        if(!map[name]) map[name]=[];
                        map[name].push(skills2[j]);
                        skills.add(skills2[j]);
                        continue;
                    }
                    var list2=[skills2[j]];
                    game.expandSkills(list2);
                    for(var k=0;k<list2.length;k++){
                        var info=lib.skill[list2[k]];
                        if(!info||!info.trigger||!info.trigger.player||info.silent||info.juexingji||info.hiddenSkill) continue;
                        if(info.trigger.player==name2||Array.isArray(info.trigger.player)&&info.trigger.player.contains(name2)){
                            if(info.init||info.ai&&(info.ai.combo||info.ai.notemp||info.ai.neg)) continue;
                            if(info.filter){
                                try{
                                    var bool=info.filter(trigger,player,name2);
                                    if(!bool) continue;
                                }
                                catch(e){
                                    continue;
                                }
                            }
                            list.add(name);
                            if(!map[name]) map[name]=[];
                            map[name].push(skills2[j]);
                            skills.add(skills2[j]);
                            break;
                        }
                    }
                }
                if(list.length>2) break;
            }
            if(!skills.length){
                //player.draw();
                event.finish();
            }
            else{
                //skills.unshift('摸一张牌');
                player.chooseControl(skills).set('dialog',['请选择要发动的技能',[list,'character']]).set('ai',function(){return skills.randomGet()});
            }
        }
        else event.finish();
        'step 2'
        if(result.control=='摸一张牌'){
            player.draw();
            return;
        }
        player.storage.DIY_pingjian.add(result.control);
        player.addSkill(result.control);
    },
                group:"DIY_pingjian_use",
                "phaseUse_special":["xinfu_lingren"],
            },
            "DIY_pingjian_use":{
                audio:"pingjian",
                enable:"phaseUse",
                usable:1,
                position:"he",
                content:function(){
        'step 0'
        if(!player.storage.DIY_pingjian) player.storage.DIY_pingjian=[];
        event._result={bool:true};
        'step 1'
        if(result.bool){
            var list=[];
            var skills=[];
            var map=[];
            if(!_status.characterlist){
                lib.skill.DIY_pingjian.initList();
            }
            _status.characterlist.randomSort();
            for(var i=0;i<_status.characterlist.length;i++){
                var name=_status.characterlist[i];
                if(name.indexOf('zuoci')!=-1||name.indexOf('xushao')!=-1) continue;
                var skills2=lib.character[name][3];
                for(var j=0;j<skills2.length;j++){
                    if(player.storage.DIY_pingjian.contains(skills2[j])) continue;
                    if(skills.contains(skills2[j])||lib.skill.DIY_pingjian.phaseUse_special.contains(skills2[j])){
                        list.add(name);
                        if(!map[name]) map[name]=[];
                        map[name].push(skills2[j]);
                        skills.add(skills2[j]);
                        continue;
                    }
                    var list2=[skills2[j]];
                    game.expandSkills(list2);
                    for(var k=0;k<list2.length;k++){
                        var info=lib.skill[list2[k]];
                        if(!info||!info.enable||info.viewAs||info.juexingji||info.hiddenSkill) continue;
                        if(info.enable=='phaseUse'||Array.isArray(info.enable)&&info.enable.contains('phaseUse')){
                            if(info.init||info.onChooseToUse||info.ai&&(info.ai.combo||info.ai.notemp||info.ai.neg)) continue;
                            if(info.filter){
                                try{
                                    var bool=info.filter(event.getParent(2),player);
                                    if(!bool) continue;
                                }
                                catch(e){
                                    continue;
                                }
                            }
                            list.add(name);
                            if(!map[name]) map[name]=[];
                            map[name].push(skills2[j]);
                            skills.add(skills2[j]);
                            break;
                        }
                    }
                }
                if(list.length>2) break;
            }
            if(!skills.length){
                //player.draw();
                event.finish();
            }
            else{
                //skills.unshift('摸一张牌');
                player.chooseControl(skills).set('dialog',['请选择要发动的技能',[list,'character']]).set('ai',function(){return skills.randomGet()});
            }
        }
        else event.finish();
        'step 2'
        if(result.control=='摸一张牌'){
            player.draw();
            return;
        }
        player.storage.DIY_pingjian.add(result.control);
        player.addSkill(result.control);
        player.addTempSkill('pingjian_temp','phaseUseEnd');
        player.storage.DIY_pingjian_temp=result.control;
        //event.getParent(2).goto(0);
    },
                ai:{
                    order:10,
                    result:{
                        player:1,
                    },
                },
            },
            "DIY_biluan":{
                audio:"biluan",
                trigger:{
                    global:["phaseBefore","gameDrawAfter"],
                    player:["phaseBefore","enterGame","showCharacterAfter"],
                },
                forced:true,
                charlotte:true,
                skillAnimation:true,
                animationColor:"thunder",
                content:function(){
        player.logSkill("DIY_biluan_audio");
        var Identity=player.identity;
        player.identity="zhu";
        player.showIdentity();
        player.update();
        player.logSkill("DIY_biluan_audio");
        game.zhu.identity=Identity;
        game.zhu.showIdentity();
        game.zhu.update();
        player.logSkill("DIY_biluan_audio");
        game.zhu=player;
        player.out("DIY_biluan");
        game.countPlayer(function(current){
            if(current!=player&&current.identity=="nei"){
                current.identity="zhong";
            }
        });
        game.countPlayer(function(current){
            if(current!=player){
                player.line(current,'yellow');
                current.showIdentity();
                current.goMad();
            }
        });
    },
            },
            "DIY_biluan_audio":{
                audio:"biluan",
                charlotte:true,
            },
            "DIY_qice":{
                hiddenCard:function(player,name){
        return get.type(name)=='trick'&&!player.getStorage('DIY_qice2').contains(name)&&player.countCards('h')>1;
    },
                audio:"ext:天牢令/image/audio:6",
                enable:"chooseToUse",
                filter:function(event,player){
        var cards=player.getCards('h');
        if(cards.length==0) return false;
        var mod2=game.checkMod(cards[0],player,'unchanged','cardEnabled2',player);
        if(mod2===false) return false;
        var storage=player.getStorage('DIY_qice2');
        for(var i of lib.inpile){
            if(!storage.contains(i)&&get.type(i)=='trick'&&event.filterCard({
                name:i,
                cards:cards,
            },player,event)) return true;
        }
        return false;
    },
                chooseButton:{
                    dialog:function(event,player){
            var cards=player.getCards('h');
            var storage=player.getStorage('DIY_qice2');
            var list=[];
            for(var i of lib.inpile){
                if(!storage.contains(i)&&get.type(i)=='trick'&&event.filterCard({
                    name:i,
                    cards:cards,
                },player,event)){
                    list.push(['锦囊','',i]);
                }
            }
            return ui.create.dialog('奇策',[list,'vcard'],'hidden');
        },
                    check:function(button){
            var player=_status.event.player;
            return player.getUseValue({name:button.link[2]})+1;
        },
                    backup:function(links,player){
            return {
                audio:"ext:天牢令/image/audio:6",
                popname:true,
                filterCard:true,
                selectCard:1,
                position:'h',
                popname:true,
                check:function(card){
                    return 6-get.value(card);
                },
                viewAs:{
                    name:links[0][2],
                },
                onuse:function(links,player){
                    if(!player.storage.DIY_qice2) player.storage.DIY_qice2=[];
                    player.storage.DIY_qice2.add(links.card.name);
                    player.addTempSkill('DIY_qice2');
                    player.logSkill("DIY_qice");
                },
            }
        },
                    prompt:function(links,player){
            return '将一张牌当做'+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    order:12,
                    result:{
                        player:1,
                    },
                },
            },
            "DIY_qice2":{
                onremove:true,
            },
            "DIY_ranshang":{
                audio:"ranshang",
                trigger:{
                    player:"damageEnd",
                },
                filter:function(event,player){
        return event.nature=='fire';
    },
                forced:true,
                check:function(){
        return false;
    },
                content:function(){
        player.addMark('DIY_ranshang',trigger.num);
    },
                intro:{
                    "name2":"燃",
                    content:"mark",
                },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(card.name=='sha'){
                    if(card.nature=='fire'||player.hasSkill('zhuque_skill')) return 2;
                }
                if(get.tag(card,'fireDamage')&&current<0) return 2;
            },
                    },
                },
                group:"DIY_ranshang2",
            },
            "DIY_ranshang2":{
                audio:"ranshang",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_ranshang')>0;
    },
                content:function(){
        player.loseHp(player.countMark('DIY_ranshang'));
        player.loseMaxHp();
        player.draw(player.countMark('DIY_ranshang'));
    },
            },
            "DIY_hanyong":{
                trigger:{
                    player:"useCard",
                },
                audio:"hanyong",
                filter:function(event,player){
        return (event.card.name=='nanman'||event.card.name=='wanjian'||event.card.name=='sha')&&event.card;
    },
                content:function(){
        player.loseMaxHp();
        trigger.baseDamage++;
        if(!player.isMaxHp(true)){
            trigger.nowuxie=true;
            trigger.directHit.addArray(game.players);
        }
    },
                group:"DIY_hanyong2",
            },
            "DIY_hanyong2":{
                trigger:{
                    player:"damageBegin3",
                    source:"damageBegin1",
                },
                audio:"hanyong",
                forced:true,
                filter:function(event,player){
        return player.isMaxHp(true);
    },
                content:function(){
        trigger.num++;
    },
                ai:{
                    presha:true,
                },
            },
            "DIY_fenyin":{
                audio:"ext:天牢令/image/audio:8",
                group:["DIY_fenyin1","DIY_fenyin2","DIY_fenyin3","DIY_fenyin4","DIY_fenyin5","DIY_fenyin6","DIY_fenyin7","DIY_fenyin8"],
                mark:true,
                marktext:"奋音",
                intro:{
                    "name2":"奋音",
                    content:function(storage,player){
            var num=player.countMark("DIY_fenyin");
            var str='<li>送给你小心心 送你花一朵';
            if(num==1){
            str='<li>你在我生命中 太多的感动';
            }
            if(num==2){
            str='<li>你是我的天使 一路指引我';
            }
            if(num==3){
            str='<li>无论岁月变幻 爱你唱成歌';
            }
            if(num==4){
            str='<li>听我说谢谢你<br>因为有你 温暖了四季';
            }
            if(num==5){
            str='<li>谢谢你 感谢有你<br>世界更美丽';
            }
            if(num==6){
            str='<li>我要谢谢你 因为有你<br>爱常在心底';
            }
            if(num==7){
            str='<li>谢谢你 感谢有你<br>把幸福传递';
            }
            return str;
        },
                },
                init:function(player){
        player.storage.DIY_fenyin=[];
    },
            },
            "DIY_fenyin1":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==0;
    },
                content:function(){
        player.say(["送给你小心心 送你花一朵"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return ['wuzhong','zengbin','sadouchengbing','dongzhuxianji','tongzhougongji'].contains(card.name);
        });
        player.gain(card,'gain2',false);
        trigger.cancel();
    },
            },
            "DIY_fenyin2":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==1;
    },
                content:function(){
        player.say(["你在我生命中 太多的感动"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return ['shan','tao','zong','xionghuangjiu'].contains(card.name);
        });
        player.gain(card,'gain2',false);
        trigger.cancel();
    },
            },
            "DIY_fenyin3":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==2;
    },
                content:function(){
        player.say(["你是我的天使 一路指引我"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return get.type(card)=='trick'&&!get.tag(card,'damage')>0;
        });
        player.gain(card,'gain2',false);
        trigger.cancel();
    },
            },
            "DIY_fenyin4":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==3;
    },
                content:function(){
        player.say(["无论岁月变幻 爱你唱成歌"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return ['shunshou','guohe'].contains(card.name);
        });
        player.gain(card,'gain2',false);
        trigger.cancel();
    },
            },
            "DIY_fenyin5":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==4;
    },
                content:function(){
        player.say(["听我说谢谢你<br>因为有你 温暖了四季"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return get.type(card)=='equip';
        });
        player.gain(card,'gain2',false);
        trigger.cancel();
    },
            },
            "DIY_fenyin6":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==5;
    },
                content:function(){
        player.say(["谢谢你 感谢有你<br>世界更美丽"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return ['sha','jiu'].contains(card.name);
        });
        player.gain(card,'gain2',false);
        trigger.cancel();
    },
            },
            "DIY_fenyin7":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==6;
    },
                content:function(){
        player.say(["我要谢谢你 因为有你<br>爱常在心底"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return ['shandian','lebu','bingliang','fulei','caomu'].contains(card.name);
        });
        player.gain(card,'gain2',false);
        trigger.cancel();
    },
            },
            "DIY_fenyin8":{
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                audio:"ext:天牢令/image/audio:1",
                forced:true,
                filter:function(event,player){
        return player.countMark('DIY_fenyin')==7;
    },
                content:function(){
        player.say(["谢谢你 感谢有你<br>把幸福传递"].randomGet());
        player.addMark('DIY_fenyin',1,false);
        var card=get.cardPile2(function(card){
            return get.type(card)=='trick'&&get.tag(card,'damage')>0;
        });
        player.gain(card,'gain2',false);
        lib.skill.DIY_fenyin.init(player)
        trigger.cancel();
    },
            },
            "DIY_shilu":{
                marktext:"戮",
                intro:{
                    "name2":"戮",
                    content:"mark",
                },
                mod:{
                    maxHandcard:function(player,num){
            return num+player.countMark('DIY_shilu');
        },
                },
                trigger:{
                    global:"damageBegin1",
                },
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                filter:function(event,player){
        return event.player!=player;
    },
                content:function(){
        trigger.source=player;
        player.addMark('DIY_shilu',trigger.num);
        trigger._triggered=null;
    },
                group:"DIY_shilu_draw",
                subSkill:{
                    draw:{
                        trigger:{
                            player:"phaseUseBegin",
                        },
                        forced:true,
                        filter:function(event,player){
                return player.countMark('DIY_shilu')>0;
            },
                        content:function(){
                "step 0"
                player.chooseToDiscard('he',true,get.prompt("弃置至多"+get.translation(player.countMark('DIY_shilu'))+"张牌并摸双倍的牌"),[1,player.countMark('DIY_shilu')]).set('ai',function(card){
                    return 5-get.value(card);
                });
                "step 1"
                if(result.bool){
                    player.draw(2*result.cards.length);
                    player.logSkill('DIY_shilu');
                }
            },
                        ai:{
                            result:{
                                player:2,
                            },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_xiongnve":{
                trigger:{
                    global:"dying",
                },
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                derivation:"DIY_wansha",
                filter:function(event,player){
        return event.player.hp<=0&&player!=event.player;
    },
                content:function(){
        if(trigger.player.identity=="zhong"){
            player.draw();
            player.addSkill("DIY_wansha");
            trigger.player.identity="fan";
            trigger.player.showIdentity();
            trigger.player.update();
        }
        if(trigger.player.identity=="zhu"){
            if(trigger.player.hasSkill('bahu')){
                trigger.player.removeSkill('bahu');
                trigger.player.removeSkill('feiyang');
                player.addSkill('bahu');
                player.addSkill('feiyang');
            }
            if(trigger.player.hasSkill('tianming')){
                trigger.player.removeSkill('tianming');
                player.addSkill('tianming');
            }
            if(trigger.player.hasSkill('zhuSkill_jiangling')){
                trigger.player.removeSkill('zhuSkill_jiangling');
                player.addSkill('zhuSkill_jiangling');
            }
            if(trigger.player.hasSkill('zhuSkill_xiangyang')){
                trigger.player.removeSkill('zhuSkill_xiangyang');
                player.addSkill('zhuSkill_xiangyang');
            }
            if(trigger.player.hasSkill('zhuSkill_fancheng')){
                trigger.player.removeSkill('zhuSkill_fancheng');
                player.addSkill('zhuSkill_fancheng');
            }
            game.zhu.identity="fan";
            game.zhu.showIdentity();
            game.zhu.update();
            game.zhu=player;
            player.identity="zhu";
            player.showIdentity();
            player.update();
        }
        if(trigger.player.identity=="fan"){
            if(player.identity!=="zhu"){
                player.draw();
                player.recover();
            }
            game.zhu.draw();
            game.zhu.recover();
        }
        if(trigger.player.identity=="nei"){
            player.draw(3);
            lib.element.player.die.apply(trigger.player,[]);
            trigger.player.showIdentity();
            trigger.player.update();
        }
    },
                ai:{
                    expose:10,
                    threaten:1.5,
                },
            },
            "DIY_wansha":{
                audio:"wansha",
                global:"DIY_wansha_global",
                trigger:{
                    global:"dyingBegin",
                },
                forced:true,
                logTarget:"player",
                filter:function(event,player){
        return player==_status.currentPhase;
    },
                content:function(){
        game.countPlayer(function(current){
            if(current!=player&&current!=trigger.player) current.addSkillBlocker('DIY_wansha_fengyin');
        });
        player.addTempSkill('DIY_wansha_clear');
    },
                subSkill:{
                    global:{
                        mod:{
                            cardEnabled:function(card,player){
                    var source=_status.currentPhase;
                    if(card.name=='tao'&&source&&source!=player&&source.hasSkill('DIY_wansha')&&!player.isDying()) return false;
                },
                            cardSavable:function(card,player){
                    var source=_status.currentPhase;
                    if(card.name=='tao'&&source&&source!=player&&source.hasSkill('DIY_wansha')&&!player.isDying()) return false;
                },
                        },
                        sub:true,
                    },
                    fengyin:{
                        inherit:"fengyin",
                        sub:true,
                        init:function(player,skill){
                player.addSkillBlocker(skill);
            },
                        onremove:function(player,skill){
                player.removeSkillBlocker(skill);
            },
                        charlotte:true,
                        skillBlocker:function(skill,player){
                return !lib.skill[skill].charlotte&&!get.is.locked(skill,player);
            },
                        mark:true,
                        mod:{
                            cardEnabled:function(){
                                return false;
                            },
                            cardRespondable:function(){
                                return false;
                            },
                            cardSavable:function(){
                                return false;
                            },
                        },
                        intro:{
                            content:function(storage,player,skill){
                    var list=player.getSkills(null,false,false).filter(function(i){
                        return lib.skill.fengyin.skillBlocker(i,player);
                    });
                    if(list.length) return '不能使用或打出卡牌<br>失效技能：'+get.translation(list);
                    return '不能使用或打出卡牌<br>无失效技能';
                },
                        },
                    },
                    clear:{
                        trigger:{
                            global:"dyingAfter",
                        },
                        forced:true,
                        charlotte:true,
                        popup:false,
                        filter:function(event,player){
                return !_status.dying.length;
            },
                        content:function(){
                player.removeSkill('DIY_wansha_clear');
            },
                        onremove:function(){
                game.countPlayer2(function(current){
                    current.removeSkillBlocker('DIY_wansha_fengyin');
                });
            },
                        sub:true,
                    },
                },
            },
            "DIY_zhoufu":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"loseAfter",
                    global:"cardsDiscardAfter",
                },
                filter:function(event,player){
                    if(player.getExpansions('DIY_zhoufu').length) return false;
                    if(event.getParent(2).name=='DIY_zhoufu_judge') return false;
        if(event.name=='lose'){
            if(event.type!='discard') return false;
        }
        else{
            var evt=event.getParent();
            if(evt.name!='orderingDiscard'||!evt.relatedEvent||evt.relatedEvent.player!=player||!['useCard','respond'].contains(evt.relatedEvent.name)) return false;
        }
        return (event.cards2||event.cards).filterInD('d').length>0;
                },
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                forced:true,
                content:function(){
                    var cards=(trigger.cards2||trigger.cards).filterInD('d');
        player.addToExpansion(cards[0],player,'give').gaintag.add('DIY_zhoufu');
    },
                ai:{
                    order:8,
                },
                group:["DIY_zhoufu_judge","DIY_zhoufu2"],
                subSkill:{
                    judge:{
                        audio:"DIY_zhoufu",
                        trigger:{
                            global:"judge",
                        },
                        forced:true,
                        filter:function(event,player){
                return player.getExpansions('DIY_zhoufu').length&&event.player.isAlive();
            },
                        logTarget:"player",
                        content:function(){
                'step 0'
                var list=player.getExpansions('DIY_zhoufu');
                player.chooseButton([get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+get.translation(trigger.player.judging[0])+
            '，'+get.prompt('DIY_zhoufu'),list,'hidden'],function(button){
                   var card=button.link;
                   var trigger=_status.event.getTrigger();
                   var player=_status.event.player;
                   var judging=_status.event.judging;
                   var result=trigger.judge(card)-trigger.judge(judging);
                   var attitude=get.attitude(player,trigger.player);
                   return result*attitude;
                }).set('judging',trigger.player.judging[0]).set('filterButton',function(button){
                   var player=_status.event.player;
                   var card=button.link;
                   var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
                   if(mod2!='unchanged') return mod2;
                   var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
                   if(mod!='unchanged') return mod;
                   return true;
                });
                'step 1'
                if(result.bool){
                    event.forceDie=true;
                    player.respond(result.links,'DIY_zhoufu_judge','highlight','noOrdering');
                    result.cards=result.links;
                    var card=result.cards[0];
                    event.card=card;
                }
                else{
                   event.finish(); 
                }
                'step 2'  
                if(result.bool){
                    if(trigger.player.judging[0].clone){
                        trigger.player.judging[0].clone.classList.remove('thrownhighlight');
                        game.broadcast(function(card){
                            if(card.clone){
                               card.clone.classList.remove('thrownhighlight');
                            }
                        },
                        trigger.player.judging[0]);
                        game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
                    }
                    game.cardsDiscard(trigger.player.judging[0]);
                    trigger.player.judging[0]=result.cards[0];
                    trigger.orderingCards.addArray(result.cards);
                    game.log(trigger.player,'的判定牌改为',card);
                    if(player!=_status.currentPhase){
                        _status.currentPhase.addTempSkill("DIY_zhoufu_losehp");
                        _status.currentPhase.addMark("DIY_zhoufu_losehp",false);
                    }
                }
            },
                        ai:{
                            rejudge:true,
                            tag:{
                                rejudge:0.6,
                            },
                        },
                        sub:true,
                    },
                    losehp:{
                        audio:"DIY_zhoufu",
                        trigger:{
                            player:"phaseEnd",
                        },
                        direct:true,
                        forced:true,
                        charlotte:true,
                        mark:true,
                        marktext:'咒缚',
                        intro:{
                            content:"本回合结束时失去$点体力",
                        },
                        content:function(){
                            var num=player.countMark("DIY_zhoufu_losehp");
                            player.removeMark("DIY_zhoufu_losehp",num);
                            player.loseHp(num);
            },
                        sub:true,
                    },
                },
            },
            "DIY_zhoufu2":{
                audio:"DIY_zhoufu",
                unique:true,
                trigger:{
                    global:"phaseBefore",
                },
                forced:true,
                filter:function(event,player){
                    return !player.getExpansions('DIY_zhoufu').length&&event.player.isAlive();
                },
                content:function(){
                    player.addToExpansion(get.cards(1),'gain2').gaintag.add('DIY_zhoufu');
                },
            },
            "DIY_yingbing":{
                trigger:{
                    global:"useCard",
                },
                audio:"ext:天牢令/image/audio:2",
                check:function(event,player){
        return get.attitude(player,event.player)<0;
    },
                filter:function(event,player){
                if(player==event.player) return false;
                var cards=player.getExpansions('DIY_zhoufu');
        return cards.length&&get.color(cards[0])==get.color(event.card);
    },
                content:function(){
        player.draw();
        trigger.cancel();
        var cards=player.getExpansions('DIY_zhoufu');
        player.loseToDiscardpile(cards);
    },
                ai:{
                    threaten:1.8,
                    expose:0.3,
                },
            },
            "DIY_chexuan":{
                audio:"chexuan",
                enable:"phaseUse",
                derivation:["DIY_sichengliangyu","DIY_tiejixuanyu","DIY_feilunzhanyu"],
                filter:function(event,player){
        return !player.getEquip(5)&&!player.isDisabled(5);
    },
                filterCard:true,
                position:"he",
                check:function(card){
        return 5-get.value(card);
    },
                content:function(){
        'step 0'
        player.chooseButton(['请选择要装备的舆',[lib.skill.DIY_chexuan.derivation.map(function(i){
            return ['舆','',i];
        }),'vcard']],true).set('ai',function(button){
            if(button.link[2]=='DIY_sichengliangyu'&&player.countCards('h')<player.hp) return 1;
            return Math.random();
        });
        'step 1'
        var card=game.createCard(result.links[0][2]);
        player.$gain2(card);
        player.equip(card);
        game.delay();
    },
                group:"DIY_chexuan_lose",
                ai:{
                    order:6,
                    result:{
                        player:1,
                    },
                },
                subSkill:{
                    lose:{
                        audio:"chexuan",
                        trigger:{
                            player:"loseAfter",
                            global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
                        },
                        frequent:true,
                        filter:function(event,player){
                if(player.isDisabled(5)) return false;
                var evt=event.getl(player);
                if(!evt||!evt.es||!evt.es.length) return false;
                if(event.name=='equip'&&event.player==player) return false;
                for(var i of evt.es){
                    if(get.subtype(i,false)=='equip5') return true;
                }
                return false;
            },
                        content:function(){
                'step 0'
        player.chooseButton(['请选择要装备的宝物',[lib.skill.DIY_chexuan.derivation.map(function(i){
            return ['宝物','',i];
        }),'vcard']],true).set('ai',function(button){
            if(button.link[2]=='DIY_sichengliangyu'&&player.countCards('h')<player.hp) return 1;
            return Math.random();
        });
        'step 1'
        var card=game.createCard(result.links[0][2]);
        player.$gain2(card);
        player.equip(card);
        game.delay();
            },
                        sub:true,
                    },
                },
            },
            "DIY_qiangshou":{
                mod:{
                    cardUsable:function(card,player,num){
            if(card.name=='sha'&&player.getEquip(1)) return num+1;
        },
                    maxHandcard:function(player,num){
            if(player.getEquip(3)||player.getEquip(4)||player.getEquip(6)) return num+1;
        },
                    globalFrom:function(player,target,distance){
            if(player.getEquip(5)) return distance-1;
        },
                },
            },
            "DIY_feilunzhanyu":{
                trigger:{
                    global:"phaseJieshuBegin",
                },
                equipSkill:true,
                filter:function(event,player){
        return player!=event.player&&event.player.countCards('he')>0&&player.getEquip('DIY_feilunzhanyu');
    },
                logTarget:"player",
                check:function(event,player){
        return get.attitude(player,event.player)<=0;
    },
                content:function(){
        'step 0'
        trigger.player.chooseCard('he',true,'将一张牌交给'+get.translation(player));
        'step 1'
        if(result.bool) player.gain(result.cards,trigger.player,'giveAuto');
        'step 2'
        var card=player.getEquip('DIY_feilunzhanyu');
        if(card) player.discard(card);
    },
            },
            "DIY_sichengliangyu":{
                trigger:{
                    global:"phaseJieshuBegin",
                },
                equipSkill:true,
                filter:function(event,player){
        return player.getEquip('DIY_sichengliangyu');
    },
                content:function(){
        'step 0'
        player.draw(2);
        'step 1'
        var card=player.getEquip('DIY_sichengliangyu');
        if(card) player.discard(card);
    },
            },
            "DIY_tiejixuanyu":{
                trigger:{
                    global:"phaseJieshuBegin",
                },
                equipSkill:true,
                filter:function(event,player){
        return player!=event.player&&event.player.countCards('he')>0&&player.getEquip('DIY_tiejixuanyu');
    },
                logTarget:"player",
                check:function(event,player){
        return get.attitude(player,event.player)<0;
    },
                content:function(){
        'step 0'
        trigger.player.chooseToDiscard('he',2,true);
        'step 1'
        var card=player.getEquip('DIY_tiejixuanyu');
        if(card) player.discard(card);
    },
            },
            "DIY_fenli":{
                audio:"fenli",
                group:["DIY_fenli_judge","DIY_fenli_draw","DIY_fenli_use","DIY_fenli_discard"],
                subfrequent:["discard"],
                subSkill:{
                    judge:{
                        audio:"fenli",
                        trigger:{
                            player:"phaseJudgeBefore",
                        },
                        prompt:"是否发动【奋励】跳过判定阶段？",
                        frequent:true,
                        filter:function(event,player){
                return player.countCards('j')&&(player.isMaxHandcard()||player.isMaxHp()||(player.isMaxEquip()&&player.countCards('e')));
            },
                        content:function(){
                trigger.cancel();
            },
                        sub:true,
                    },
                    draw:{
                        audio:"fenli",
                        trigger:{
                            player:"phaseDrawBefore",
                        },
                        prompt:"是否发动【奋励】跳过摸牌阶段？",
                        filter:function(event,player){
                return !event.numFixed&&(player.isMaxHandcard()||player.isMaxHp()||(player.isMaxEquip()&&player.countCards('e')));
            },
                        check:function(event,player){
                if(player.getHistory('skipped').length>0) return false;
                return game.hasPlayer(function(current){
                    return get.attitude(player,current)<0&&current.hp==1&&get.damageEffect(current,player,player)>0;
                });
            },
                        content:function(){
                trigger.cancel();
            },
                        sub:true,
                    },
                    use:{
                        audio:"fenli",
                        trigger:{
                            player:"phaseUseBefore",
                        },
                        prompt:"是否发动【奋励】跳过出牌阶段？",
                        filter:function(event,player){
                return player.countCards('h')>0&&(player.isMaxHandcard()||player.isMaxHp()||(player.isMaxEquip()&&player.countCards('e')));
            },
                        check:function(event,player){
                if(!player.needsToDiscard()||(player.countCards('e')&&player.isMaxEquip())) return true;
                if(player.getHistory('skipped').length>0) return false;
                return game.hasPlayer(function(current){
                    return get.attitude(player,current)<0&&current.hp==1&&get.damageEffect(current,player,player)>0;
                });
            },
                        content:function(){
                trigger.cancel();
            },
                        sub:true,
                    },
                    discard:{
                        audio:"fenli",
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        prompt:"是否发动【奋励】跳过弃牌阶段？",
                        frequent:true,
                        filter:function(event,player){
                return player.needsToDiscard()&&(player.isMaxHandcard()||player.isMaxHp()||(player.isMaxEquip()&&player.countCards('e')));
            },
                        content:function(){
                trigger.cancel();
            },
                        sub:true,
                    },
                },
                ai:{
                    combo:"DIY_pingkou",
                },
            },
            "DIY_pingkou":{
                audio:"pingkou",
                trigger:{
                    global:"phaseEnd",
                },
                direct:true,
                filter:function(event,player){
        return event.player.getHistory('skipped').length>0;
    },
                content:function(){
        'step 0'
        player.draw(Math.max(1,(Math.ceil(event.player.getHistory('skipped').length/2))));
        player.chooseTarget([1,event.player.getHistory('skipped').length],get.prompt2('DIY_pingkou'),function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            var player=_status.event.player;
            return get.damageEffect(target,player,player);
        });
        'step 1'
        if(result.bool){
            player.logSkill('DIY_pingkou',result.targets);
            event.targets=result.targets.slice(0).sortBySeat();
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.targets&&event.targets.length){
            event.targets.shift().damage();
            event.redo();
        }
    },
                ai:{
                    combo:"DIY_fenli",
                    effect:{
                        target:function(card){
                if(card.name=='lebu'||card.name=='bingliang') return 0.5;
            },
                    },
                },
            },
            "DIY_jiuchi":{
                mod:{
                    cardUsable:function(card,player,num){
            if(card.name=='jiu') return Infinity;
        },
                },
                audio:"jiuchi",
                group:["DIY_jiuchi_draw","DIY_jiuchi_ma"],
                enable:"chooseToUse",
                filterCard:function(card){
        return get.color(card)=='black';
    },
                viewAs:{
                    name:"jiu",
                },
                position:"hes",
                viewAsFilter:function(player){
        if(!player.countCards('he',{color:'black'})) return false;
        return true;
    },
                prompt:"将一张黑色牌当酒使用",
                check:function(cardx,player){
        if(player&&player==cardx.player) return true;
        if(_status.event.type=='dying') return 1;
        var player=_status.event.player;
        var shas=player.getCards('he',function(card){
            return card!=cardx&&get.name(card,player)=='sha';
        });
        if(!shas.length) return -1;
        if(shas.length>1&&(player.getCardUsable('sha')>1||player.countCards('he','zhuge'))){
            return 0;
        }
        shas.sort(function(a,b){
            return get.order(b)-get.order(a);
        });
        var card=false;
        if(shas.length){
            for(var i=0;i<shas.length;i++){
                if(shas[i]!=cardx&&lib.filter.filterCard(shas[i],player)){
                    card=shas[i];break;
                }
            }
        }
        if(card){
            if(game.hasPlayer(function(current){
                return (get.attitude(player,current)<0&&
                !current.hasShan()
                &&current.hp+current.countCards('he',{name:['tao','jiu']})>1+(player.storage.jiu||0)
                &&player.canUse(card,current,true,true)&&
                !current.hasSkillTag('filterDamage',null,{
                    player:player,
                    card:card,
                    jiu:true,
                })&&
                get.effect(current,card,player)>0);
            })){
                return 4-get.value(cardx);
            }
        }
        return -1;
    },
                ai:{
                    threaten:1.5,
                    basic:{
                        useful:function(card,i){
                if(_status.event.player.hp>1){
                    if(i==0) return 4;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
                        value:function(card,player,i){
                if(player.hp>1){
                    if(i==0) return 5;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
                    },
                    order:function(){
            return get.order({name:'sha'})+0.2;
        },
                    result:{
                        target:function(player,target){
                if(target&&target.isDying()) return 2;
                if(target&&!target.isPhaseUsing()) return 0;
                if(lib.config.mode=='stone'&&!player.isMin()){
                    if(player.getActCount()+1>=player.actcount) return 0;
                }
                var shas=player.getCards('he','sha');
                if(shas.length>1&&(player.getCardUsable('sha')>1||player.countCards('he','zhuge'))){
                    return 0;
                }
                shas.sort(function(a,b){
                    return get.order(b)-get.order(a);
                })
                var card;
                if(shas.length){
                    for(var i=0;i<shas.length;i++){
                        if(lib.filter.filterCard(shas[i],target)){
                            card=shas[i];break;
                        }
                    }
                }
                else if(player.hasSha()&&player.needsToDiscard()){
                    if(player.countCards('he','hufu')!=1){
                        card={name:'sha'};
                    }
                }
                if(card){
                    if(game.hasPlayer(function(current){
                        return (get.attitude(target,current)<0&&
                            target.canUse(card,current,true,true)&&
                            !current.hasSkillTag('filterDamage',null,{
                                player:player,
                                card:card,
                                jiu:true,
                            })&&
                            get.effect(current,card,target)>0);
                    })){
                        return 1;
                    }
                }
                return 0;
            },
                    },
                    tag:{
                        save:1,
                    },
                },
                trigger:{
                    source:"damageEnd",
                },
                locked:true,
                direct:true,
                filter:function(event,player){
        if(event.name=='chooseToUse') return player.countCards('he',{color:'black'})>0;
        return event.card&&event.card.name=='sha'&&event.getParent(2).jiu==true&&!player.hasSkill('DIY_jiuchi_air');
    },
                content:function(){
        player.logSkill('DIY_jiuchi');
        player.addTempSkill('DIY_jiuchi_air');
    },
                subSkill:{
                    air:{
                        sub:true,
                    },
                },
            },
            "DIY_jiuchi_draw":{
                trigger:{
                    player:"useCard",
                },
                marktext:"酒池",
                intro:{
                    name:"酒池",
                    content:"你已经喝了$斤酒",
                },
                filter:function(event,player){
        if(event.card.name=='jiu') return true;
        return false;
    },
                frequent:true,
                content:function(){
        player.logSkill('DIY_jiuchi');
        player.draw();
        player.addMark("DIY_jiuchi_draw",1,false);
    },
            },
            "DIY_jiuchi_ma":{
                trigger:{
                    player:"useCard",
                },
                filter:function(event,player){
        if(player.hasSkill('jiu')&&(get.subtype(event.card)=='equip3'||get.subtype(event.card)=='equip4')) return true;
        if((player.getEquip(3)||player.getEquip(4))&&event.card.name=="jiu") return true;
        return false;
    },
                frequent:true,
                content:function(){
        player.say(["东汉洛阳于长安联合道路署提醒您:道路千万条，安全第一条；<br>喝酒不骑马，骑马不喝酒。"].randomGet());
    },
            },
            "DIY_roulin":{
                audio:"roulin",
                audioname:["re_dongzhuo","ol_dongzhuo"],
                trigger:{
                    player:"useCardToPlayered",
                    target:"useCardToTargeted",
                },
                forced:true,
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        if(player==event.player){
            return event.target.hasSex('female');
        }
        return event.player.hasSex('female');
    },
                check:function(event,player){
        return player==event.player;
    },
                content:function(){
        var id=(player==trigger.player?trigger.target:player).playerid;
        var map=trigger.getParent().customArgs;
        if(!map[id]) map[id]={};
        if(typeof map[id].shanRequired=='number'){
            map[id].shanRequired++;
        }
        else{
            map[id].shanRequired=2;
        }
    },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg.card.name!='sha'||!arg.target.hasSex('female')||arg.target.countCards('h','shan')>1) return false;
        },
                },
            },
            "DIY_roulin_juedou":{
                audio:"roulin",
                audioname:["re_dongzhuo","ol_dongzhuo"],
                trigger:{
                    player:"useCardToPlayered",
                    target:"useCardToTargeted",
                },
                forced:true,
                filter:function(event,player){
        if(event.card.name!='juedou') return false;
        if(player==event.player){
            return event.target.hasSex('female');
        }
        return event.player.hasSex('female');
    },
                check:function(event,player){
        return player==event.player;
    },
                content:function(){
        var id=(player==trigger.player?trigger.target:player).playerid;
        var map=trigger.getParent().customArgs;
        if(!map[id]) map[id]={};
        if(typeof map[id].shaRequired=='number'){
            map[id].shaRequired++;
        }
        else{
            map[id].shaRequired=2;
        }
    },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg.card.name!='sha'||!arg.target.hasSex('female')||arg.target.countCards('h','shan')>1) return false;
        },
                },
            },
            "DIY_benghuai":{
                audio:"benghuai",
                audioname:["zhugedan","re_dongzhuo","ol_dongzhuo"],
                trigger:{
                    player:"phaseJieshuBegin",
                },
                forced:true,
                check:function(){
        return false;
    },
                filter:function(event,player){
        return !player.isMinHp()&&!player.hasSkill('DIY_jiuchi_air');
    },
                content:function(){
         player.loseHp();
         player.loseMaxHp(true);
         var card=get.cardPile2(function(card){
             return get.color(card,false)=='black';
         });
         if(card) player.gain(card,'gain2');
    },
                ai:{
                    threaten:0.5,
                    neg:true,
                },
            },
            "DIY_baonue":{
                audio:"baonue2",
                unique:true,
                zhuSkill:true,
                trigger:{
                    global:"damageSource",
                },
                filter:function(event,player){
        if(player==event.source||!event.source||event.source.group!='qun') return false;
        return player.hasZhuSkill('DIY_baonue',event.source);
    },
                direct:true,
                content:function(){
        'step 0'
        event.count=trigger.num;
        'step 1'
        event.count--;
        trigger.source.chooseBool('是否对'+get.translation(player)+'发动【暴虐】？').set('choice',get.attitude(trigger.source,player)>0);
        'step 2'
        if(result.bool){
            player.logSkill('DIY_baonue');
            trigger.source.line(player,'green')
            player.gainMaxHp();
            player.recover();
        }
        if(event.count) event.goto(1);
    },
            },
            "Tianlao_equip4":{
                group:["liulongjiayu"],
            },
            "DIY_qizhou":{
                trigger:{
                    player:["equipEnd","loseEnd"],
                },
                forced:true,
                popup:false,
                mod:{
                    canBeDiscarded:function(card){
                        if(get.position(card)=='e'&&['equip1','equip2','equip3','equip4','equip5'].contains(get.subtype(card))) return false;
                    },
                },
                init:function(player){
        if(game.online) return;
        player.removeAdditionalSkill('DIY_qizhou');
        var list=[];
        if(player.countCards('e')>0){
            list.push('reyingzi');
        }
        if(player.countCards('e')>0){
            list.push('mashu');
        }
        if(player.countCards('e')>1){
            list.push('jiang');
        }
        if(player.countCards('e')>1){
            list.push('DIY_qianjie');
        }
        if(player.countCards('e')>2){
            list.push('decadexuanfeng');
        }
        if(player.countCards('e')>2){
            list.push('heji');
        }
        if(player.countCards('e')>3){
            list.push('DIY_pingkou');
        }
        if(player.countCards('e')>3){
            list.push('xindanshou');
        }
        if(player.countCards('e')>4){
            list.push('DIY_fenli');
        }
        if(player.countCards('e')>4){
            list.push('DIY_gongxin');
        }
    },
                content:function(){
        var list=[];
        if(player.countCards('e')>0){
            list.push('reyingzi');
        }
        if(player.countCards('e')>0){
            list.push('mashu');
        }
        if(player.countCards('e')>1){
            list.push('jiang');
        }
        if(player.countCards('e')>1){
            list.push('DIY_qianjie');
        }
        if(player.countCards('e')>2){
            list.push('decadexuanfeng');
        }
        if(player.countCards('e')>2){
            list.push('heji');
        }
        if(player.countCards('e')>3){
            list.push('DIY_pingkou');
        }
        if(player.countCards('e')>3){
            list.push('xindanshou');
        }
        if(player.countCards('e')>4){
            list.push('DIY_fenli');
        }
        if(player.countCards('e')>4){
            list.push('DIY_gongxin');
        }
        if(list.length){
            player.addAdditionalSkill('DIY_qizhou',list);
        }
    },
            },
            "DIY_shanxi":{
                skillAnimation:true,
                animationColor:"wood",
                trigger:{
                    global:"gameDrawAfter",
                },
                frequent:true,
                audio:"shanxi",
                group:"DIY_shanxi_end",
                content:function(){
        "step 0"
        event.num=0;
        event.toequip=[];
        "step 1"
        while(!player.isEmpty(event.num)){
            event.num++;
            if(event.num>5){
                event.finish();
                return;
            }
        }
        var card=get.cardPile2(function(card){
            return get.subtype(card)=='equip'+event.num&&player.canUse(card,player);
        });
        if(card){
            player.chooseUseTarget(card,true,'nopopup');
        }
        event.num++;
        if(event.num<=5) event.redo();
    },
            },
            "DIY_shanxi_phase":{
                audio:"reshanxi",
                enable:"phaseUse",
                usable:1,
                filterCard:{
                    color:"red",
                },
                filterTarget:function(card,player,target){
        return target!=player&&target.countCards('he');
    },
                check:function(card){
        return 6-get.value(card);
    },
                content:function(){
        var max=Math.min(player.hp,target.countCards('he'));
        player.discardPlayerCard(max,target,true);
    },
                ai:{
                    order:8,
                    result:{
                        target:-1,
                    },
                },
            },
            "DIY_shanxi_end":{
                trigger:{
                    player:"phaseEnd",
                },
                frequent:true,
                audio:"shanxi",
                content:function(){
        "step 0"
        event.num=1;
        event.toequip=[];
        "step 1"
        var equip=get.cardPile(function(card){
            var bool1=true;
            for(var i=0;i<event.toequip.length;i++){
                if(get.type(card)=='equip'&&get.subtype(card)==get.subtype(event.toequip[i])) bool1=false;
            }
            return (get.type(card)=='equip'&&!event.toequip.contains(card)&&player.isEmpty(get.subtype(card))&&bool1);
        });
        if(equip) event.toequip.push(equip);
        else event.num=0;
        event.num--;
        "step 2"
        if(event.num>0) event.goto(1);
        "step 3"
        for (var i=0;i<event.toequip.length;i++){
            player.chooseUseTarget(event.toequip[i],true).set('animate',false).set('nopopup',true);
        }
    },
            },
            "DIY_jieyue":{
            },
            "DIY_yizhong":{
                trigger:{
                    target:"shaBefore",
                },
                forced:true,
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
        if(player.getEquip(2)) return false;
        return (event.card.name=='sha'&&get.color(event.card)=='black')
    },
                content:function(){
        trigger.cancel();
    },
                ai:{
                    effect:{
                        target:function(card,player,target){
                if(player==target&&get.subtype(card)=='equip2'){
                    if(get.equipValue(card)<=8) return 0;
                }
                if(target.getEquip(2)) return;
                if(card.name=='sha'&&get.color(card)=='black') return 'zerotarget';
            },
                    },
                },
            },
            "DIY_zhenjun":{
                audio:"decadezhenjun",
                group:["DIY_zhenjun1","DIY_zhenjun2"],
            },
            "DIY_zhenjun1":{
                audio:"decadezhenjun",
                trigger:{
                    player:["phaseZhunbeiBegin","phaseJieshuBegin"],
                },
                filter:function (event,player){
        return game.hasPlayer(function(current){
            return current.countCards('he')>0;
        });
    },
                direct:true,
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt2('decadezhenjun')).ai=function(target){
            return -get.attitude(_status.event.player,target)*(target.countCards('e')+1);
        };
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            event.target=target;
            var num=Math.max(target.countCards('h')-target.hp,1);
            player.logSkill('decadezhenjun',target);
            player.discardPlayerCard(num,target,true);
        }
        'step 2'
        if(result.cards&&result.cards.length){
            for(var i=0;i<result.cards.length;i++){
                if(get.type(result.cards[i])=='equip'){
                    event.finish();
                    return;
                }
            }
            event.num=result.cards.length;
            if(event.num>0){
                var prompt='弃置一张牌，或令'+get.translation(event.target)+'摸一张牌';
                player.chooseToDiscard(prompt,'hej').ai=function(card){
                    return 7-get.value(card);
                }
            }
            else event.finish();
        }
        else event.finish();
        'step 3'
        if(!result.bool){
            event.target.draw(1);
        }
    },
            },
            "DIY_zhenjun2":{
                audio:"xinzhenjun",
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                filter:function(event,player){
        return player.countCards('he')>0;
    },
                content:function(){
        'step 0'
        player.chooseCardTarget({
            filterCard:true,
            filterTarget:true,
            position:'he',
            prompt:get.prompt2('xinzhenjun'),
            ai1:function(card){
                var player=_status.event.player;
                if(card.name=='sha'&&get.color(card)=='red'){
                    for(var i=0;i<game.players.length;i++){
                        var current=game.players[i];
                        if(current!=player&&get.attitude(player,current)>0&&current.hasValueTarget(card)) return 7;
                    }
                    return 0;
                }
                return 7-get.value(card);
            },
            ai2:function(target){
                var player=_status.event.player;
                var card=ui.selected.cards[0];
                var att=get.attitude(player,target);
                if(get.value(card)<0) return -att*2;
                if(target.countCards('h',{name:'sha',color:'red'})||target.hasSkill('wusheng')||target.hasSkill('new_rewusheng')||target.hasSkill('wushen')||(card.name=='sha'&&get.color(card)=='red'&&target.hasValueTarget(card))) return att*2;
                var eff=0;
                game.countPlayer(function(current){
                    if(target!=current&&get.distance(target,current,'attack')>1) return;
                    var eff2=get.damageEffect(current,player,player);
                    if(eff2>eff) eff=eff2;
                });
                if(att>0&&eff>0) eff+=2*att;
                return eff;
            },
        });
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            event.target=target;
            player.logSkill('xinzhenjun',target);
            target.gain(result.cards,player,'giveAuto')
        }
        else event.finish();
        'step 2'
        target.chooseToUse({
            filterCard:function(card){
                return get.name(card)=='sha'&&get.color(card)!='black'&&lib.filter.cardEnabled.apply(this,arguments);
            },
            prompt:'请使用一张不为黑色的【杀】，否则'+get.translation(player)+'可以对你或你攻击范围内的一名其他角色造成1点伤害',
        });
        'step 3'
        if(result.bool){
            var num=1;
            game.countPlayer2(function(current){
                current.getHistory('damage',function(evt){
                    if(evt.getParent(evt.notLink()?4:8)==event) num+=evt.num;
                });
            });
            player.draw(num);
            event.finish();
        }
        else{
            player.chooseTarget('是否对'+get.translation(target)+'或其攻击范围内的一名角色造成1点伤害？',function(card,player,target){
                return target==_status.event.targetx||_status.event.targetx.inRange(target);
            }).set('targetx',event.target).ai=function(target){
                var player=_status.event.player;
                return get.damageEffect(target,player,player)
            };
        }
        'step 4'
        if(result.bool){
            player.line(result.targets);
            result.targets[0].damage('nocard');
        }
    },
            },
            "DIY_yujinjieyue":{
                audio:"rejieyue",
                group:["DIY_jieyue1","jieyue1"],
            },
            "DIY_jieyue1":{
                audio:"rejieyue",
                trigger:{
                    player:"phaseDiscardAfter",
                },
                direct:true,
                filter:function(event,player){
        return player.countCards('he')>0;
    },
                content:function(){
        'step 0'
        player.chooseCardTarget({
            prompt:get.prompt2('rejieyue'),
            filterCard:true,
            position:'he',
            filterTarget:lib.filter.notMe,
            ai1:function(card){
                var player=_status.event.player;
                if(get.name(card)=='du') return 20;
                if(get.position(card)=='e'&&get.value(card)<=0) return 14;
                if(get.position(card)=='h'&&game.hasPlayer(function(current){
                    return current!=player&&get.attitude(player,current)>0&&current.getUseValue(card)>player.getUseValue(card)&&current.getUseValue(card)>player.getUseValue(card);
                })) return 12;
                if(game.hasPlayer(function(current){
                    return current!=player&&get.attitude(player,current)>0;
                })){
                    if(card.name=='wuxie') return 11;
                    if(card.name=='shan'&&player.countCards('h','shan')>1) return 9
                }
                return 6/Math.max(1,get.value(card));
            },
            ai2:function(target){
                var player=_status.event.player;
                var card=ui.selected.cards[0];
                var att=get.attitude(player,target);
                if(card.name=='du') return -6*att;
                if(att>0){
                    if(get.position(card)=='h'&&target.getUseValue(card)>player.getUseValue(card)) return 4*att;
                    if(get.value(card,target)>get.value(card,player)) return 2*att;
                    return 1.2*att;
                }
                return -att*Math.min(4,target.countCards('he'))/4;
            },
        });
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            event.target=target;
            player.logSkill('rejieyue',target);
            target.gain(result.cards,player,'giveAuto');
        }
        else event.finish();
        'step 2'
        var num=0;
        if(target.countCards('h')) num++;
        if(target.countCards('e')) num++;
        if(num>0){
            var next=target.chooseCard('he',num,'选择保留每个区域的各一张牌，然后弃置其余的牌。或点取消，令'+get.translation(player)+'摸三张牌',function(card){
                for(var i=0;i<ui.selected.cards.length;i++){
                    if(get.position(ui.selected.cards[i])==get.position(card)) return false;
                }
                return true;
            });
            next.set('complexCard',true);
            next.set('goon',get.attitude(target,player)>=0);
            next.set('maxNum',num);
            next.set('ai',function(card){
                if(_status.event.goon) return -1;
                var num=_status.event.maxNum;
                if(ui.selected.cards.length>=num-1){
                    var val=get.value(player.getCards('he',function(cardx){
                        return cardx!=card&&!ui.selected.cards.contains(cardx);
                    }));
                    if(val>=14) return 0;
                }
                return get.value(card);
            });
        }
        else event._result={bool:false};
        'step 3'
        if(!result.bool) player.draw(3);
        else {
            var cards=target.getCards('he');
            cards.removeArray(result.cards);
            if(cards.length) target.discard(cards);
        }
    },
                ai:{
                    threaten:1.3,
                    expose:0.2,
                },
            },
            "DIY_jueyong":{
                audio:"jueyong",
                trigger:{
                    target:"useCardToTarget",
                },
                forced:true,
                filter:function(event,player){
        return event.card.name!='jiu'&&event.card.name!='tao'&&event.targets.length==1&&event.getParent(2).name!='DIY_jueyong_timeout'&&event.getParent(2).name!='oldcihuai';
    },
                content:function(){
        trigger.targets.remove(player);
        trigger.getParent().triggeredTargets2.remove(player);
        trigger.untrigger();
        var card=trigger.cards[0];
        player.addToExpansion(card,'gain2').gaintag.add('DIY_jueyong');
        if(!player.storage.DIY_jueyong) player.storage.DIY_jueyong=[[],[]];
        player.storage.DIY_jueyong[0].push(card);
        player.storage.DIY_jueyong[1].push(trigger.player);
        game.delay();
    },
                onremove:function(player,skill){
        var cards=player.getExpansions(skill);
        if(cards.length) player.loseToDiscardpile(cards);
        delete player.storage[skill];
    },
                intro:{
                    markcount:function(storage){
            return storage[0].length;
        },
                    mark:function(dialog,storage,player){
            dialog.addAuto(storage[0]);
            dialog.addText(get.translation(storage[1]));
        },
                    onunmark:function(storage,player){
            player.storage.DIY_jueyong=[[],[]];
        },
                },
                ai:{
                    reverseEquip:true,
                    effect:{
                        target:function(card,player,target,current){
                if(get.type(card)=='equip'&&!get.tag(card,'gifts')&&target.storage.jueyong&&target.storage.jueyong[1].length){
                    var result1=get.equipResult(player,target,card.name),subtype=get.subtype(card);
                    for(var i of target.storage.jueyong[0]){
                        if(get.subtype(i,false)==subtype&&get.equipResult(target,target,i.name)>=result1) return 'zerotarget';
                    }
                }
            },
                    },
                },
                group:"DIY_jueyong_timeout",
                subSkill:{
                    timeout:{
                        audio:"jueyong",
                        trigger:{
                            player:"phaseJieshuBegin",
                        },
                        forced:true,
                        filter:function(event,player){
                return player.storage.DIY_jueyong&&player.storage.DIY_jueyong[0].length>0;//=Math.max(1,player.getDamagedHp());
            },
                        content:function(){
                var list=player.storage.DIY_jueyong,card=list[0].shift(),source=list[1].shift();
                if(player.getExpansions('DIY_jueyong').contains(card)){
                    if(source&&source.isIn()&&player.canUse(card,source,false)){
                        if(player!=source&&player.hp>1) player.loseHp();
                        if(player!=source&&player.hp<2) player.loseMaxHp();
                        if(player==source){
                            if(player.isDamaged()){
                                player.recover();
                            }
                            else{
                                player.gainMaxHp();
                            }
                        }
                        player.useCard(card,source,false);
                    }
                    else{
                        player.loseToDiscardpile(card);
                        if(player.isDamaged()){
                            player.recover();
                        }
                        else{
                            player.gainMaxHp();
                        }
                    }
                }
                if(list[0].length) event.redo();
            },
                        sub:true,
                    },
                },
            },
            "DIY_qiaobian":{
                audio:"ext:天牢令/image/audio:6",
                group:["DIY_qiaobian1","DIY_qiaobian2","DIY_qiaobian3","DIY_qiaobian4","DIY_qiaobian5","DIY_qiaobian6","DIY_qiaobian7","DIY_qiaobian8","DIY_qiaobian9"],
                preHidden:true,
                ai:{
                    threaten:3,
                },
            },
            "DIY_qiaobian1":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseJudgeBefore",
                },
                direct:true,
                filter:function(event,player){
        return event.player.countCards('j')>0&&player.countCards('h')>0;
    },
                content:function(){
        "step 0"
        var save=true;
        var next=player.chooseToDiscard(get.prompt('qiaobian'),'弃置一张手牌并跳过'+get.translation(_status.currentPhase)+'的判定阶段');
        next.logSkill=['DIY_qiaobian1',_status.currentPhase];
        next.ai=function(card){
            if(save){
                return 7-get.value(card);
            }
            return 0;
        }
        "step 1"
        if(result.bool){
            trigger.cancel();
        }
    },
            },
            "DIY_qiaobian2":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                direct:true,
                filter:function(event,player){
        return !event.numFixed&&player.countCards('h')>0;
    },
                content:function(){
        "step 0"
        var save=false;
        if(_status.currentPhase==player){
            save=true;
        }
        var next=player.chooseToDiscard(get.prompt('qiaobian'),'弃置一张手牌并跳过'+get.translation(_status.currentPhase)+'的摸牌阶段');
        next.logSkill=['DIY_qiaobian2',_status.currentPhase];
        next.ai=function(card){
            if(save){
                return 7-get.value(card);
            }
            return 0;
        }
        "step 1"
        if(result.bool){
            trigger.cancel();
            player.chooseTarget([1,2],'获得至多两名角色各一张牌',function(card,player,target){
                return target!=player&&target.countCards('he');
            }).set('ai',function(target){
                return 1-get.attitude(_status.event.player,target);
            });
        }
        'step 2'
        if(result.bool){
            result.targets.sortBySeat();
            player.line(result.targets,'green');
            event.targets=result.targets;
            num=2-event.targets.length;
            if(!event.targets.length) event.finish();
        }
        else{
            event.finish();
        }
        'step 3'
        player.gainMultiple(event.targets,'he');
        player.draw(num);
        "step 4"
        game.delay();
    },
            },
            "DIY_qiaobian3":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseUseBefore",
                },
                direct:true,
                filter:function(event,player){
        return event.player.countCards('h')>0&&player.countCards('h')>0;
    },
                content:function(){
        "step 0"
        var save=false;
        if(_status.currentPhase==player&&player.canMoveCard(true)){
            save=true;
        }
        var next=player.chooseToDiscard(get.prompt('qiaobian'),'弃置一张手牌并跳过'+get.translation(_status.currentPhase)+'的出牌阶段');
        next.logSkill=['DIY_qiaobian3',_status.currentPhase];
        next.ai=function(card){
            if(save){
                return 7-get.value(card);
            }
            return 0;
        }
        "step 1"
        if(result.bool){
            trigger.cancel();
            player.moveCard();
        }
    },
            },
            "DIY_qiaobian4":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseDiscardBefore",
                },
                direct:true,
                filter:function(event,player){
        return event.player.needsToDiscard()&&player.countCards('h')>0;
    },
                content:function(){
        "step 0"
        var save=true;
        var next=player.chooseToDiscard(get.prompt('qiaobian'),'弃置一张手牌并跳过'+get.translation(_status.currentPhase)+'的弃牌阶段');
        next.logSkill=['DIY_qiaobian4',_status.currentPhase];
        next.ai=function(card){
            if(save){
                return 7-get.value(card);
            }
            return 0;
        }
        "step 1"
        if(result.bool){
            trigger.cancel();
        }
    },
            },
            "DIY_qiaobian5":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseEnd",
                },
                direct:true,
                filter:function(event,player){
        return event.player.getHistory('skipped').length>0;
    },
                content:function(){
        'step 0'
        var num=event.player.getHistory('skipped').length-1;
        if(_status.currentPhase==player) num++;
        player.draw(num);
        player.logSkill('DIY_qiaobian5');
    },
                ai:{
                    effect:{
                        target:function(card){
                if(card.name=='lebu'||card.name=='bingliang') return 0.5;
            },
                    },
                },
            },
            "DIY_qiaobian6":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    target:"useCardToTarget",
                },
                filter:function(event,player){
        return _status.currentPhase.player!=player&&event.player!=player&&player.countCards('h')>0;
    },
                direct:true,
                content:function(){
        "step 0"
        var next=player.chooseToDiscard('h');
        event.target=trigger.player;
        prompt='令'+get.translation(trigger.card)+'对你无效';
        next.set('goon',-get.effect(player,trigger.card,trigger.player,player));
        next.set('prompt',get.prompt('DIY_qiaobian',event.target));
        next.set('prompt2',prompt)
        next.set('ai',function(card){
            return _status.event.goon-get.value(card);
        });
        next.logSkill=['DIY_qiaobian6',event.target];
        "step 1"
        if(result.bool){
            trigger.targets.length=0;
            trigger.getParent().triggeredTargets2.length=0;
            trigger.cancel();
            player.judge(function(card){
               if(get.color(card)=="red") return 2;
               return 0;
             }).judge2=function(result){
               return result.bool?true:false;
             };
        }
        "step 2"
        if(result.bool){
            player.gain(trigger.cards.filterInD(),'log','gain2');
        }
    },
            },
            "DIY_qiaobian7":{
                audio:"DIY_qiaobian",
                trigger:{
                    global:"judge",
                },
                check:function(event,player){
        if(event.player==player&&event.judge(player.judging[0])<0) return true;
        return (get.attitude(player,event.player)>0&&event.judge(event.player.judging[0])<0)&&(get.attitude(player,event.player)<0&&event.judge(event.player.judging[0])>0);
    },
                prompt:"巧变:是否亮出牌堆顶的一张牌代替该判定牌？",
                content:function(){
                    "step 0"
        var card=get.cards()[0];
        event.card=card;
        game.cardsGotoOrdering(card).relatedEvent=trigger;
        "step 1"
        player.$throw(card);
        if(trigger.player.judging[0].clone){
            trigger.player.judging[0].clone.classList.remove('thrownhighlight');
            game.broadcast(function(card){
                if(card.clone){
                    card.clone.classList.remove('thrownhighlight');
                }
            },trigger.player.judging[0]);
            game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
        }
        game.cardsDiscard(trigger.player.judging[0]);
        trigger.player.judging[0]=card;
        game.log(trigger.player,'的判定牌改为',card);
        game.delay(2);
    },
            },
            "DIY_yicong":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseBegin",
                },
                forced:true,
                content:function (){},
                mod:{
                    globalFrom:function(from,to,distance){
            var num=_status.currentPhase.getSeatNum();
            if(num%2==1) return distance-1;
        },
                    globalTo:function(from,to,distance){
            var num=_status.currentPhase.getSeatNum();
            if(num%2!=1) return distance+1;
        },
                },
                ai:{
                    threaten:0.8,
                },
            },
            "DIY_qiaomeng":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardToPlayered",
                },
                filter:function(event,player){
        return event.card&&(event.card.name=='sha'||event.card.name=='juedou')&&event.player.countDiscardableCards(player,'hej');
    },
                preHidden:true,
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                logTarget:"target",
                content:function(){
                    player.discardPlayerCard(trigger.target,get.prompt('DIY_qiaomeng',trigger.target),true).set('ai',function(button){
                        if(!_status.event.att) return 0;
                        if(get.position(button.link)=='e'){
                            if(get.subtype(button.link)=='equip2') return 2*get.value(button.link);
                            return get.value(button.link);
                        }
                        return 1;
                    }).set('att',get.attitude(player,trigger.target)<=0);
                    player.addTempSkill("DIY_qiaomeng_seat",'useCardAfter');
                },
            },
            "DIY_qiaomeng_seat":{
                trigger:{
                    source:"damageSource",
                },
                prompt:"趫猛：是否与其交换座次？",
                filter:function(event,player){
        return event.card&&(event.card.name=='sha'||event.card.name=='juedou');
    },
                content:function(){
        player.logSkill('DIY_qiaomeng'),
        game.broadcastAll(function(target1,target2){
            game.swapSeat(target1,target2);
        },player,trigger.player);
    },
            },
            "DIY_luanwu":{
                audio:"luanwu",
                enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){
        return target!=player&&target.countCards('h');
    },
                content:function(){
        var hs=target.getCards('h');
        while(hs.length){
            var chosen=hs.randomRemove();
            if(target.hasUseTarget(chosen)&&!get.info(chosen).multitarget){
                var list=game.filterPlayer(function(current){
                    return lib.filter.targetEnabled2(chosen,target,current);
                });
                if(list.length){
                    target.useCard(chosen,list.randomGet());
                    event.redo();
                    break;
                }
            }
        }
    },
                ai:{
                    order:10,
                    result:{
                        target:function(player,target){
                if(!target.countCards('h')) return 0;
                return -1;
            },
                    },
                },
            },
            "DIY_weimu":{
                audio:"reweimu",
                mod:{
                    targetEnabled:function(card){
            if(get.type2(card)=='trick'&&get.color(card)=='black') return false;
        },
                },
                trigger:{
                    target:"useCardToTarget",
                },
                forced:true,
                filter:function(event,player){
        return player==_status.currentPhase&&event.player!=player;
    },
                content:function(){
        trigger.targets.remove(player);
        trigger.getParent().triggeredTargets2.remove(player);
        trigger.untrigger();
        trigger.cancel();
    },
                ai:{
                    effect:{
                        target:function(card,player,target){
                if(target==_status.currentPhase&&get.tag(card,'damage')) return 'zerotarget';
            },
                    },
                },
            },
            "DIY_zhenyi":{
                group:["DIY_zhenyi_spade","DIY_zhenyi_club","DIY_zhenyi_heart"],
                trigger:{
                    player:"damageEnd",
                },
                audio:"xinfu_zhenyi",
                filter:function (event,player){
        //if(!event.nature) return false;
        return true;
    },
                "prompt2":"从牌堆中获得每种类型的牌各一张。",
                content:function (){
        'step 0'
        event.num=0;
        event.togain=[];
        'step 1'
        var card=get.cardPile(function(card){
            for(var i=0;i<event.togain.length;i++){
                if(get.type(card,'trick')==get.type(event.togain[i],'trick')) return false;
            }
            return true;
        });
        if(card){
            event.togain.push(card);
            event.num++;
            if(event.num<3) event.redo();
        }
        'step 2'
        if(event.togain.length){
            player.gain(event.togain,'gain2');
        }
    },
            },
            "DIY_dianhua":{
                trigger:{
                    player:["phaseZhunbeiBegin","phaseJieshuBegin"],
                },
                frequent:true,
                audio:"xinfu_dianhua",
                filter:function (event,player){
        for(var i=0;i<lib.suit.length;i++){
            if(player.hasMark('DIY_falu_'+lib.suit[i])) return true;
        }
        return false;
    },
                content:function (){
        'step 0'
        var num=0;
        for(var i=0;i<lib.suit.length;i++){
            if(player.hasMark('DIY_falu_'+lib.suit[i])) num++;
        }
        var cards=get.cards(num);
        game.cardsGotoOrdering(cards);
        var next=player.chooseToMove();
        next.set('list',[
            ['牌堆顶',cards],
            ['牌堆底'],
        ]);
        next.set('prompt','点化：点击将牌移动到牌堆顶或牌堆底');
        next.processAI=function(list){
            var cards=list[0][1],player=_status.event.player;
            var target=(_status.event.getTrigger().name=='phaseZhunbei')?player:player.next;
            var att=get.sgn(get.attitude(player,target));
            var top=[];
            var judges=target.getCards('j');
            var stopped=false;
            if(player!=target||!target.hasWuxie()){
                for(var i=0;i<judges.length;i++){
                    var judge=get.judge(judges[i]);
                    cards.sort(function(a,b){
                        return (judge(b)-judge(a))*att;
                    });
                    if(judge(cards[0])*att<0){
                        stopped=true;break;
                    }
                    else{
                        top.unshift(cards.shift());
                    }
                }
            }
            var bottom;
            if(!stopped){
                cards.sort(function(a,b){
                    return (get.value(b,player)-get.value(a,player))*att;
                });
                while(cards.length){
                    if((get.value(cards[0],player)<=5)==(att>0)) break;
                    top.unshift(cards.shift());
                }
            }
            bottom=cards;
            return [top,bottom];
        }
        "step 1"
        var top=result.moved[0];
        var bottom=result.moved[1];
        top.reverse();
        for(var i=0;i<top.length;i++){
            ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
        }
        for(i=0;i<bottom.length;i++){
            ui.cardPile.appendChild(bottom[i]);
        }
        player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(bottom.length)+'下');
        game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
        game.updateRoundNumber();
        game.delayx();
    },
                ai:{
                    threaten:2.2,
                },
            },
            "DIY_falu":{
                subSkill:{
                    spade:{
                        marktext:"♠︎️",
                        intro:{
                            name:"紫薇",
                            content:"mark",
                        },
                        sub:true,
                    },
                    heart:{
                        marktext:"♥︎️",
                        intro:{
                            name:"玉清",
                            content:"mark",
                        },
                        sub:true,
                    },
                    club:{
                        marktext:"♣︎️",
                        intro:{
                            name:"后土",
                            content:"mark",
                        },
                        sub:true,
                    },
                    diamond:{
                        marktext:"♦︎",
                        intro:{
                            name:"勾陈",
                            content:"mark",
                        },
                        sub:true,
                    },
                },
                forced:true,
                audio:"xinfu_falu",
                trigger:{
                    player:["loseAfter","enterGame"],
                    global:"phaseBefore",
                },
                filter:function (event,player){
        if(event.name!='lose') return (event.name!='phase'||game.phaseNumber==0);
        if(event.type!='discard') return false;
        for(var i=0;i<event.cards2.length;i++){
            if(!player.hasMark('DIY_falu_'+get.suit(event.cards2[i]))) return true;
        }
        return false;
    },
                content:function (){
        if(trigger.name!='lose'){
            for(var i=0;i<lib.suit.length;i++){
                if(!player.hasMark('DIY_falu_'+lib.suit[i])) player.addMark('DIY_falu_'+lib.suit[i]);
            }
            return;
        }
        for(var i=0;i<trigger.cards2.length;i++){
            var suit=get.suit(trigger.cards2[i]);
            if(!player.hasMark('DIY_falu_'+suit)) player.addMark('DIY_falu_'+suit);
        }
    },
                ai:{
                    threaten:1.4,
                },
            },
            "DIY_zhenyi_spade":{
                trigger:{
                    global:"judge",
                },
                direct:true,
                content:function(){
        "step 0"
        var str=get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，是否发动【真仪】修改判定结果？';
        player.chooseControl('spade','heart','diamond','club','cancel2').set('prompt',str).set('ai',function(){
            //return '取消';
            var judging=_status.event.judging;
            var trigger=_status.event.getTrigger();
            var res1=trigger.judge(judging);
            var list=lib.suit.slice(0);
            var attitude=get.attitude(player,trigger.player);
            if(attitude==0) return 0;
            var getj=function(suit){
                return trigger.judge({
                    name:get.name(judging),
                    nature:get.nature(judging),
                    suit:suit,
                    number:5,
                })
            };
            list.sort(function(a,b){
                return (getj(b)-getj(a))*get.sgn(attitude);
            });
            if((getj(list[0])-res1)*attitude>0) return list[0];
            return 'cancel2';
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.control!='cancel2'){
            player.addExpose(0.25);
            player.logSkill('xinfu_zhenyi',trigger.player);
            //player.line(trigger.player);
            player.popup(result.control);
            game.log(player,'将判定结果改为了','#y'+get.translation(result.control+2)+5);
            trigger.fixedResult={
                suit:result.control,
                color:get.color({suit:result.control}),
                number:5,
            };
        }
    },
                ai:{
                    rejudge:true,
                    tag:{
                        rejudge:1,
                    },
                    expose:0.5,
                },
            },
            "DIY_zhenyi_club":{
                audio:"xinfu_zhenyi",
                enable:"chooseToUse",
                viewAsFilter:function(player){
        if(player==_status.currentPhase) return false;
        return player.countCards('hs')>0;
    },
                filterCard:true,
                position:"hs",
                viewAs:{
                    name:"tao",
                },
                prompt:"将一张手牌当桃使用",
                check:function(card){return 15-get.value(card)},
                ai:{
                    basic:{
                        order:function(card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
                        useful:[6.5,4,3,2],
                        value:[6.5,4,3,2],
                    },
                    result:{
                        target:2,
                        "target_use":function(player,target){
                // if(player==target&&player.hp<=0) return 2;
                if(player.hasSkillTag('nokeep',true,null,true)) return 2;
                var nd=player.needsToDiscard();
                var keep=false;
                if(nd<=0){
                    keep=true;
                }
                else if(nd==1&&target.hp>=2&&target.countCards('h','tao')<=1){
                    keep=true;
                }
                var mode=get.mode();
                if(target.hp>=2&&keep&&target.hasFriend()){
                    if(target.hp>2||nd==0) return 0;
                    if(target.hp==2){
                        if(game.hasPlayer(function(current){
                            if(target!=current&&get.attitude(target,current)>=3){
                                if(current.hp<=1) return true;
                                if((mode=='identity'||mode=='versus'||mode=='chess')&&current.identity=='zhu'&&current.hp<=2) return true;
                            }
                        })){
                            return 0;
                        }
                    }
                }
                if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                var att=get.attitude(player,target);
                if(att<3&&att>=0&&player!=target) return 0;
                var tri=_status.event.getTrigger();
                if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                        var num=game.countPlayer(function(current){
                            if(current.identity=='fan'){
                                return current.countCards('h','tao');
                            }
                        });
                        if(num>1&&player==target) return 2;
                        return 0;
                    }
                }
                if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                        return 0;
                    }
                }
                if(mode=='stone'&&target.isMin()&&
                player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                tri.source!=target.getEnemy()){
                    return 0;
                }
                return 2;
            },
                    },
                    tag:{
                        recover:1,
                        save:1,
                    },
                },
            },
            "DIY_zhenyi_heart":{
                trigger:{
                    source:"damageBegin1",
                },
                audio:"xinfu_zhenyi",
                check:function (event,player){
        if(get.attitude(player,event.player)>=0) return false;
        if(event.player.hasSkillTag('filterDamage',null,{
            player:player,
            card:event.card,
        })) return false;
        return true;
        //return player.hasMark('xinfu_falu_spade')||get.color(ui.cardPile.firstChild)=='black';
    },
                "prompt2":function(event){
        return '令对'+get.translation(event.player)+'即将造成的伤害+1。';
    },
                logTarget:"player",
                content:function(){
        trigger.num++;
    },
            },
            "DIY_kaikang":{
                audio:"kaikang",
                trigger:{
                    global:"useCardToTargeted",
                },
                filter:function(event,player){
        if(!get.tag(event.card,'damage')) return false;
        if(!player.inRange(event.player)&&!event.target.inRange(event.player)) return false;
        return event.target.isIn();
    },
                check:function(event,player){
        return get.attitude(player,event.target)>=0;
    },
                logTarget:"target",
                content:function(){
        "step 0"
        player.draw();
        if(trigger.target!=player){
            player.chooseCard(true,'he','交给'+get.translation(trigger.target)+'一张牌').set('ai',function(card){
                if(get.position(card)=='e') return -1;
                if(trigger.card.name=="sha"&&card.name=='shan') return 1;
                if(trigger.card.name=="nanman"&&card.name=='sha') return 1;
                if(trigger.card.name=="wanjian"&&card.name=='shan') return 1;
                if(get.type(card)=='equip') return 0.5;
                return 0;
            });
        }
        else{
            player.chooseToUse('慷忾：你可以使用一张牌').logSkill='DIY_kaikang';
            event.finish();
        }
        "step 1"
        trigger.target.gain(result.cards,player,'give');
        game.delay();
        event.card=result.cards[0];
        "step 2"
        if(trigger.target.getCards('h').contains(card)){
            trigger.target.chooseUseTarget(card);
        }
    },
                ai:{
                    threaten:1.1,
                },
            },
            "DIY_shuangxiong":{
                audio:"ext:天牢令/image/audio:2",
                group:"DIY_shuangxiong2",
                enable:"chooseToUse",
                prompt:"将一张牌当作【决斗】使用",
                viewAs:{
                    name:"juedou",
                },
                position:"he",
                onremove:true,
                filterCard:true,
                check:function(card){
        return 8-get.value(card);
    },
                filter:function(event,player){
        return player.isPhaseUsing()&&!player.hasSkill('DIY_shuangxiong_used');
    },
                subSkill:{
                    used:{
                        sub:true,
                    },
                },
                ai:{
                    basic:{
                        order:10,
                        useful:1,
                        value:5.5,
                    },
                    wuxie:function(target,card,player,viewer){
            if(player==game.me&&get.attitude(viewer,player)>0){
                return 0;
            }
        },
                    result:{
                        target:-1.5,
                        player:function(player,target,card){
                if(player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                },true)){
                    return 0;
                }
                if(get.damageEffect(target,player,target)>0&&get.attitude(player,target)>0&&get.attitude(target,player)>0){
                    return 0;
                }
                var hs1=target.getCards('h','sha');
                var hs2=player.getCards('h','sha');
                if(hs1.length>hs2.length+1){
                    return -2;
                }
                var hsx=target.getCards('h');
                if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
                    return -2;
                }
                if(hsx.length>3&&hs2.length==0){
                    return -2;
                }
                if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
                    return -2;
                }
                return -0.5;
            },
                    },
                    tag:{
                        respond:2,
                        respondSha:2,
                        damage:1,
                    },
                },
            },
            "DIY_shuangxiong2":{
                trigger:{
                    player:"useCardAfter",
                },
                direct:true,
                filter:function (evt,player){
        return ['juedou'].contains(evt.card.name)&&evt.skill=='DIY_shuangxiong';
    },
                content:function (){
        "step 0"
        player.chooseControl('选项一','选项二').set('choiceList',[
            '摸两张牌',
            '重置“双雄”',
        ]).set('ai',function(){
            if(player.countCards('h')+2>player.hp) return '选项二';
            return '选项一';
        });
        "step 1"
        if(result.control=='选项一'){
            player.draw(2);
            player.addTempSkill('DIY_shuangxiong_used');
        }
        else{
            player.removeSkill('DIY_shuangxiong_used');
        }
    },
            },
            "DIY_zhanjue":{
                audio:"zhanjue",
                group:["DIY_zhanjue2","DIY_zhanjue3"],
                enable:"chooseToUse",
                prompt:"将一张两张花色相同的手牌当做【决斗】使用",
                viewAs:{
                    name:"juedou",
                },
                position:"hes",
                filterCard:function(card,player){
        if(ui.selected.cards.length){
            return get.suit(card)==get.suit(ui.selected.cards[0]);
        }
        var cards=player.getCards('hes');
        for(var i=0;i<cards.length;i++){
            if(card!=cards[i]){
                if(get.suit(card)==get.suit(cards[i])) return true;
            }
        }
        return false;
    },
                selectCard:2,
                check:function(card){
        return 8-get.value(card);
    },
                ai:{
                    basic:{
                        order:10,
                        useful:1,
                        value:5.5,
                    },
                    wuxie:function(target,card,player,viewer){
            if(player==game.me&&get.attitude(viewer,player)>0){
                return 0;
            }
        },
                    result:{
                        target:-1.5,
                        player:function(player,target,card){
                if(player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                },true)){
                    return 0;
                }
                if(get.damageEffect(target,player,target)>0&&get.attitude(player,target)>0&&get.attitude(target,player)>0){
                    return 0;
                }
                var hs1=target.getCards('h','sha');
                var hs2=player.getCards('h','sha');
                if(hs1.length>hs2.length+1){
                    return -2;
                }
                var hsx=target.getCards('h');
                if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
                    return -2;
                }
                if(hsx.length>3&&hs2.length==0){
                    return -2;
                }
                if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
                    return -2;
                }
                return -0.5;
            },
                    },
                    tag:{
                        respond:2,
                        respondSha:2,
                        damage:1,
                    },
                },
            },
            "DIY_zhanjue2":{
                trigger:{
                    player:"damage",
                    source:"damage",
                },
                direct:true,
                filter:function(event,player){
        return event.card&&event.card.name=="juedou";
    },
                content:function(){
        player.logSkill("DIY_zhanjue");
        var list=[];
        list.add(player);
        list.add(trigger.source);
        game.asyncDraw(list);
    },
            },
            "DIY_zhanjue3":{
                audio:"zhanjue",
                trigger:{
                    target:"useCardToTarget",
                },
                forced:true,
                filter:function(event,player){
        if(event.getParent(2).name=='DIY_zhanjue3') return false;
        if(event.card.name=='juedou') return false;
        return event.card.name=='sha'||get.type(event.card)=='trick'&&get.tag(event.card,'damage')>0;
    },
                content:function(){
        player.useCard({name:"juedou"},trigger.player);
        game.delay();
    },
            },
            "DIY_aocai":{
                audio:"ext:天牢令/image/audio:2",
                audioname:["gz_zhugeke"],
                enable:["chooseToUse","chooseToRespond"],
                hiddenCard:function(player,name){
        if(get.type(name)=='basic'&&lib.inpile.contains(name)) return true;
    },
                filter:function(event,player){
        if(event.responded||event.aocai) return false;
        for(var i of lib.inpile){
            if(get.type(i)=='basic'&&event.filterCard({name:i},player,event)) return true;
        }
        return false;
    },
                delay:false,
                content:function(){
        'step 0'
        var evt=event.getParent(2);
        evt.set('aocai',true);
        var cards=[];
        for(var i=0;i<4;i++){
            var card=get.cardPile(function(card){
                return get.type(card)=='basic'&&!cards.contains(card);
            })
            if(card){
                cards.push(card);
            }
        }
        var aozhan=player.hasSkill('aozhan');
        player.chooseButton(['傲才：选择要'+(evt.name=='chooseToUse'?'使用':'打出')+'的牌',cards]).set('filterButton',function(button){
            return _status.event.cards.contains(button.link)&&get.type(button.link)=='basic';
        }).set('cards',cards.filter(function(card){
            if(aozhan&&card.name=='tao'){
                return evt.filterCard({
                    name:'sha',isCard:true,cards:[card],
                },evt.player,evt)||evt.filterCard({
                    name:'shan',isCard:true,cards:[card],
                },evt.player,evt);
            }
            return evt.filterCard(card,evt.player,evt);
        })).set('ai',function(button){
            var evt=_status.event.getParent(3);
            if(evt&&evt.ai){
                var tmp=_status.event;
                _status.event=evt;
                var result=(evt.ai||event.ai1)(button.link,_status.event.player,evt);
                _status.event=tmp;
                return result;
            }
            return 1;
        });
        'step 1'
        var evt=event.getParent(2);
        if(result.bool&&result.links&&result.links.length){
            var name=result.links[0].name,aozhan=(player.hasSkill('aozhan')&&name=='tao');
            if(aozhan){
                name=evt.filterCard({
                    name:'sha',isCard:true,cards:[card],
                },evt.player,evt)?'sha':'shan';
            }
            if(evt.name=='chooseToUse'){
                game.broadcastAll(function(result,name){
                    lib.skill.aocai_backup.viewAs={name:name,cards:[result],isCard:true};
                    lib.skill.aocai_backup.prompt='选择'+get.translation(result)+'的目标';
                },result.links[0],name);
                evt.set('_backupevent','aocai_backup');
                evt.backup('aocai_backup');
            }
            else{
                delete evt.result.skill;
                delete evt.result.used;
                evt.result.card=get.autoViewAs(result.links[0]);
                if(aozhan) evt.result.card.name=name;
                evt.result.cards=[result.links[0]];
                evt.redo();
                return;
            }
        }
        evt.goto(0);
    },
                ai:{
                    effect:{
                        target:function(card,player,target,effect){
                if(get.tag(card,'respondShan')) return 0.7;
                if(get.tag(card,'respondSha')) return 0.7;
            },
                    },
                    order:11,
                    respondShan:true,
                    respondSha:true,
                    result:{
                        player:function(player){
                if(_status.event.dying) return get.attitude(player,_status.event.dying);
                return 1;
            },
                    },
                },
            },
            "DIY_duwu":{
                audio:"ext:天牢令/image/audio:8",
                enable:"phaseUse",
                filter:function(event,player){
        return player.countCards('he')>0&&game.hasPlayer(function(current){
            return current.hp>0&&player.inRange(current);
        });
    },
                filterCard:true,
                position:"he",
                selectCard:1,
                complexSelect:true,
                complexCard:true,
                filterTarget:function(card,player,target){
        return target!=player&&target.hp>0&&player.inRange(target);
    },
                check:function(card){
        return 8-get.value(card);
    },
                content:function(){
        var num=[1,2,0].randomGet();
        if(get.isLuckyStar(player)) num=2;
        target.damage(num);
        if(target.isAlive) player.loseHp(2-num);
        
    },
                ai:{
                    damage:true,
                    order:6,
                    result:{
                        player:function(player){
                if(get.isLuckyStar(player)) return 1;
                if(player.hp<2) return -1;
            },
                        target:function(player,target){
                return get.damageEffect(target,player);
            },
                    },
                    threaten:1.5,
                    expose:0.3,
                },
            },
            "DIY_xianzhen":{
                audio:"ext:天牢令/image/audio:4",
                inherit:"xianzhen",
                enable:"phaseUse",
                filterTarget:function(card,player,target){
        return target!=player;
    },
                filter:function(event,player){
        return event.player&&!event.player.hasSkill('DIY_xianzhen3');
    },
                content:function(){
        player.loseHp();
        player.storage[event.name]=target;
        player.addTempSkill("DIY_xianzhen2");
        target.addTempSkill("DIY_xianzhen3");
    },
                ai:{
                    order:function(name,player){
            var cards=player.getCards('h');
            if(player.countCards('h','sha')==0){
                return 1;
            }
            if(player.hp==1&&player.countCards('h','tao')==0){
                return -2;
            }
            for(var i=0;i<cards.length;i++){
                if(cards[i].name!='sha'&&cards[i].number>11&&get.value(cards[i])<7){
                    return 9;
                }
            }
            return get.order({name:'sha'})-1;
        },
                    result:{
                        player:function(player){
                if(player.countCards('h','sha')>0) return 0;
                var num=player.countCards('h');
                if(num>player.hp) return 0;
                if(num==1) return -2;
                if(num==2) return -1;
                return -0.7;
            },
                        target:function(player,target){
                var num=target.countCards('h');
                if(num==1) return -1;
                if(num==2) return -0.7;
                return -0.5
            },
                    },
                    threaten:1.3,
                },
                usable:1,
            },
            "DIY_xianzhen2":{
                charlotte:true,
                mod:{
                    targetInRange:function(card,player,target){
            if(target==player.storage.DIY_xianzhen) return true;
        },
                    cardUsableTarget:function(card,player,target){
            if(target==player.storage.DIY_xianzhen) return true;
        },
                    playerEnabled:function(card,player,target){
            if(target!=player.storage.DIY_xianzhen) return false;
        },
                },
                ai:{
                    unequip:true,
                    skillTagFilter:function(player,tag,arg){
            if(arg.target!=player.storage.DIY_xianzhen) return false;
        },
                },
            },
            "DIY_xianzhen3":{
                trigger:{
                    player:"damageBegin",
                },
                filter:function(event){
        return event.source&&event.source.hasSkill('DIY_xianzhen');
    },
                silent:true,
                popup:false,
                forced:true,
                content:function(){
        trigger._triggered=null;
    },
                mark:true,
                mod:{
                    cardEnabled:function(){
            return false;
        },
                    cardRespondable:function(){
            return false;
        },
                    cardSavable:function(){
            return false;
        },
                },
                intro:{
                    content:"不能使用或打出牌",
                },
            },
            "DIY_yizan":{
                intro:{
                    content:"已发动过#次",
                },
                audio:"ext:天牢令/image/audio:7",
                enable:["chooseToUse","chooseToRespond"],
                hiddenCard:function(player,name){
        if(!['sha','shan','tao','jiu'].contains(name)) return false;
        if(!player.storage.DIY_yizan&&!player.hasCard(function(card){
            return get.type(card)=='basic';
        },'hs')) return false;
        return player.countCards('hes')>0;
    },
                filter:function(event,player){
        if(!player.storage.DIY_yizan&&!player.hasCard(function(card){
            return get.type(card)=='basic';
        },'hs')) return false;
        if(event.filterCard({name:'sha'},player,event)||
            event.filterCard({name:'shan'},player,event)||
            event.filterCard({name:'jiu'},player,event)||
            event.filterCard({name:'tao'},player,event)){
            return player.countCards('hes')>0;
        }
        return false;
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            if(event.filterCard({name:'sha'},player,event)){
                list.push(['基本','','sha']);
                for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
            }
            if(event.filterCard({name:'shan'},player,event)){
                list.push(['基本','','shan']);
            }
            if(event.filterCard({name:'tao'},player,event)){
                list.push(['基本','','tao']);
            }
            if(event.filterCard({name:'jiu'},player,event)){
                list.push(['基本','','jiu']);
            }
            return ui.create.dialog('翊赞',[list,'vcard'],'hidden');
        },
                    check:function(button){
            var player=_status.event.player;
            var card={name:button.link[2],nature:button.link[3]};
            if(_status.event.getParent().type!='phase'||game.hasPlayer(function(current){
                return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
            })){
                switch(button.link[2]){
                    case 'tao':case 'shan':return 5;
                    case 'jiu':{
                        if(player.storage.yizan&&player.countCards('hs',{type:'basic'})>2) return 3;
                    };
                    case 'sha':
                        if(button.link[3]=='fire') return 2.95;
                        else if(button.link[3]=='thunder'||button.link[3]=='ice') return 2.92;
                        else return 2.9;
                }
            }
            return 0;
        },
                    backup:function(links,player){
            return {
                audio:'DIY_yizan',
                filterCard:function(card,player,target){
                    if(!player.storage.DIY_yizan) return get.type(card)=='basic';
                    return true;
                },
                complexCard:true,
                selectCard:1,
                check:function(card,player,target){
                    if(!ui.selected.cards.length&&get.type(card)=='basic') return 6;
                    else return 6-get.value(card);
                },
                viewAs:{name:links[0][2],nature:links[0][3]},
                position:'hes',
                popname:true,
                precontent:function(){
                    player.addMark('DIY_yizan_use',1,false);
                },
            }
        },
                    prompt:function(links,player){
            var str=player.storage.DIY_yizan?'一张牌':'一张基本牌';
            return '将'+str+'当做'+get.translation(links[0][3]||'')+get.translation(links[0][2])+'使用或打出';
        },
                },
                ai:{
                    order:function(){
            var player=_status.event.player;
            var event=_status.event;
            if(event.filterCard({name:'jiu'},player,event)&&get.effect(player,{name:'jiu'})>0&&player.storage.DIY_yizan&&player.countCards('hs',{type:'basic'})>2){
                return 3.3;
            }
            return 3.1;
        },
                    skillTagFilter:function(player,tag,arg){
            if(tag=='fireAttack') return true;
            if(!player.storage.DIY_yizan&&!player.hasCard(function(card){
            return get.type(card)=='basic';
        },'hs')) return false;
        return player.countCards('hes')>0;
        },
                    result:{
                        player:1,
                    },
                    respondSha:true,
                    respondShan:true,
                    fireAttack:true,
                },
            },
            "DIY_longyuan":{
                audio:"xinfu_longyuan",
                forced:true,
                unique:true,
                juexingji:true,
                trigger:{
                    player:["useCardAfter","respondAfter"],
                },
                skillAnimation:true,
                animationColor:"orange",
                filter:function(event,player){
        return !player.storage.DIY_yizan&&player.countMark('DIY_yizan_use')>=3;
    },
                content:function(){
        player.storage.DIY_yizan=true;
        player.removeSkill("DIY_longyuan");
        player.addSkill("DIY_longyuan_rewrite");
    },
                derivation:"DIY_yizan_rewrite",
            },
            "DIY_yizan_rewrite":{
                audio:"DIY_yizan",
            },
            "DIY_longyuan_rewrite":{
                audio:"xinfu_longyuan",
                forced:true,
                trigger:{
                    player:["useCard","respond"],
                },
                filter:function(event,player){
        if(player.storage.DIY_yizan&&(event.card.name=='tao'||event.card.name=='jiu')&&player!=_status.currentPhase) return true;
        return player.storage.DIY_yizan&&(event.card.name=='sha'||event.card.name=='shan');
    },
                content:function(){
        'step 0'
        player.judge(function(card){
               if(get.color(card)=="red") return 2;
               return 0;
             }).judge2=function(result){
               return result.bool?true:false;
             };
        'step 1'
        if(result.bool){
            player.draw();
        }
    },
            },
            shoupai:{
                mark:true,
                mod:{
                    "cardEnabled2":function (card,player){
                        if(get.position(card)=='h') return false;
                    },
                },
                intro:{
                    content:"不能使用或打出牌",
                },
                ai:{
                    effect:{
                        target:function (card,player,target){
                            if(get.tag(card,'damage')) return [0,-999999];
                        },
                    },
                },
            },
            "DIY_guzheng":{
                audio:"guzheng",
                audioname:["re_zhangzhang"],
                trigger:{
                    global:"loseAfter",
                },
                group:"guzheng",
                filter:function(event,player){
        if(event.parent.parent.name=='phaseDiscard') return false;
        if(event.type!='discard') return false;
        if(event.player==player) return false;
        if(event.cards.length<2) return false;
        for(var i=0;i<event.cards.length;i++){
            if(get.position(event.cards[i],true)=='d'){
                return true;
            }
        }
        return false;
    },
                checkx:function(event,player,cards){
        if(event.parent.parent.name=='phaseDiscard') return false;
        if(cards.length>2||get.attitude(player,event.player)>0) return true;
        for(var i=0;i<cards.length;i++){
            if(get.value(cards[i],event.player,'raw')<0) return true;
        }
        return false;
    },
                direct:true,
                preHidden:true,
                content:function(){
        "step 0"
        var cards=[];
        for(var i=0;i<trigger.cards.length;i++){
                    if(get.position(trigger.cards[i],true)=='d'){
                        cards.push(trigger.cards[i]);
                    }
                }
        event.cards=cards;
        if(cards.length<2) event.goto(2);
        var check=lib.skill.DIY_guzheng.checkx(trigger,player,cards);
        player.chooseCardButton(cards,'固政：选择令'+get.translation(trigger.player)+'收回的牌').set('ai',function(button){
            if(_status.event.check){
                return 20-get.value(button.link,_status.event.getTrigger().player);
            }
            return 0;
        }).set('check',check).set('cards',cards).set('filterButton',function(button){
            return _status.event.cards.contains(button.link);
        }).setHiddenSkill(event.name);
        "step 1"
        if(result.bool){
            game.delay(0.5);
            player.logSkill('DIY_guzheng',trigger.player);
            trigger.player.gain(result.links[0]);
            trigger.player.$gain2(result.links[0]);
            game.log(trigger.player,'收回了',result.links[0]);
            event.cards.remove(result.links[0]);
            if(event.cards.length){
                player.gain(event.cards);
                player.$gain2(event.cards);
                game.log(player,'收回了',event.cards);
            }
        }
        'step 2'
        game.delay();
    },
                ai:{
                    threaten:1.3,
                    expose:0.2,
                },
            },
            "DIY_zhijian":{
                audio:"rezhijian",
                group:"rezhijian_use",
                prompt:"将一张装备牌置入至其他角色的装备区",
                enable:"phaseUse",
                position:"he",
                check:function(){return 1},
                filter:function(event,player){
        return player.countCards('he',{type:'equip'})>0;
    },
                filterCard:function(card){
        return get.type(card)=='equip';
    },
                filterTarget:function(event,player,target){
        return target!=player&&target.canEquip(ui.selected.cards[0],true);
    },
                prepare:"give",
                discard:false,
                lose:false,
                content:function(){
        target.equip(cards[0]);
        player.draw();
    },
                ai:{
                    order:11,
                    expose:0.2,
                    result:{
                        target:function(player,target){
                if(ui.selected.cards.length){
                    var card=ui.selected.cards[0];
                    if(target.getEquip(card)||target.countCards('h',{subtype:get.subtype(card)})) return 0;
                    return get.effect(target,card,player,target);
                }
                return 0;
            },
                    },
                },
            },
            "DIY_luanzhan":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard",
                },
                forced:true,
                content:function(){
        player.addMark('DIY_luanzhan',1,false);
    },
                intro:{
                    content:"mark",
                },
                ai:{
                    notemp:true,
                },
                mod:{
                    cardUsable:function(card,player,num){
                        if(card.name=='sha') return num+player.countMark('DIY_luanzhan');
                    },
                },
                group:["DIY_luanzhan_add","DIY_luanzhan_remove"],
            },
            "DIY_luanzhan_add":{
                trigger:{
                    player:"useCard2",
                },
                direct:true,
                filter:function(event,player){
        if(event.card.name=='wuxie') return false;
        if(event.card.name!='sha'&&get.type(event.card)!='trick'||!player.countMark('DIY_luanzhan')) return false;
        var info=get.info(event.card);
        if(info.allowMultiple==false) return false;
        if(event.targets&&!info.multitarget){
            if(game.hasPlayer(function(current){
                return !event.targets.contains(current);
            })){
                return true;
            }
        }
        return false;
    },
                content:function(){
        'step 0'
        var num=player.countMark('DIY_luanzhan');
        var prompt2='为'+get.translation(trigger.card)+'增加至多'+get.cnNumber(num)+'个目标'
        player.chooseTarget(get.prompt('DIY_luanzhan'),function(card,player,target){
            if(_status.event.targets.contains(target)) return false;
            return target!=player;
        },[1,num]).set('prompt2',prompt2).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            return get.effect(target,trigger.card,player,player);
        }).set('card',trigger.card).set('targets',trigger.targets);
        'step 1'
        if(result.bool){
            if(!event.isMine()&&!event.isOnline()) game.delayx();
            event.targets=result.targets;
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.targets){
            player.logSkill('DIY_luanzhan',event.targets);
            trigger.targets.addArray(event.targets);
        }
    },
            },
            "DIY_luanzhan_remove":{
                audio:"DIY_luanzhan",
                trigger:{
                    player:"useCardToPlayered",
                },
                forced:true,
                filter:function(event,player){
        if(event.card.name=='wuxie') return false;
        if(!event.isFirstTarget||(event.card.name!='sha'&&get.type(event.card)!='trick')||!player.countMark('DIY_luanzhan')) return false;
        var info=get.info(event.card);
        if(info.allowMultiple==false||info.multitarget) return false;
        return event.targets.length<player.countMark('DIY_luanzhan');
    },
                content:function(){
        var num=Math.ceil(player.countMark('DIY_luanzhan')/2);
        player.draw(num);
        player.removeMark('DIY_luanzhan',num);
    },
            },
            "DIY_liegong":{
                shaRelated:true,
                mod:{
                    targetInRange:function(card,player,target){
            if(card.name=='sha'&&target.countCards('h')<=player.countCards('h')) return true;
        },
                },
                group:["DIY_liegong2","DIY_liegong_damage"],
                forced:true,
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard",
                },
                filter:function(event,player){
        if(event.card.name=='sha'&&player.storage.DIY_liegong_damage) return true;
        return false;
    },
                content:function(){
        var num=player.storage.DIY_liegong_damage;
        trigger.baseDamage+=num;
    },
                subSkill:{
                    damage:{
                        trigger:{
                            player:"phaseEnd",
                        },
                        direct:true,
                        filter:function(event,player){
                            return event.player.getHistory('sourceDamage').length;
                        },
                        content:function(){
                            player.storage.DIY_liegong_damage=player.getStat('damage');
                        },
                        sub:true,
                    },
                },
            },
            "DIY_liegong2":{
                shaRelated:true,
                audio:"DIY_liegong",
                trigger:{
                    player:"useCardToPlayered",
                },
                forced:true,
                logTarget:"target",
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        if(event.target.countCards('h')<=player.countCards('h')) return true;
        return false;
    },
                content:function(){
        trigger.getParent().directHit.push(trigger.target);
    },
                ai:{
                    threaten:0.5,
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(get.attitude(player,arg.target)<=0&&arg.card.name=='sha'&&player.countCards('h',function(card){
                return card!=arg.card&&(!arg.card.cards||!arg.card.cards.contains(card));
            })>=arg.target.countCards('h')) return true;
            return false;
        },
                },
            },
            "DIY_zhiyu":{
                audio:"ext:天牢令/image/audio:6",
                trigger:{
                    player:"useCard2",
                },
                group:"DIY_zhiyu2",
                forced:true,
                filter:function(event){
        if(event.card.isCard) return false;
        if(_status.currentPhase!=event.player) return false;
        return get.type(event.card)=='trick'&&event.player.hp>1&&event.player.countCards('h')>1&&_status.currentPhase==event.player;
    },
                content:function(){
        "step 0"
        player.chooseToDiscard(true);
        "step 1"
        if(!player.countCards('h')) event.finish();
        else player.showHandcards();
        "step 2"
        var cards=player.getCards('h');
        var color=get.color(cards[0],player);
        for(var i=1;i<cards.length;i++){
            if(get.color(cards[i],player)!=color) return event.goto(4);
        }
        player.chooseTarget(get.prompt('DIY_zhiyu'),'选择一名角色并令其弃置一张牌',function(card,player,target){
            return target.countCards('he')>0;
        }).set('ai',function(target){
            return 2-get.attitude(_status.event.player,target);
        }).set('targets',trigger.targets);
        "step 3"
        if(result.bool){
            var target=result.targets[0];
            target.chooseToDiscard(true);
        }
        "step 4"
        game.delay();
    },
            },
            "DIY_zhiyu2":{
                audio:"DIY_zhiyu",
                trigger:{
                    target:"useCardToTargeted",
                    player:"damageEnd",
                },
                forced:true,
                filter:function(event,player){
        if(event.name=='damage') return true;
        return player!=event.player&&get.type(event.card,'trick')=='trick'&&event.targets.length>0;
    },
                content:function(){
        "step 0"
        player.draw();
        "step 1"
        if(!player.countCards('h')) event.finish();
        else player.showHandcards();
        "step 2"
        var cards=player.getCards('h');
        var color=get.color(cards[0],player);
        for(var i=1;i<cards.length;i++){
            if(get.color(cards[i],player)!=color) return event.goto(4);
        }
        player.chooseTarget(get.prompt('DIY_zhiyu'),'选择一名角色并令其弃置一张牌',function(card,player,target){
            return target.countCards('he')>0;
        }).set('ai',function(target){
            return 2-get.attitude(_status.event.player,target);
        }).set('targets',trigger.targets);
        "step 3"
        if(result.bool){
            var target=result.targets[0];
            target.chooseToDiscard(true);
        }
        "step 4"
        game.delay();
    },
            },
            "DIY_tuntian":{
                filter:function(event,player){
        if(player==_status.currentPhase){
            return event.name=='lose'&&event.cards2.filter(function(card){
                return get.name(card,event.hs.contains(card)?player:false)=='sha';
            }).length>0;
        };
        if(event.name=='gain'&&event.player==player) return false;
        var evt=event.getl(player);
        return evt&&evt.cards2&&evt.cards2.length>0;
    },
                audio:"ext:天牢令/image/audio:12",
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
                },
                frequent:true,
                preHidden:true,
                prompt:"是否将牌堆顶的一张牌作为【田】置于武将牌上？",
                content:function(){
        'step 0'
        event.count=1;
        if(trigger.name=='lose'){
            event.count=0;
            for(var i=0;i<trigger.cards2.length;i++){
                if(get.name(trigger.cards2[i],player)=='sha'&&player==_status.currentPhase) event.count++;
                if(player!=_status.currentPhase) event.count++;
            }
        }
        'step 1'
        player.addToExpansion(get.cards(1),'gain2').gaintag.add('DIY_tuntian');
        event.count--;
        'step 2'
        if(event.count){
            player.chooseBool(get.prompt2('DIY_tuntian')).set('frequentSkill','DIY_tuntian');
        }
        else event.finish();
        'step 3'
        if(result.bool){
            player.logSkill('DIY_tuntian');
            event.goto(1);
        }
    },
                marktext:"田",
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                onremove:function(player,skill){
        var cards=player.getExpansions(skill);
        if(cards.length) player.loseToDiscardpile(cards);
    },
                group:"DIY_tuntian_dist",
                locked:false,
                subSkill:{
                    dist:{
                        locked:false,
                        mod:{
                            globalFrom:function(from,to,distance){
                    var num=distance-from.getExpansions('DIY_tuntian').length;
                    if(_status.event.skill=='DIY_jixi_backup'||_status.event.skill=='gzjixi_backup') num++;
                    return num;
                },
                        },
                        sub:true,
                    },
                },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(!target.hasFriend()&&!player.hasUnknown()) return;
                if(_status.currentPhase==target) return;
                if(card.name!='shuiyanqijunx'&&get.tag(card,'loseCard')&&target.countCards('he')){
                    if(target.hasSkill('ziliang')) return 0.7;
                    return [0.5,Math.max(2,target.countCards('h'))];
                }
                if(target.isUnderControl(true,player)){
                    if((get.tag(card,'respondSha')&&target.countCards('h','sha'))||
                        (get.tag(card,'respondShan')&&target.countCards('h','shan'))){
                        if(target.hasSkill('ziliang')) return 0.7;
                        return [0.5,1];
                    }
                }
                else if(get.tag(card,'respondSha')||get.tag(card,'respondShan')){
                    if(get.attitude(player,target)>0&&card.name=='juedou') return;
                    if(get.tag(card,'damage')&&target.hasSkillTag('maixie')) return;
                    if(target.countCards('h')==0) return 2;
                    if(target.hasSkill('ziliang')) return 0.7;
                    if(get.mode()=='guozhan') return 0.5;
                    return [0.5,Math.max(target.countCards('h')/4,target.countCards('h','sha')+target.countCards('h','shan'))];
                }
            },
                    },
                    threaten:function(player,target){
            if(target.countCards('h')==0) return 2;
            return 0.5;
        },
                    nodiscard:true,
                    nolose:true,
                },
            },
            "DIY_zaoxian":{
                content:function(){
        player.awakenSkill('DIY_zaoxian');
        player.loseMaxHp();
        player.addSkill('DIY_jixi');
        player.insertPhase();
    },
                skillAnimation:true,
                animationColor:"thunder",
                audio:"zaoxian",
                unique:true,
                juexingji:true,
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                filter:function(event,player){
        return player.getExpansions('DIY_tuntian').length>=3;
    },
                derivation:"DIY_jixi",
            },
            "DIY_jixi":{
                group:"DIY_jixi2",
                audio:"ext:天牢令/image/audio:12",
                enable:"phaseUse",
                filter:function(event,player){
        return player.getExpansions('DIY_tuntian').length>0&&event.filterCard({name:'shunshou'},player,event);
    },
                chooseButton:{
                    dialog:function(event,player){
            return ui.create.dialog('急袭',player.getExpansions('DIY_tuntian'),'hidden');
        },
                    backup:function(links,player){
            var skill=_status.event.buttoned;
            return {
                audio:'DIY_jixi',
                selectCard:-1,
                position:'x',
                filterCard:skill=='DIY_jixi'?(card)=>card==lib.skill.DIY_jixi_backup.card:(card)=>card==lib.skill.gzjixi_backup.card,
                viewAs:{name:'shunshou'},
                card:links[0],
            }
        },
                    prompt:function(links,player){
            return '选择 顺手牵羊（'+get.translation(links[0])+'）的目标';
        },
                },
                ai:{
                    order:10,
                    result:{
                        player:function(player){
                return player.getExpansions('DIY_tuntian').length-1;
            },
                    },
                },
            },
            "DIY_jixi2":{
                audio:"DIY_jixi",
                trigger:{
                    global:"loseAfter",
                },
                frequent:true,
                prompt:"是否于当前回合结束后进行一个额外的回合",
                filter:function(event,player){
        if(event.player.countCards('h')) return false;
        if(_status.currentPhase!=player) return false;
        if(event.player==player) return false;
        return event.hs&&event.hs.length>0;
    },
                content:function(){
        player.line(trigger.player,'green');
        player.insertPhase();
    },
                ai:{
                    threaten:1.1,
                },
            },
            "DIY_qiaobian8":{
                audio:"DIY_qiaobian2",
                trigger:{
                    global:"phaseDrawBegin1",
                },
                direct:true,
                filter:function(event,player){
        return !event.numFixed&&player.countCards('h')>0&&event.player!=player;
    },
                content:function(){
        "step 0"
        var save=false;
        if(get.attitude(player,event.player)<0){
            save=true;
        }
        var next=player.chooseToDiscard(get.prompt('qiaobian'),'弃置一张手牌并进行判定，若结果不为黑色则跳过'+get.translation(_status.currentPhase)+'的摸牌阶段');
        next.logSkill=['DIY_qiaobian2',_status.currentPhase];
        next.ai=function(card){
            if(save){
                return 7-get.value(card);
            }
            return 0;
        }
        "step 1"
        if(result.bool){
            player.judge(function(card){
                if(get.color(card)=="red") return 2;
                return 0;
                }).judge2=function(result){
                    return result.bool?true:false;
                };
        }
        'step 2'
        if(result.bool){
            trigger.cancel();
        }
        'step 3'
        game.delay();
    },
            },
            "DIY_qiaobian9":{
                audio:"DIY_qiaobian3",
                trigger:{
                    global:"phaseUseBefore",
                },
                direct:true,
                filter:function(event,player){
        return event.player.countCards('h')>0&&player.countCards('h')>0&&event.player!=player;
    },
                content:function(){
        "step 0"
        var save=false;
        if(get.attitude(player,event.player)<0){
            save=true;
        }
        var next=player.chooseToDiscard(get.prompt('qiaobian'),'弃置一张手牌并进行判定，若结果不为红色则跳过'+get.translation(_status.currentPhase)+'的出牌阶段');
        next.logSkill=['DIY_qiaobian3',_status.currentPhase];
        next.ai=function(card){
            if(save){
                return 7-get.value(card);
            }
            return 0;
        }
        "step 1"
        if(result.bool){
            player.judge(function(card){
                if(get.color(card)=="black") return 2;
                return 0;
                }).judge2=function(result){
                    return result.bool?true:false;
                };
        }
        'step 2'
        if(result.bool){
            trigger.cancel();
        }
        'step 3'
        game.delay();
    },
            },
            "DIY_zhendu_dushi":{
                intro:{
                    content:"你不是其他角色【桃】的合法目标",
                },
                mark:true,
                mod:{
                    targetEnabled:function(card,player,target,now){
            if(card.name=='tao'&&player!=target) return false;
        },
                },
            },
            "DIY_muzhen":{
                audio:"muzhen",
                enable:"phaseUse",
                usable:2,
                filter:function(event,player){
        if(!player.hasSkill('DIY_muzhen1')&&player.countCards('e')>0&&game.hasPlayer(function(current){
            return current!=player&&current.countCards('h')>0;
        })) return true;
        if(!player.hasSkill('DIY_muzhen2')&&player.countCards('he')>1&&game.hasPlayer(function(current){
            return current!=player&&current.countCards('e')>0;
        })) return true;
        return false;
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[
                '将一张装备牌置于其他角色的装备区内并获得其一张手牌',
                '将一张牌交给一名其他角色并获得其装备区内的一张牌',
            ];
            var choiceList=ui.create.dialog('睦阵：请选择一项','hidden');
            for(var i=0;i<list.length;i++){
                var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
                var bool=lib.skill.DIY_muzhen.chooseButton.filter({link:i},player);
                if(!bool) str+='<div style="opacity:0.5">';
                str+=list[i];
                if(!bool) str+='</div>';
                str+='</div>';
                var next=choiceList.add(str);
                next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
                next.firstChild.link=i;
                for(var j in lib.element.button){
                    next[j]=lib.element.button[j];
                }
                choiceList.buttons.add(next.firstChild);
            }
            return choiceList;
        },
                    filter:function(button,player){
            if(button.link==0) return !player.hasSkill('DIY_muzhen1')&&player.countCards('e')>0&&game.hasPlayer(function(current){
                return current!=player&&current.countCards('h')>0;
            })
            return !player.hasSkill('DIY_muzhen2')&&player.countCards('he')>1&&game.hasPlayer(function(current){
                return current!=player&&current.countCards('e')>0;
            });
        },
                    backup:function(links){
            return {
                audio:'muzhen',
                filterTarget:[
                    function(card,player,target){
                        return target.countCards('h')>0&&target.isEmpty(ui.selected.cards[0]);
                    },
                    function(card,player,target){
                        return target.countCards('e')>0;
                    }
                ][links[0]],
                filterCard:[
                    function(card,player){
                        if(ui.selected.targets.length) return ui.selected.targets[0].isEmpty(card);
                        return game.hasPlayer(function(current){
                            return current.countCards('h')>0&&current.isEmpty(card);
                        })
                    },
                    true,
                ],
                selectCard:1,
                position:'eh',
                discard:false,
                lose:false,
                delay:false,
                content:function(){
                    'step 0'
                    player.addTempSkill('DIY_muzhen'+cards.length,'phaseUseEnd');
                    if(get.type(cards)=='equip'){
                        player.$giveAuto(cards[0],target);
                        game.delayx();
                        target.equip(cards[0]);
                    }
                    else{
                        target.gain(cards,player,'giveAuto');
                    }
                    player.gainPlayerCard(target,get.type(cards)=='equip'?'e':'h',true);
                },
            }
        },
                    prompt:function(){
            return '请选择【睦阵】的牌和目标'
        },
                },
            },
            "DIY_muzhen1":{
            },
            "DIY_muzhen2":{
            },
            "DIY_muzhen_backup":{
            },
            "DIY_kannan":{
                audio:"xinfu_kannan",
                subSkill:{
                    phase:{
                        sub:true,
                    },
                },
                group:["DIY_kannan_lose","DIY_kannan_compare","DIY_kannan_storage"],
                enable:"phaseUse",
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                filterTarget:function (card,player,target){
        return player.canCompare(target);
    },
                content:function (){
        'step 0'
        player.chooseToCompare(target).set('small',get.attitude(player,target)>0||target.countCards('h')>1);
        'step 1'
        if(result.bool){
            if(!player.hasSkill('DIY_kannan_eff')){
                player.addSkill('DIY_kannan_eff');
            }else{
                if(!player.storage.DIY_kannan_eff) player.storage.DIY_kannan_eff=0;
            }
            player.storage.DIY_kannan_eff++;
            player.markSkill('DIY_kannan_eff');
        }
        else{
            var card2=result.target;
            if(get.position(card2)=='d') player.gain(card2,'gain2');
            if(!target.hasSkill('DIY_kannan_eff')){
                target.addSkill('DIY_kannan_eff');
            }
            else{
                if(!target.storage.DIY_kannan_eff) player.storage.DIY_kannan_eff=0;
                //target.storage.kannan_eff++;
                //target.markSkill('kannan_eff');
            }
            target.storage.DIY_kannan_eff++;
            target.markSkill('DIY_kannan_eff');
        }
    },
                ai:{
                    order:10,
                    result:{
                        target:function(player,target){
                if(player.countCards('h',function(card){
                    return player.hasValueTarget(card);
                })){
                    if(player.hasSkill('DIY_kannan_eff')) return 0;
                    var nd=!player.needsToDiscard();
                    if(player.hasCard(function(card){
                        if(get.position(card)!="h") return false;
                        var val=get.value(card)
                        if(nd&&val<0) return true;
                        if(val<=5){
                            return card.number>=12;
                        }
                        if(val<=6){
                            return card.number>=13;
                        }
                        return false;
                    })) return -1;
                    return 0;
                }
                return -1;
            },
                    },
                },
            },
            "DIY_kannan_eff":{
                mark:true,
                intro:{
                    content:"下一张杀的伤害基数+#",
                },
                trigger:{
                    player:"useCard",
                },
                filter:function (event){
        return event.card&&event.card.name=='sha';
    },
                forced:true,
                content:function (){
        if(!trigger.baseDamage) trigger.baseDamage=1;
        trigger.baseDamage+=player.storage.DIY_kannan_eff;
        player.removeSkill('DIY_kannan_eff');
    },
                init:function (player){
        player.storage.DIY_kannan_eff=0;
    },
                onremove:function (player){
        delete player.storage.DIY_kannan_eff;
    },
                ai:{
                    damageBonus:true,
                },
            },
            "DIY_kannan_lose":{
                trigger:{
                    player:"loseAfter",
                },
                filter:function(event,player){
        if(event.type=='discard'||event.getParent().name=='useCard'||event.getParent().name=='respond'||event.getParent().name=='gain'||event.getParent().name=='equip') return false;
        return true;
    },
                forced:true,
                direct:true,
                content:function(){
        player.storage.DIY_kannan=true;
    },
            },
            "DIY_kannan_storage":{
                trigger:{
                    player:["chooseToCompareAfter","compareMultipleAfter"],
                    target:["chooseToCompareAfter","compareMultipleAfter"],
                },
                forced:true,
                direct:true,
                content:function(){
        player.storage.DIY_kannan=false;
    },
            },
            "DIY_kannan_compare":{
                audio:"ext:天牢令/image/audio:4",
                trigger:{
                    player:"compare",
                    target:"compare",
                },
                filter:function(event,player){
        if(!player.storage.DIY_kannan) return false;
        if(event.player!=player&&event.num2<event.num1) return true;
        if(event.player==player&&event.num1<event.num2) return true;
        return false;
    },
                forced:true,
                locked:false,
                content:function(){
        "step 0"
        player.draw();
        var cards=player.getCards('he'); 
        player.chooseButton(['请选择一张牌来修改拼点点数', player.getCards('he')], 1,true).set('ai',function(card){
                return get.number(card);
        });
        "step 1"
        if(result.bool){
            num=get.number(result.links[0]);
            if(player==trigger.player){
                trigger.num1=num;
            }
            else{
                trigger.num2=num;
            }
            game.log(player,'的拼点牌点数改为'+get.translation(num));
        }
        player.storage.DIY_kannan=false;
    },
            },
            "DIY_rende":{
                marktext:"仁德",
                intro:{
                    content:function(storage,player){
                        var num=player.countMark("DIY_rende");
                        var str='<li>本回合已仁德牌数：';
                        str+=num;
                        if(_status.currentPhase!=player){
                            str='当前不是你回合你仁德什么';
                        }
                        return str;
                    },
                },
                init:function(player){
                    player.storage.DIY_rende=0;
                },
                group:"DIY_rende1",
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filterCard:true,
                selectCard:[1,Infinity],
                position:"he",
                discard:false,
                lose:false,
                delay:false,
                filterTarget:function(card,player,target){
        return player!=target;
    },
                onremove:"DIY_rende",
                check:function(card){
        if(ui.selected.cards.length>1) return 0;
        if(ui.selected.cards.length&&ui.selected.cards[0].name=='du') return 0;
        if(!ui.selected.cards.length&&card.name=='du') return 20;
        var player=get.owner(card);
        var num=0;
        var evt2=_status.event.getParent();
        var num=0;
        player.getHistory('lose',function(evt){
            if(evt.getParent().skill=='DIY_rende'&&evt.getParent(3)==evt2) num+=evt.cards.length;
        });
        if(player.hp==player.maxHp||num>1||player.countCards('h')<=1){
            if(ui.selected.cards.length){
                return -1;
            }
            var players=game.filterPlayer();
            for(var i=0;i<players.length;i++){
                if(players[i].hasSkill('haoshi')&&
                    !players[i].isTurnedOver()&&
                    !players[i].hasJudge('lebu')&&
                    get.attitude(player,players[i])>=3&&
                    get.attitude(players[i],player)>=3){
                    return 11-get.value(card);
                }
            }
            if(player.countCards('h')>player.hp) return 10-get.value(card);
            if(player.countCards('h')>2) return 6-get.value(card);
            return -1;
        }
        return 10-get.value(card);
    },
                content:function(){
        'step 0'
        target.gain(cards,player,'giveAuto');
        player.addMark('DIY_rende',cards.length,false);
        var num=player.countMark("DIY_rende");
        game.delay();
            if(num%2==0){
                var list=[];
                list.push(['基本','','sha']);
                for(var i of lib.inpile_nature){
                list.push(['基本','','sha',i]);
                }
                if(lib.filter.cardUsable({name:'tao'},player,event.getParent('chooseToUse'))&&game.hasPlayer(function(current){
                    return player.canUse('tao',current);
                })){
                    list.push(['基本','','tao']);
                }
                if(lib.filter.cardUsable({name:'jiu'},player,event.getParent('chooseToUse'))){
                    list.push(['基本','','jiu']);
                }
                if(list.length){
                    player.chooseButton(['是否视为使用一张基本牌？',[list,'vcard']]).set('ai',function(button){
                        var player=_status.event.player;
                        var card={name:button.link[2],nature:button.link[3]};
                        if(card.name=='tao'){
                            if(player.hp==1||(player.hp==2&&!player.hasShan())||player.needsToDiscard()){
                                return 5;
                            }
                            return 1;
                        }
                        if(card.name=='sha'){
                            if(game.hasPlayer(function(current){
                                return player.canUse(card,current)&&get.effect(current,card,player,player)>0
                            })){
                                if(card.nature=='fire') return 2.95;
                                if(card.nature=='thunder'||card.nature=='ice') return 2.92;
                                return 2.9;
                            }
                            return 0;
                        }
                        if(card.name=='jiu'){
                            return 0.5;
                        }
                        return 0;
                    });
                }
                else{
                    event.finish();
                }
            }
            if(num%2!=0&&num%5==0){
                player.draw(5);
            }
            if(num%2!=0&&num%5!=0){
                event.finish();
            }
        'step 1'
        if(result&&result.bool&&result.links[0]){
            var card={name:result.links[0][2],nature:result.links[0][3]};
            player.chooseUseTarget(card,true,'nodistance');
        }
    },
                ai:{
                    fireAttack:true,
                    order:function(skill,player){
            if(player.hp<player.maxHp&&num<2&&player.countCards('h')>1){
                return 10;
            }
            return 4;
        },
                    result:{
                        target:function(player,target){
                if(target.hasSkillTag('nogain')) return 0;
                if(ui.selected.cards.length&&ui.selected.cards[0].name=='du'){
                    if(target.hasSkillTag('nodu')) return 0;
                    return -10;
                }
                if(target.hasJudge('lebu')) return 0;
                var nh=target.countCards('h');
                var np=player.countCards('h');
                if(player.hp==player.maxHp||player.storage.DIY_rende<0||player.countCards('h')<=1){
                    if(nh>=np-1&&np<=player.hp&&!target.hasSkill('haoshi')) return 0;
                }
                return Math.max(1,5-nh);
            },
                    },
                    effect:{
                        target:function(card,player,target){
                if(player==target&&get.type(card)=='equip'){
                    if(player.countCards('e',{subtype:get.subtype(card)})){
                        if(game.hasPlayer(function(current){
                            return current!=player&&get.attitude(player,current)>0;
                        })){
                            return 0;
                        }
                    }
                }
            },
                    },
                    threaten:0.8,
                },
            },
            "DIY_rende1":{
                trigger:{
                    player:"phaseEnd",
                },
                silent:true,
                filter:function(event,player){
                    return player.countMark("DIY_rende")>0;
                },
                content:function(){
                    player.removeMark('DIY_rende',Infinity,false);
                },
                forced:true,
                popup:false,
            },
            "DIY_qizhi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["useCardToPlayered","respond","useCard"],
                },
                direct:true,
                filter:function(event,player){
        if(event.name=="respond"&&_status.currentPhase!=player) return true;
        if(event.name=="useCard"&&_status.currentPhase!=player) return true;
        if(event.name=="respond"&&_status.currentPhase==player) return false;
        if(event.name=="useCard"&&_status.currentPhase==player) return false;
        if(!event.targets) return false;
        if(!event.isFirstTarget) return false;
        if(event.noai) return false;
        return game.hasPlayer(function(target){
            return !event.targets.contains(target)&&target.countCards('he')>0;
        });
    },
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt('DIY_qizhi'),'弃置一名角色的一张牌，然后你摸一张牌并交给其一张牌',function(card,player,target){
            if(_status.currentPhase!=player) return true;
            return !_status.event.targets.contains(target)&&target.countCards('he')>0;
        }).set('ai',function(target){
            var player=_status.event.player;
            if(target==player) return 2;
            if(get.attitude(player,target)<=0){
                return 1
            }
            return 0.5;
        }).set('targets',trigger.targets);
        'step 1'
        if(result.bool){
            player.getHistory('custom').push({DIY_qizhi:true});
            player.logSkill('DIY_qizhi',result.targets);
            player.discardPlayerCard(result.targets[0],true,'he');
            event.target=result.targets[0];
            player.draw();
        }
        else{
            event.finish();
        }
        'step 2'
        if(player!=event.target){
            player.chooseCard('he',true,'选择交给'+get.translation(event.target)+'一张牌');
        }
        'step 3'
        if(result.bool&&result.cards&&result.cards.length) event.target.gain(result.cards,player,'giveAuto');
    },
            },
            "DIY_jinqu":{
                trigger:{
                    global:"phaseJieshuBegin",
                },
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
                    return player.getHistory('custom',function(evt){
            return evt.DIY_qizhi==true;
        }).length>0;
                },
                check:function(event,player){
        return player.getHistory('custom',function(evt){
            return evt.DIY_qizhi==true;
        }).length>=player.countCards('h');
    },
                prompt:function(event,player){
        var num=player.getHistory('custom',function(evt){
            return evt.DIY_qizhi==true;
        }).length;
        return '进趋：是否摸'+get.cnNumber(num)+'张牌并将手牌弃置至'+get.cnNumber(num)+'张？';
    },
                content:function(){
        'step 0'
        var num=player.getHistory('custom',function(evt){
            return evt.DIY_qizhi==true;
        }).length;
        player.draw(num);
        'step 1'
        var dh=player.countCards('h')-player.getHistory('custom',function(evt){
            return evt.DIY_qizhi==true;
        }).length;
        if(dh>0){
            player.chooseToDiscard(dh,true);
        }
    },
                ai:{
                    combo:"DIY_qizhi",
                },
            },
            "DIY_quanji":{
                group:["DIY_quanji2","DIY_quanji3"],
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["damageEnd","phaseUseEnd"],
                },
                frequent:true,
                locked:false,
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                notemp:true,
                filter:function(event,player){
        if(event.name=='phaseUse') return player.countCards('h')>player.hp;
        return event.num>0;
    },
                content:function(){
        "step 0"
        event.count=trigger.num||1;
        "step 1"
        event.count--;
        player.draw();
        "step 2"
        if(player.countCards('he')){
            player.chooseCard('将一张牌置于武将牌上作为“权”','he',true);
        }
        else{
            event.goto(4);
        }
        "step 3"
        if(result.cards&&result.cards.length){
            player.addToExpansion(result.cards,player,'give').gaintag.add('DIY_quanji');
        }
        "step 4"
        if(event.count>0){
            player.chooseBool(get.prompt2('DIY_quanji')).set('frequentSkill','DIY_quanji');
        }
        else event.finish();
        "step 5"
        if(result.bool){
            player.logSkill('DIY_quanji');
            event.goto(1);
        }
    },
                mod:{
                    maxHandcard:function(player,num){
            return num+player.getExpansions('DIY_quanji').length;
        },
                },
                onremove:function(player,skill){
        var cards=player.getExpansions('DIY_quanji');
        if(cards.length) player.loseToDiscardpile(cards);
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    threaten:0.8,
                    effect:{
                        target:function(card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
                    if(target.hp>=4) return [0.5,get.tag(card,'damage')*2];
                    if(!target.hasSkill('paiyi')&&target.hp>1) return [0.5,get.tag(card,'damage')*1.5];
                    if(target.hp==3) return [0.5,get.tag(card,'damage')*1.5];
                    if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
                }
            },
                    },
                },
            },
            "DIY_zili":{
                derivation:"DIY_paiyi",
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                juexingji:true,
                skillAnimation:true,
                animationColor:"thunder",
                filter:function(event,player){
        return player.getExpansions('DIY_quanji').length>2;
    },
                content:function(){
        player.awakenSkill('DIY_zili');
        player.recover();
        player.draw(2);
        player.loseMaxHp();
        player.addSkill('DIY_paiyi');
        player.insertPhase();
    },
            },
            "DIY_paiyi":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filter:function(event,player){
        return player.getExpansions('DIY_quanji').length>0&&(!player.hasSkill('DIY_paiyi_0')||!player.hasSkill('DIY_paiyi_1'))
    },
                chooseButton:{
                    check:function(button){
            if(typeof button.link=='object') return 1;
            var player=_status.event.player,num=player.getExpansions('DIY_quanji').length-1;
            if(button.link==1){
                if(game.countPlayer(function(current){
                    return get.damageEffect(current,player,player)>0;
                })<num) return 0.5;
                return 2;
            }
            if(num<2) return 0;
            return 1;
        },
                    dialog:function(event,player){
            var dialog=ui.create.dialog('权计','hidden');
            var table=document.createElement('div');
            table.classList.add('add-setting');
            table.style.margin='0';
            table.style.width='100%';
            table.style.position='relative';
            var list=['摸牌','造成伤害'];
            for(var i=0;i<list.length;i++){
                if(player.hasSkill('DIY_paiyi_'+i)) continue;
                var td=ui.create.div('.shadowed.reduce_radius.pointerdiv.tdnode');
                td.innerHTML='<span>'+(list[i])+'</span>';
                td.link=i;
                td.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
                for(var j in lib.element.button){
                    td[j]=lib.element.button[j];
                }
                table.appendChild(td);
                dialog.buttons.add(td);
            }
            dialog.content.appendChild(table);
            dialog.add(player.getExpansions('DIY_quanji'));
            return dialog;
        },
                    select:2,
                    filter:function(button,player){
            if(ui.selected.buttons.length) return (typeof ui.selected.buttons[0].link)!=(typeof button.link)
            return true;
        },
                    backup:function(links){
            if(typeof links[0]=='object') links.reverse();
            var next=get.copy(lib.skill['DIY_paiyi_backup'+links[0]]);
            next.card=links[1];
            return next;
        },
                    prompt:function(links,player){
            if(typeof links[0]=='object') links.reverse();
            var num=get.cnNumber(Math.max(1,player.getExpansions('DIY_quanji').length-1)),card=get.translation(links[1]);
            if(links[0]==0) return '移去'+card+'并令一名角色摸'+num+'张牌';
            return '移去'+card+'并对至多'+num+'名角色造成1点伤害';
        },
                },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                },
                subSkill:{
                    "0":{
                        sub:true,
                    },
                    "1":{
                        sub:true,
                    },
                    "backup0":{
                        audio:"DIY_paiyi",
                        filterCard:()=>false,
                        selectCard:-1,
                        filterTarget:true,
                        delay:false,
                        content:function(){
                'step 0'
                player.addTempSkill('DIY_paiyi_0','phaseUseEnd');
                var card=lib.skill.DIY_paiyi_backup.card;
                player.loseToDiscardpile(card);
                'step 1'
                target.draw(Math.max(1,player.getExpansions('DIY_quanji').length));
            },
                        ai:{
                            result:{
                                target:function(player,target){
                        if(target.hasSkill('nogain')) return 0;
                        if(player==target&&!player.needsToDiscard()) return 3;
                        return 1;
                    },
                            },
                        },
                        sub:true,
                    },
                    "backup1":{
                        audio:"DIY_paiyi",
                        filterCard:()=>false,
                        selectCard:-1,
                        filterTarget:true,
                        delay:false,
                        multitarget:true,
                        multiline:true,
                        selectTarget:function(){
                return [1,Math.max(1,_status.event.player.getExpansions('DIY_quanji').length-1)];
            },
                        content:function(){
                'step 0'
                targets.sortBySeat();
                player.addTempSkill('DIY_paiyi_1','phaseUseEnd');
                var card=lib.skill.DIY_paiyi_backup.card;
                player.loseToDiscardpile(card);
                'step 1'
                for(var i of targets) i.damage();
            },
                        ai:{
                            tag:{
                                damage:1,
                            },
                            result:{
                                target:-1.5,
                            },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_paiyi_0":{
                sub:true,
            },
            "DIY_paiyi_1":{
                sub:true,
            },
            "DIY_paiyi_backup":{
            },
            "DIY_paiyi_backup0":{
            },
            "DIY_paiyi_backup1":{
            },
            "DIY_quanji2":{
                audio:"DIY_quanji",
                trigger:{
                    global:"gainAfter",
                },
                frequent:true,
                filter:function(event,player){
        if(player==event.player) return false;
        var evt=event.getl(player);
        return evt&&evt.cards2&&evt.cards2.length>0;
    },
                content:function(){
        'step 0'
        event.count=1;
        'step 1'
        event.count--;
        player.draw();
        'step 2'
        var hs=player.getCards('h');
        if(hs.length){
            if(hs.length==1) event._result={bool:true,cards:hs};
            else player.chooseCard('he',true,'选择一张牌作为“权”');
        }
        else event.goto(4);
        'step 3'
        if(result.bool&&result.cards&&result.cards.length){
            player.addToExpansion(result.cards,'giveAuto',player).gaintag.add('DIY_quanji');
        }
        'step 4'
        if(event.count>0){
            player.chooseBool(get.prompt2('DIY_quanji')).set('frequentSkill','DIY_quanji');
        }
        else event.finish();
        'step 5'
        if(result.bool){
            player.logSkill('DIY_quanji');
            event.goto(1);
        }
    },
            },
            "DIY_quanji3":{
                audio:"DIY_quanji",
                trigger:{
                    source:"damageSource",
                },
                frequent:true,
                preHidden:true,
                filter:function(event,player,name){
        if(!event.card) return false;
        var evt=event.getParent();
        return evt&&evt.card==event.card&&evt.type=='card'&&evt.targets&&evt.targets.length==1;
    },
                content:function(){
        'step 0'
        player.draw();
        'step 1'
        var hs=player.getCards('he');
        if(hs.length>0){
            if(hs.length==1) event._result={bool:true,cards:hs};
            else player.chooseCard('he',true,'选择一张牌作为“权”');
        }
        else event.finish();
        'step 2'
        if(result.bool){
            var cs=result.cards;
            player.addToExpansion(cs,player,'give').gaintag.add('DIY_quanji');
        }
    },
            },
            "DIY_shenduan":{
                trigger:{
                    player:"loseAfter",
                },
                filter:function(event,player){
        if(event.type!='discard') return;
        for(var i=0;i<event.cards2.length;i++){
            if(get.color(event.cards2[i],player)=='black'&&['basic','equip','trick'].contains(get.type(event.cards2[i],event.hs.contains(event.cards2[i])?event.player:false))&&
                get.position(event.cards2[i])=='d'){
                return true;
            }
        }
        return false;
    },
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                content:function(){
        'step 0'
        var cards=[];
        for(var i=0;i<trigger.cards2.length;i++){
            if(get.color(trigger.cards2[i],player)=='black'&&['basic','equip','trick'].contains(get.type(trigger.cards2[i],trigger.hs.contains(trigger.cards2[i])?trigger.player:false))&&
                get.position(trigger.cards2[i])=='d'){
                cards.push(trigger.cards2[i]);
            }
        }
        if(!cards.length){
            event.finish();
        }
        else{
            event.cards=cards;
        }
        'step 1'
        if(event.cards.length){
            player.chooseTarget(get.prompt('DIY_shenduan'),'将'+get.translation(event.cards)+(event.cards.length>1?'中的一张牌':'')+'当做【兵粮寸断】对一名其他角色使用',function(card,player,target){
                var cs=_status.event.cards;
                for(var i=0;i<cs.length;i++){
                    if(player.canUse({name:'bingliang',cards:[cs[i]]},target,false)) return true;
                }
                return false;
            }).set('ai',function(target){
                var player=_status.event.player;
                return get.effect(target,{name:'bingliang'},player,player);
            }).set('cards',cards);
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool&&result.targets&&result.targets.length){
            event.current=result.targets[0];
            if(event.cards.length==1){
                event.directCard=event.cards[0];
            }
            else{
                delete event.directCard;
                player.chooseCardButton('选择一张牌当作兵断寸断使用',event.cards,true).set('filterButton',function(button){
                    return player.canUse({name:'bingliang',cards:[button.link]},_status.event.target,false);
                }).set('target',event.current);
            }
        }
        else{
            event.finish();
        }
        'step 3'
        var card;
        if(event.directCard){
            card=event.directCard;
        }
        else if(result.links&&result.links.length&&
            event.cards.contains(result.links[0])){
            card=result.links[0]
        }
        if(card){
            event.cards.remove(card);
            player.line(event.current);
            player.useCard({name:'bingliang'},event.current,[card],'DIY_shenduan').animate=false;
            event.goto(1);
        }
    },
            },
            "DIY_yonglve":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseJudgeBegin",
                },
                direct:true,
                filter:function(event,player){
        return event.player.countCards('j')>0;
    },
                content:function(){
        'step 0'
        var att=get.attitude(player,trigger.player);
        var nh=trigger.player.countCards('h');
        var eff=get.effect(trigger.player,{name:'sha',isCard:true},player,player);
        if(player.inRange(trigger.player)||!player.canUse({name:'sha',isCard:true},trigger.player,false)) eff=0;
        player.discardPlayerCard(get.prompt('DIY_yonglve',trigger.player),trigger.player,'j').set('ai',function(button){
            var name=button.link.viewAs||button.link.name;
            var att=_status.event.att;
            var nh=_status.event.nh;
            var eff=_status.event.eff;
            var trigger=_status.event.getTrigger();
            if(att>0&&eff>=0) return 1;
            if(att>=0&&eff>0) return 1;
            if(att>0&&(trigger.player.hp>=3)){
                if(name=='lebu'&&nh>trigger.player.hp) return 1;
                if(name=='bingliang'&&nh<trigger.player.hp) return 1;
            }
            return 0;
        }).set('att',att).set('nh',nh).set('eff',eff).set('logSkill',['DIY_yonglve',trigger.player]);
        'step 1'
        if(result.bool){
            if(trigger.player==player){
                event.finish;
                return;
            }
            player.chooseControl('cancel2').set('choiceList',[
            '对'+get.translation(trigger.player)+'造成1点伤害',
            '摸两张牌',
        ]).set('ai',function(){
            var player=_status.event.player,evt=_status.event.getTrigger();
            if(get.damageEffect(evt.player,player,player)>0&&get.effect(evt.trigger.player,evt.card,evt.player,player)<0) return 0;
            return 1;
            });
        }
        'step 2'
        if(result.index==0){
            trigger.player.damage();
        }
        else if(result.index==1) player.draw(2);
    },
            },
            "DIY_mingren":{
                audio:"nzry_mingren_1",
                trigger:{
                    player:["phaseUseBegin","phaseUseEnd"],
                },
                forced:true,
                charlotte:true,
                content:function(){
        'step 0'
        player.draw('bottom');
        player.chooseCard('he',true,'将一张牌置于牌堆顶');
        'step 1'
        if(result&&result.cards){
            event.card=result.cards[0];
            player.lose(result.cards,ui.cardPile,'insert');
            game.log(player,'将',(get.position(event.card)=='h'?'一张牌':event.card),'置于牌堆顶');
            game.broadcastAll(function(player){
                var cardx=ui.create.card();
                cardx.classList.add('infohidden');
                cardx.classList.add('infoflip');
            },player);
            game.updateRoundNumber();
        }
    },
                marktext:"任",
                mark:true,
                onremove:true,
                intro:{
                    mark:function(dialog,content,player){
                        if(get.itemtype(_status.pileTop)!='card') return '牌堆顶无牌';
                        dialog.add([_status.pileTop]);
                    },
                },
                ai:{
                    combo:"DIY_zhenliang",
                },
            },
            "DIY_zhenliang":{
                audio:"nzry_zhenliang_1",
                mark:true,
                locked:false,
                zhuanhuanji:true,
                marktext:"☯",
                intro:{
                    content:function(storage,player,skill){
            if(player.storage.DIY_zhenliang==true) return '当你使用或打出的牌结算完成后，若此牌与“任”颜色相同，则你可以令一名角色摸一张牌。';
            return '出牌阶段，你可以弃置一张与“任”颜色相同的牌并对攻击范围内的一名角色造成1点伤害。';
        },
                },
                group:["DIY_zhenliang_1","DIY_zhenliang_2"],
                subSkill:{
                    "1":{
                        prompt:"弃置一张与“任”颜色相同的牌，并对攻击范围内的一名角色造成1点伤害。",
                        audio:"nzry_zhenliang_1",
                        enable:"phaseUse",
                        filter:function(event,player){
                if(!player.hasSkill('DIY_zhenliang')) return false;
                if(player.storage.DIY_zhenliang==true) return false;
                var card=_status.pileTop;
                if(get.itemtype(_status.pileTop)!='card') return false;
                var color=get.color(card);
                if(player.countCards('he',function(card){
                    return get.color(card)==color;
                })==0) return false;
                return game.hasPlayer(function(current){
                    return player.inRange(current);
                });
            },
                        position:"he",
                        filterCard:function(card,player){
                return get.color(card)==get.color(_status.pileTop);
            },
                        filterTarget:function(card,player,target){
                return player.inRange(target);
            },
                        check:function(card){
                return 6.5-get.value(card);
            },
                        content:function(){
                player.changeZhuanhuanji('DIY_zhenliang');
                target.damage('nocard');
            },
                        ai:{
                            order:5,
                            result:{
                                player:function(player,target){
                        return get.damageEffect(target,player,player);
                    },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:"nzry_zhenliang_1",
                        trigger:{
                            player:["useCardAfter","respondAfter"],
                        },
                        filter:function(event,player){
                if(!player.hasSkill('DIY_zhenliang')) return false;
                if(player.storage.DIY_zhenliang!=true) return false;
                var card=_status.pileTop;
                if(get.itemtype(_status.pileTop)!='card') return false;
                var color=get.color(card);
                return card&&get.color(event.card)==color;
            },
                        direct:true,
                        content:function(){
                "step 0"
                player.chooseTarget(get.prompt('DIY_zhenliang'),'令一名角色摸一张牌').ai=function(target){
                    if(target.hasSkillTag('nogain')) return 0.1;
                    var att=get.attitude(player,target);
                    return att*(Math.max(5-target.countCards('h'),2)+3);
                };
                "step 1"
                if(result.bool){
                    player.changeZhuanhuanji('DIY_zhenliang');
                    player.logSkill('DIY_zhenliang',result.targets);
                    result.targets[0].draw();
                }
            },
                        sub:true,
                    },
                },
                ai:{
                    combo:"DIY_mingren",
                },
            },
            "JX_luzhi_die":{
                trigger:{
                    player:"dieBegin",
                },
                forced:true,
                charlotte:true,
                content:function(){
                    game.delay();
                    game.playTLAoAudio('JX_luzhi_die');
                },
            },
            "DIY_yilie":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseUseBegin",
                },
                group:"DIY_yilie_recover",
                forced:true,
                content:function(){
        'step 0'
        player.chooseTarget('选择一名角色，然后你横置你与其',true,lib.filter.notMe).ai=function(target){
            return -get.attitude(player,target);
        };
        'step 1'
        if(result.bool){
            result.targets[0].link(true);
            player.link(true);
        }
    },
                subSkill:{
                    recover:{
                        audio:"DIY_yilie",
                        trigger:{
                            global:"linkBefore",
                        },
                        forced:true,
                        content:function(){
                            player.recover();
                        },
                        sub:true,
                    },
                },
            },
            "DIY_fenming":{
                audio:"ext:天牢令/image/audio:2",
                mod:{
                    globalFrom:function(from,to){
                        if(from.isLinked()&&to.isLinked()) return -Infinity;
                    },
                    globalTo:function(from,to,distance){
                        if(from.isLinked()&&to.isLinked()) return -Infinity;
                    },
                },
                trigger:{
                    player:"useCardToPlayered",
                },
                group:"DIY_fenming_sha",
                forced:true,
                filter:function(event,player){
                    return event.target.isLinked()&&event.card.name=='sha';
                },
                content:function(){
                    player.draw();
                    trigger.addCount=false;
                    if(player.stat[player.stat.length-1].card.sha>0){
                        player.stat[player.stat.length-1].card.sha--;
                    }
                    player.storage.DIY_fenming=true;
                },
                subSkill:{
                    sha:{
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        filter:function(event,player){
                            return player.storage.DIY_fenming==true;
                        },
                        content:function(){
                            player.loseHp();
                            player.storage.DIY_fenming=false;
                        },
                        sub:true,
                    },
                },
            },
            "DIY_boming":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseBegin",
                },
                mark:true,
                marktext:"博名",
                intro:{
                    name:"博名",
                    content:function(storage,player){
                        var cards=player.getCards('h');
                        var num=0;
                        for(var i=0;i<player.countCards('h');i++){
                            num+=get.number(cards[i]);
                        }
                        var str='<li>当前手牌点数之和：'+get.translation(num);
                        if(player.hasSkill('DIY_boming_1')){
                            str+='<br>你的A/2/3点牌视为J/Q/K点';
                        }
                        if(player.hasSkill('DIY_boming_2')){
                            str+='<br>你的J/Q/K点牌视为A/2/3点';
                        }
                        return str;
                    },
                },
                direct:true,
                content:function(){
        'step 0'
        player.chooseControl('选项一','选项二','cancel2').set('choiceList',[
            '本回合你的A/2/3点牌视为J/Q/K点',
            '本回合你的J/Q/K点牌视为A/2/3点',
        ]).set('ai',function(){
            if(player.countCards('hs',function(card){
                return get.name(card)=='sha'&&player.hasValueTarget(card);
            })>player.getCardUsable({name:'sha'})) return 0;
            return 1;
        });
        'step 1'
        if(result.control!='cancel2'){
            player.logSkill('DIY_boming');
            game.log(player,'选择了','#g【博名】','的','#y'+result.control);
            if(result.index%2==0) player.addTempSkill('DIY_boming_1');
            if(result.index>0) player.addTempSkill('DIY_boming_2');
        }
    },
                subSkill:{
                    "1":{
                        charlotte:true,
                        intro:{
                            name:"博名",
                            content:"你的A/2/3点牌视为J/Q/K点",
                        },
                        mod:{
                            number:function(card,number){
                    if(number==1) return 11;
                    if(number==2) return 12;
                    if(number==3) return 13;
                },
                        },
                        sub:true,
                    },
                    "2":{
                        charlotte:true,
                        intro:{
                            name:"博名",
                            content:"你的J/Q/K点牌视为A/2/3点",
                        },
                        mod:{
                            number:function(card,number){
                    if(number==11) return 1;
                    if(number==12) return 2;
                    if(number==13) return 3;
                },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_xu_pingjian":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                prompt:"展示你的所有手牌",
                direct:true,
                filter:function(event,player){
                    var cards=player.getCards('h');
                    var num=0;
                    for(var i=0;i<player.countCards('h');i++){
                num+=get.number(cards[i]);
            }
                    return player.countCards('h')&&num!=28;
                },
                content:function(){
                    'step 0'
                    player.logSkill('DIY_xu_pingjian');
                    player.showHandcards();
                    'step 1'
                    cards=player.getCards('h');
                    num=0;
                    for(var i=0;i<player.countCards('h');i++){
                        num+=get.number(cards[i]);
                    }
                    if(num==28) event.goto(5);
                    if(num<28){
                        player.draw();
                        event.goto(0);
                    }
                    if(num>28){
                        player.chooseToDiscard(true);
                    }
                    'step 2'
                    player.chooseTarget(get.prompt('DIY_xu_pingjian'),'选择一名角色并弃置其一张牌',function(card,player,target){
                        return target.countCards('he')>0;
                    }).set('ai',function(target){
                        return 2-get.attitude(_status.event.player,target);
                    });
                    'step 3'
                    if(result.bool){
                        var target=result.targets[0];
                        player.discardPlayerCard(target,'he',true);
                        game.delay();
                        event.goto(0);
                    }
                    'step 4'
                    event.goto(0);
                    'step 5'
                    game.delay();
                },
                ai:{
                    order:10,
                },
            },
            "DIY_ziju":{
                trigger:{
                    player:"gainAfter",
                },
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                filter:function(event,player){
        var cards=player.getCards('h');
        var color=get.color(cards[0],player);
        for(var i=1;i<cards.length;i++){
            if(get.color(cards[i],player)!=color) return false;
        }
        return true;
    },
                content:function(){
        player.showHandcards();
        player.draw();
    },
                sub:true,
            },
            "DIY_huaiyi":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                delay:false,
                usable:2,
                marktext:"怀异",
                intro:{
                    name:"怀异",
                    content:function(storage,player){
                        var $=player.getStorage('DIY_huaiyi');
                        var str='你已经发动怀异弃置了'+get.translation($)+'的牌';
                        if(!player.getStorage('DIY_huaiyi').contains('红色')&&!player.getStorage('DIY_huaiyi').contains('黑色')){
                            str='你本回合还未发动过怀异';
                        }
                        return str;
                    },
                },
                filter:function(event,player){
        if(player.countCards('h',{color:'black'})==0&&player.getStorage('DIY_huaiyi').contains('红色')&&!player.getStorage('DIY_huaiyi').contains('黑色')) return false;
        if(player.countCards('h',{color:'red'})==0&&player.getStorage('DIY_huaiyi').contains('黑色')&&!player.getStorage('DIY_huaiyi').contains('红色')) return false;
        if(player.getStorage('DIY_huaiyi').contains('红色')&&player.getStorage('DIY_huaiyi').contains('黑色')) return false;
        return game.hasPlayer(function(target){
            return target.countCards('he')>0&&player!=target;
        });
    },
                content:function(){
        'step 0'
        player.showHandcards();
        'step 1'
        var list=['红色','黑色'];
        if(player.countCards('h',{color:'red'})==0) list.remove('红色');
        if(player.countCards('h',{color:'black'})==0) list.remove('黑色');
        if(player.getStorage('DIY_huaiyi').contains('红色')) list.remove('红色');
        if(player.getStorage('DIY_huaiyi').contains('黑色')) list.remove('黑色');
        player.chooseControl(list).set('ai',function(){
            var player=_status.event.player;
            if(player.countCards('h',{color:'red'})==1&&
            player.countCards('h',{color:'black'})>1) return '红色';
            return '黑色';
        });
        'step 2'
        if(result.control!='cancel2'){
            var cards;
            if(result.control=='红色'){
                player.markAuto('DIY_huaiyi',['红色']);
                cards=player.getCards('h',{color:'red'});
            }
            else{
                player.markAuto('DIY_huaiyi',['黑色']);
                cards=player.getCards('h',{color:'black'});
            }
            player.discard(cards);
            event.num=cards.length;
        }
        else{
            event.finish();
        }
        'step 3'
        player.chooseTarget('请选择至多'+get.cnNumber(event.num)+'名有牌的其他角色，获得这些角色的各一张牌。',[1,event.num],function(card,player,target){
            return target!=player&&target.countCards('he')>0;
        }).set('ai',function(target){
            return -get.attitude(_status.event.player,target)+0.5;
        });
        'step 4'
        if(result.bool&&result.targets){
            player.line(result.targets,'green');
            event.targets=result.targets;
            event.targets.sort(lib.sort.seat);
        }
        else{
            event.finish();
        }
        'step 5'
        if(player.isAlive()&&event.targets.length){
            player.gainPlayerCard(event.targets.shift(),'he',true);
        }
        else event.finish();
        'step 6'
        if(event.targets.length) event.goto(5);
    },
                ai:{
                    order:function(item,player){
            if(player.countCards('h',{color:'red'})==1) return 10;
            if(player.countCards('h',{color:'black'})==1) return 10;
            return 1;
        },
                    result:{
                        player:1,
                    },
                },
                group:["DIY_huaiyi_remove","DIY_huaiyi_damage"],
                subSkill:{
                    remove:{
                        trigger:{
                            global:"phaseUseEnd",
                        },
                        direct:true,
                        content:function(){
                            delete player.storage.DIY_huaiyi;
                        },
                        sub:true,
                    },
                    damage:{
                        trigger:{
                            player:"damageAfter",
                        },
                        usable:2,
                        filter:function(event,player){
        if(player.countCards('h',{color:'black'})==0&&player.getStorage('DIY_huaiyi').contains('红色')&&!player.getStorage('DIY_huaiyi').contains('黑色')) return false;
        if(player.countCards('h',{color:'red'})==0&&player.getStorage('DIY_huaiyi').contains('黑色')&&!player.getStorage('DIY_huaiyi').contains('红色')) return false;
        if(player.getStorage('DIY_huaiyi').contains('红色')&&player.getStorage('DIY_huaiyi').contains('黑色')) return false;
        return game.hasPlayer(function(target){
            return target.countCards('he')>0&&player!=target;
        });
    },
                        content:function(){
        'step 0'
        player.showHandcards();
        'step 1'
        var list=['红色','黑色'];
        if(player.countCards('h',{color:'red'})==0) list.remove('红色');
        if(player.countCards('h',{color:'black'})==0) list.remove('黑色');
        if(player.getStorage('DIY_huaiyi').contains('红色')) list.remove('红色');
        if(player.getStorage('DIY_huaiyi').contains('黑色')) list.remove('黑色');
        player.chooseControl(list).set('ai',function(){
            var player=_status.event.player;
            if(player.countCards('h',{color:'red'})==1&&
            player.countCards('h',{color:'black'})>1) return '红色';
            return '黑色';
        });
        'step 2'
        event.control=result.control;
        var cards;
        if(event.control=='红色'){
            player.markAuto('DIY_huaiyi',['红色']);
            cards=player.getCards('h',{color:'red'});
        }
        else{
            player.markAuto('DIY_huaiyi',['黑色']);
            cards=player.getCards('h',{color:'black'});
        }
        player.discard(cards);
        event.num=cards.length;
        'step 3'
        player.chooseTarget('请选择至多'+get.cnNumber(event.num)+'名有牌的其他角色，获得这些角色的各一张牌。',[1,event.num],function(card,player,target){
            return target!=player&&target.countCards('he')>0;
        }).set('ai',function(target){
            return -get.attitude(_status.event.player,target)+0.5;
        });
        'step 4'
        if(result.bool&&result.targets){
            player.line(result.targets,'green');
            event.targets=result.targets;
            event.targets.sort(lib.sort.seat);
        }
        else{
            event.finish();
        }
        'step 5'
        if(player.isAlive()&&event.targets.length){
            player.gainPlayerCard(event.targets.shift(),'he',true);
        }
        else event.finish();
        'step 6'
        if(event.targets.length) event.goto(5);
    },
                        sub:true,
                    },
                },
            },
            "DIY_beizhu":{
                audio:"ext:天牢令/image/audio:3",
                trigger:{
                    global:"phaseBegin",
                },
                round:1,
                filter:function(event,player){
        return event.player!=player&&event.player.countCards('h')>0;
    },
                content:function(){
        'step 0'
        trigger.player.showHandcards();
        'step 1'
        var hs=trigger.player.getCards('h');
        var cards=trigger.player.getCards('h');
        cards=cards.filter(function(card){
            return hs.contains(card)&&get.name(card,trigger.player)!='shan'&&get.name(card,trigger.player)!='wuxie';
        });
        if(cards.length){
            var card=cards.randomRemove(1)[0];
            trigger.player.useCard(player,false,card).card.DIY_beizhu=true;
            event.redo();
        }
    },
                group:["DIY_beizhu_draw","DIY_beizhu_roundcount"],
                subSkill:{
                    draw:{
                        trigger:{
                            target:"useCardToTargeted",
                        },
                        forced:true,
                        popup:false,
                        filter:function(event,player){
                            return event.card&&event.card.DIY_beizhu;
                        },
                        content:function(){
                            player.draw();
                            player.logSkill('DIY_beizhu');
                        },
                        sub:true,
                    },
                },
            },
            "DIY_zhenlie":{
                group:"DIY_zhenlie2",
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
        return event.player!=player&&event.card&&(event.card.name=='sha'||get.type(event.card)=='trick'||get.type(event.card)=='delay');
    },
                logTarget:"player",
                check:function(event,player){
        if(event.getParent().excluded.contains(player)) return false;
        if(get.attitude(player,event.player)>0){
            return false;
        }
        if(get.tag(event.card,'respondSha')){
            return true;
        }
        else if(get.tag(event.card,'respondShan')){
            return true;
        }
        else if(get.tag(event.card,'damage')){
            if(event.card.name=='shuiyanqijunx') return player.countCards('e')==0;
            return true;
        }
        else if((event.card.name=='shunshou'||(event.card.name=='zhujinqiyuan'&&(event.card.yingbian||get.distance(event.player,player)<0)))&&player.hp>1){
            return true;
        }
        else if(event.card.name=='lebu'||event.card.name=='bingliang'){
            return true;
        }
        return false;
    },
                trigger:{
                    global:["yintieqi","DIY_tieqi"],
                    target:"useCardToTarget",
                },
                content:function(){
        "step 0"
        if(trigger.name=="yintieqi"||trigger.name=="DIY_tieqi"){
            trigger.cancel();
        }
        trigger.cancel();
        trigger.targets.remove(player);
        trigger.getParent().triggeredTargets2.remove(player);
        trigger.untrigger();
        trigger.getParent().excluded.add(player);
        player.judge(function(card){
            return get.color(card)=='black'?1:-1;
        }).judge2=function(result){
            return result.bool;
        };
        "step 1"
        if(!result.bool){
            player.loseHp();
            event.finish();
        }
        "step 2"
        if(trigger.player.countCards('he')){
            player.discardPlayerCard(trigger.player,'he',true);
        }
    },
                ai:{
                    expose:0.3,
                },
            },
            "DIY_zhenlie2":{
                audio:"DIY_zhenlie",
                trigger:{
                    player:"judge",
                },
                prompt:"是否亮出牌堆顶的一张牌代替此判定牌",
                check:function(event,player){
        return event.judge(player.judging[0])<0;
    },
                content:function(){
        "step 0"
        var card=get.cards()[0];
        event.card=card;
        game.cardsGotoOrdering(card).relatedEvent=trigger;
        "step 1"
        player.$throw(card);
        if(trigger.player.judging[0].clone){
            trigger.player.judging[0].clone.classList.remove('thrownhighlight');
            game.broadcast(function(card){
                if(card.clone){
                    card.clone.classList.remove('thrownhighlight');
                }
            },trigger.player.judging[0]);
            game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
        }
        game.cardsDiscard(trigger.player.judging[0]);
        trigger.player.judging[0]=card;
        game.log(trigger.player,'的判定牌改为',card);
        game.delay(2);
    },
            },
            "DIY_miji":{
                trigger:{
                    player:["phaseZhunbeiBegin","phaseJieshuBegin"],
                },
                audio:"ext:天牢令/image/audio:2",
                content:function(){
        'step 0'
        player.judge(function(card){
            return get.color(card)=='black'?1:-1;
        }).judge2=function(result){
            return result.bool;
        };
        'step 1'
        if(result.bool){
            var num=Math.max(1,player.maxHp-player.hp);
            var cards=get.cards(num);
            event.cards=cards;
            player.chooseTarget(true).set('ai',function(target){
                return get.attitude(player,target)/Math.sqrt(1+target.countCards('h'));
            }).set('createDialog',['请选择一名角色获得这些牌',event.cards]);
        }
        else{
            event.finish();
        }
        'step 2'
        player.line(result.targets);
        result.targets[0].gain(event.cards,'draw');
    },
                ai:{
                    effect:{
                        target:function(card,player,target){
                if(get.tag(card,'recover')&&target.hp==target.maxHp-1) return [0,0];
                if(target.hasFriend()){
                    if((get.tag(card,'damage')==1||get.tag(card,'loseHp'))&&target.hp==target.maxHp) return [0,1];
                }
            },
                    },
                    threaten:function(player,target){
            if(target.hp==1) return 3;
            if(target.hp==2) return 2;
            return 1;
        },
                },
            },
            "DIY_suzhi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["useCardToPlayered","useCard","phaseDrawBegin1","phaseUseBegin","damageEnd","phaseDiscardBegin","respond"],
                },
                filter:function(event){
                    if(event.name=="useCardToPlayered") return get.tag(event.card,'damage');
                    return true;
                },
                intro:{
                    content:"$",
                },
                initList:function(){
        var list=[];
        if(_status.connectMode) var list=get.charactersOL();
        else{
            var list=[];
            for(var i in lib.character){
                if(lib.filter.characterDisabled2(i)||lib.filter.characterDisabled(i)) continue;
                list.push(i);
            }
        }
        game.countPlayer2(function(current){
            list.remove(current.name);
            list.remove(current.name1);
            list.remove(current.name2);
            if(current.storage.rehuashen&&current.storage.rehuashen.character) list.removeArray(current.storage.rehuashen.character)
        });
        _status.characterlist=list;
    },
                frequent:true,
                content:function(){
        'step 0'
        if(player.storage.DIY_suzhi_skill) player.removeSkill(player.storage.DIY_suzhi_skill);
        var Group=lib.group.filter(function(group){
            return game.hasPlayer(function(current){
                return current.group==group;
            });
        });
		if(!Group.contains('jin')) Group.push('jin');
		event.num=Group.length;
        player.chooseControl(Group);
        'step 1'
        group=result.control;
        'step 2'
        if(!player.storage.DIY_suzhi) player.storage.DIY_suzhi=[];
        event._result={bool:true};
        'step 3'
        if(result.bool){
            if(!_status.characterlist){
                lib.skill.DIY_suzhi.initList();
            }
            var list=[];
            var skills=[];
            var map=[];
            _status.characterlist.randomSort();
            var name2=event.triggername;
            for(var i=0;i<_status.characterlist.length;i++){
                var name=_status.characterlist[i];
                if(name.indexOf('zuoci')!=-1||name.indexOf('xushao')!=-1) continue;
                if(lib.character[name][1]!=group) continue;
                var skills2=lib.character[name][3];
                for(var j=0;j<skills2.length;j++){
                    if(player.storage.DIY_suzhi.contains(skills2[j])) continue;
                    if(skills.contains(skills2[j])){
                        list.add(name);
                        if(!map[name]) map[name]=[];
                        map[name].push(skills2[j]);
                        skills.add(skills2[j]);
                        continue;
                    }
                    var list2=[skills2[j]];
                    game.expandSkills(list2);
                    for(var k=0;k<list2.length;k++){
                        var info=lib.skill[list2[k]];
                        if(!info||!info.trigger||!info.trigger.player||info.silent||info.limited||info.juexingji||info.zhuanhuanji||info.hiddenSkill||info.dutySkill) continue;
                        if(info.trigger.player==name2||Array.isArray(info.trigger.player)&&info.trigger.player.contains(name2)){
                            if(info.init||info.ai&&(info.ai.combo||info.ai.notemp||info.ai.neg)) continue;
                            if(info.filter){
                                try{
                                    var bool=info.filter(trigger,player,name2);
                                    if(!bool) continue;
                                }
                                catch(e){
                                    continue;
                                }
                            }
                            list.add(name);
                            if(!map[name]) map[name]=[];
                            map[name].push(skills2[j]);
                            skills.add(skills2[j]);
                            break;
                        }
                    }
                }
                if(list.length>event.num-1) break;
            }
            if(!skills.length){
                //player.draw();
                event.finish();
            }
            else{
                //skills.unshift('摸一张牌');
                player.chooseControl(skills).set('dialog',['请选择要发动的技能',[list,'character']]).set('ai',function(){return skills.randomGet()});
            }
        }
        else event.finish();
        'step 4'
        if(result.control=='摸一张牌'){
            player.draw();
            return;
        }
        player.addTempSkill(result.control,{player:result.control+'After'});
        player.storage.DIY_suzhi_skill=result.control;
    },
                group:"DIY_suzhi_remove",
                subSkill:{
                    remove:{
                        trigger:{
                            player:["useCardAfter","phaseDrawBegin2","phaseUseAfter","phaseDiscardAfter","respondAfter"],
                        },
                        direct:true,
                        content:function(){
                            if(player.storage.DIY_suzhi_skill) player.removeSkill(player.storage.DIY_suzhi_skill);
                        },
                    },
                },
            },
            "DIY_zhaoxin":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"gameDrawAfter",
                    player:["showCharacterAfter","enterGame"],
                },
                mark:true,
                marktext:"昭心",
                intro:{
                    name:"昭心",
                    content:function(storage,player){
                        var mode=get.mode();
                        if(mode=='identity'&&player.identity=="nei"){
                            var num=game.players.length-player.getFriends(true).length;
                        }
                        else var num=player.getFriends(true).length;
                        var num2=player.countMark("DIY_zhaoxin");
                        var num3=num-num2;
                        var str='<li>本回合还可发动昭心'+get.translation(num3)+'次';
                        return str;
                    },
                },
                init:function(player){
                    player.storage.DIY_zhaoxin=[];
                },
                skillAnimation:true,
                animationColor:"thunder",
                forced:true,
                group:["DIY_zhaoxin2","DIY_zhaoxin3","DIY_zhaoxin_remove"],
                content:function(){
                    if(get.mode()=='identity'){
                        player.showIdentity();
                        player.update();
                    }
                },
                subSkill:{
                    remove:{
                        trigger:{
                            global:"phaseEnd",
                        },
                        silent:true,
                        filter:function(event,player){
                            return player.countMark("DIY_zhaoxin")>0;
                        },
                        content:function(){lib.skill.DIY_zhaoxin.init(player)},
                        forced:true,
                        direct:true,
                        sub:true,
                        popup:false,
                    },
                },
            },
            "DIY_zhaoxin2":{
                audio:"DIY_zhaoxin",
                trigger:{
                    player:"damageBegin2",
                },
                direct:true,
                filter:function(event,player){
                    var mode=get.mode();
                    if(mode=='identity'&&player.identity=="nei"){
                        var num=game.players.length-player.getFriends(true).length;
                    }
                    else var num=player.getFriends(true).length;
                    if(player.countMark("DIY_zhaoxin")>=num) return false;
                    return player.countCards('he')>0;
                },
                content:function (){
                    'step 0'
                    var next=player.chooseToDiscard(get.prompt('DIY_zhaoxin'),'he');
                    next.set('prompt2','弃置一张牌并防止此伤害');
                    next.set('ai',function(card){
                        var player=_status.event.player;
                        if(player.hp==1||_status.event.getTrigger().num>1){
                            return 9-get.value(card);
                        }
                        if(player.hp==2){
                            return 8-get.value(card);
                        }
                        if(player.countCards('h',function(card){
                            return get.color(name)=='tao'||get.color(name)=='jiu';
                        })) return 0;
                        return 7-get.value(card);
                    });
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_zhaoxin2');
                        player.addMark('DIY_zhaoxin',1,false);
                        trigger.cancel();
                        event.trigger("damageEnd");
                    }
                },
            },
            "DIY_zhaoxin3":{
                audio:"DIY_zhaoxin",
                trigger:{
                    source:"damageBegin1",
                },
                direct:true,
                filter:function(event,player){
                    var mode=get.mode();
                    if(mode=='identity'&&player.identity=="nei"){
                        var num=game.players.length-player.getFriends(true).length;
                    }
                    else var num=player.getFriends(true).length;
                    if(player.countMark("DIY_zhaoxin")>=num) return false;
                    return player.countCards('he')>0;
                },
                content:function (){
                    'step 0'
                    var goon=(get.attitude(player,trigger.player)<0);
                    var next=player.chooseToDiscard(get.prompt('DIY_zhaoxin',trigger.player),'he');
                    next.set('prompt2','弃置一张牌令伤害翻倍');
                    next.set('ai',function(card){
                        if(_status.event.goon){
                            return 8-get.value(card);
                        }
                        return 0;
                    });
                    next.set('goon',goon);
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_zhaoxin3',trigger.player);
                        player.addMark('DIY_zhaoxin',1,false);
                        trigger.num+=trigger.num;
                    }
    },
            },
            "DIY_gangao":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"dying",
                },
                forced:true,
                filter:function(event,player){
        return event.player!=player;
    },
                content:function(){
        player.gainMaxHp();
        player.recover();
    },
                ai:{
                    threaten:1.5,
                },
            },
            "DIY_juyi":{
                skillAnimation:true,
                animationColor:"thunder",
                audio:"ext:天牢令/image/audio:2",
                derivation:["DIY_niangjue","weizhong"],
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                filter:function(event,player){
        return player.maxHp>game.players.length&&!player.storage.DIY_juyi;
    },
                forced:true,
                unique:true,
                juexingji:true,
                content:function(){
        player.draw(player.maxHp);
        player.addSkill('DIY_niangjue');
        player.addSkill('weizhong');
        player.storage.DIY_juyi=true;
        player.awakenSkill('DIY_juyi');
    },
            },
            "DIY_niangjue":{
                trigger:{
                    player:["phaseDrawBefore","phaseDiscardBefore"],
                },
                group:"DIY_niangjue2",
                forced:true,
                audio:"ext:天牢令/image/audio:2",
                content:function(){
            trigger.cancel();
            game.log(player,'跳过了',event.triggername=='phaseDrawBefore'?'摸牌阶段':'弃牌阶段');
    },
            },
            "DIY_niangjue2":{
                trigger:{
                    player:"phaseJieshuBefore",
                },
                forced:true,
                audio:"DIY_niangjue",
                content:function(){
        'step 0'
        player.judge(function(card){
            if(get.suit(card)=="club") return 2;
            return 0;
        }).judge2=function(result){
            return result.bool?true:false;
        };
        'step 1'
        if(!result.bool){
            player.loseMaxHp();
        }
    },
            },
            "DIY_xiansi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                direct:true,
                content:function(){
        "step 0"
        player.chooseTarget(get.prompt('DIY_xiansi'),[1,2],function(card,player,target){
            return target.countCards('he')>0;
        },function(target){
            return -get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            result.targets.sortBySeat();
            player.logSkill('DIY_xiansi',result.targets);
            event.targets=result.targets;
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.targets.length){
            var target=event.targets.shift();
            event.current=target;
            player.choosePlayerCard(target,true);
        }
        else{
            event.finish();
        }
        "step 3"
        if(result.bool){
            player.addToExpansion(result.cards,event.current,'give').gaintag.add('DIY_xiansi');
            event.goto(2);
        }
    },
                mark:true,
                marktext:"逆",
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                onremove:function(player,skill){
        var cards=player.getExpansions(skill);
        if(cards.length) player.loseToDiscardpile(cards);
    },
                ai:{
                    threaten:2,
                },
                group:["DIY_xiansi3","DIY_xiansi4","DIY_xiansi5"],
                global:"DIY_xiansi2",
            },
            "DIY_xiansi2":{
                enable:"chooseToUse",
                audio:"ext:天牢令/image/audio:2",
                viewAs:{
                    name:"sha",
                    isCard:true,
                },
                filter:function(event,player){
        return game.hasPlayer(function(current){
            return current.hasSkill('DIY_xiansi')&&current.getExpansions('DIY_xiansi').length>1&&event.filterTarget({name:'sha'},player,current);
        });
    },
                filterTarget:function(card,player,target){
        var bool=false;
        var players=ui.selected.targets.slice(0);
        for(var i=0;i<players.length;i++){
            if(players[i].hasSkill('DIY_xiansi')&&players[i].getExpansions('DIY_xiansi').length>1) bool=true;break;
        }
        if(!bool&&(!target.hasSkill('DIY_xiansi')||target.getExpansions('DIY_xiansi').length<=1)) return false;
        return _status.event._backup.filterTarget.apply(this,arguments);
    },
                complexSelect:true,
                selectCard:-1,
                filterCard:function(){
        return false;
    },
                forceaudio:true,
                direct:true,
                prompt:"将一名有【逆】的角色的两张【逆】当作【杀】对包含其在内的角色使用。",
                delay:false,
                log:false,
                precontent:function(){
        "step 0"
        var targets=game.filterPlayer(function(current){
            if(event.result.targets.contains(current)&&current.getExpansions('DIY_xiansi')){
                return current.getExpansions('DIY_xiansi').length>1;
            }
            return false;
        });
        if(targets.length==1){
            event.target=targets[0];
            event.goto(2);
        }
        else if(targets.length>0){
            player.chooseTarget(true,'选择弃置【陷嗣】牌的目标',function(card,player,target){
                return _status.event.list.contains(target);
            }).set('list',targets).set('ai',function(target){
                var player=_status.event.player;
                return get.attitude(player,target);
            });
        }
        else{
            event.finish();
        }
        "step 1"
        if(result.bool&&result.targets.length){
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.target){
            if(event.target.getExpansions('DIY_xiansi').length==2){
                event.directresult=event.target.getExpansions('DIY_xiansi').slice(0);
            }
            else{
                player.chooseCardButton('移去两张“逆”',2,event.target.getExpansions('DIY_xiansi'),true);
            }
        }
        else{
            event.finish();
        }
        "step 3"
        if(event.directresult||result.bool){
            player.logSkill('DIY_xiansi2',event.target);
            var links=event.directresult||result.links;
            target.gain(links);
        }
    },
                ai:{
                    order:function(){
            return get.order({name:'sha'})+0.05;
        },
                    yingbian:function(card,player,targets,viewer){
            if(get.attitude(viewer,player)<=0) return 0;
            var base=0,hit=false;
            if(get.cardtag(card,'yingbian_hit')){
                hit=true;
                if(targets.filter(function(target){
                    return target.hasShan()&&get.attitude(viewer,target)<0&&get.damageEffect(target,player,viewer,get.nature(card))>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_all')){
                if(game.hasPlayer(function(current){
                    return !targets.contains(current)&&lib.filter.targetEnabled2(card,player,current)&&get.effect(current,card,player,player)>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_damage')){
                if(targets.filter(function(target){
                    return get.attitude(player,target)<0&&(hit||!target.mayHaveShan()||player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                    },true))&&!target.hasSkillTag('filterDamage',null,{
                        player:player,
                        card:card,
                        jiu:true,
                    })
                })) base+=5;
            }
            return base;
        },
                    canLink:function(player,target,card){
            if(!target.isLinked()&&!player.hasSkill('wutiesuolian_skill')) return false;
            if(target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                target:target,
                card:card,
            },true)) return false;
            if(player.hasSkill('jueqing')||player.hasSkill('gangzhi')||target.hasSkill('gangzhi')) return false;
            return true;
        },
                    basic:{
                        useful:[5,3,1],
                        value:[5,3,1],
                    },
                    result:{
                        target:function(player,target,card,isLink){
                var eff=function(){
                    if(!isLink&&player.hasSkill('jiu')){
                        if(!target.hasSkillTag('filterDamage',null,{
                            player:player,
                            card:card,
                            jiu:true,
                        })){
                            if(get.attitude(player,target)>0){
                                return -7;
                            }
                            else{
                                return -4;
                            }
                        }
                        return -0.5;
                    }
                    return -1.5;
                }();
                if(!isLink&&target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                },true)) return eff/1.2;
                return eff;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function(card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function(card){
                if(card.nature) return 1;
            },
                        fireDamage:function(card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function(card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function(card,nature){
                if(card.nature=='poison') return 1;
            },
                    },
                },
            },
            "DIY_xiansi3":{
                audio:"DIY_xiansi",
                trigger:{
                    target:"useCardToTarget",
                },
                forced:true,
                filter:function(event,player){
        return event.card.name=='sha'&&event.card.isCard&&event.cards.length==1&&get.position(event.cards[0],true)=='o'&&event.card.name==event.cards[0].name;
    },
                content:function(){
        trigger.targets.remove(player);
        trigger.getParent().triggeredTargets2.remove(player);
        trigger.untrigger();
        var card=trigger.cards[0];
        player.addToExpansion(card,'gain2').gaintag.add('DIY_xiansi');
        game.delay();
    },
            },
            "DIY_xiansi4":{
                audio:"DIY_xiansi2",
                trigger:{
                    target:"useCardToTargeted",
                },
                forced:true,
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        return true;
    },
                content:function(){
        var card=trigger.cards[0];
        player.gain(card,'gain2');
        trigger.directHit.add(player);
        game.delay();
    },
            },
            "DIY_xiansi5":{
                trigger:{
                    global:"addToExpansionBegin",
                },
                audio:"DIY_xiansi",
                forced:true,
                filter:function(event,player){
                    if(event.getParent().name=='xinpojun'||event.getParent().name=='repojun'||event.getParent().name=='decadepojun') return false;
                    return event.getParent().name!='DIY_xiansi'&&event.getParent().name!='DIY_xiansi3'&&event.getParent().name!='DIY_xiansi5';
                },
                content:function(){
                    trigger.cancel();
                    var card=trigger.cards;
                    player.$gain2(card);
                    player.addToExpansion(card,'gain2').gaintag.add('DIY_xiansi');
                },
            },
            "DIY_qixi":{
                audio:"ext:天牢令/image/audio:2",
                enable:"chooseToUse",
                filterCard:function(card){
        return get.color(card)=='black';
    },
                group:"DIY_qixi2",
                position:"hes",
                viewAs:{
                    name:"guohe",
                },
                viewAsFilter:function(player){
        if(!player.countCards('hes',{color:'black'})) return false;
    },
                prompt:"将一张黑色牌当【过河拆桥】使用",
                check:function(card){return 4-get.value(card)},
                ai:{
                    basic:{
                        order:9,
                        useful:5,
                        value:5,
                    },
                    yingbian:function(card,player,targets,viewer){
            if(get.attitude(viewer,player)<=0) return 0;
            if(game.hasPlayer(function(current){
                return !targets.contains(current)&&lib.filter.targetEnabled2(card,player,current)&&get.effect(current,card,player,player)>0;
            })) return 6;
            return 0;
        },
                    result:{
                        target:function(player,target){
                var att=get.attitude(player,target);
                var nh=target.countCards('h');
                if(att>0){
                    if(target.countCards('j',function(card){
                        var cardj=card.viewAs?{name:card.viewAs}:card;
                        return get.effect(target,cardj,target,player)<0;
                    })>0) return 3;
                    if(target.getEquip('baiyin')&&target.isDamaged()&&
                        get.recoverEffect(target,player,player)>0){
                        if(target.hp==1&&!target.hujia) return 1.6;
                    }
                    if(target.countCards('e',function(card){
                        if(get.position(card)=='e') return get.value(card,target)<0;
                    })>0) return 1;
                }
                var es=target.getCards('e');
                var noe=(es.length==0||target.hasSkillTag('noe'));
                var noe2=(es.filter(function(esx){
                    return get.value(esx,target)>0;
                }).length==0);
                var noh=(nh==0||target.hasSkillTag('noh'));
                if(noh&&(noe||noe2)) return 0;
                if(att<=0&&!target.countCards('he')) return 1.5;
                return -1.5;
            },
                    },
                    tag:{
                        loseCard:1,
                        discard:1,
                    },
                },
            },
            "DIY_qixi2":{
                trigger:{
                    player:"useCardToTargeted",
                },
                filter:function(event,player){
        if(event.card.name=='guohe') return true;
    },
                charlotte:true,
                forced:true,
                audio:"DIY_qixi",
                content:function(){
        'step 0'
        var card=trigger.cards[0];
        card.init([card.suit,card.number,'shunshou']);
        player.useCard(card,trigger.target);
        trigger.targets.remove(trigger.target);
        trigger.getParent().triggeredTargets2.remove(trigger.target);
        trigger.untrigger();
        'step 1'
        var suit=['spade','heart','diamond','club'].randomGet();
        if(get.isLuckyStar(player)) suit=['spade','club'].randomGet();
        var hs=player.getCards('h');
                for(var i=0;i<hs.length;i++){
                    if(hs[i].suit==suit){
                        hs.splice(i--,1);
                    }
                }
                if(hs.length){
                    var card=hs.randomGet();
                    card.init([suit,card.number,card.name]);
                    game.log(player,'将一张手牌的花色更改为'+get.translation(suit));
                }
    },
            },
            "DIY_kanpo":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"TLAoLogSkillBefore",
                },
                logTarget:"player",
                check:function(event,player){
                    return get.attitude(player,event.player) < 0;
                },
                filter:function(event,player){
                    if(event.player == player)return false;
                    var skill = event.skill;
                    var info = get.info(skill);
                    if(!info)return false;
                    if(info.forced)return false;
                    if(info.charlotte)return false;
                    if(info.direct)return false;
                    var skills = event.player.getOriginalSkills();
                    if(skills.contains(skill))return true;
                    for(var s of skills){
                        var info = get.info(s);
                        if(info && info.subSkill){
                            for(var i in info.subSkill){
                                if(s+"_"+i == skill){
                                    return true;
                                }
                            }
                        }
                    }
                    return false;
                },
                content:function(){
                    'step 0'
                    player.say(["你的〖"+get.translation(trigger.skill)+"〗被看穿了","〖"+get.translation(trigger.skill)+"〗小计，不足挂齿"].randomGet());
                    trigger.cancel();
                    'step 1'
                    var evt=_status.event.getParent('phase');
                    if(evt){
                        game.resetSkills();
                        _status.event=evt;
                        _status.event.finish();
                        _status.event.untrigger(true);
                    }
                },
            },
            "DIY_bazhen":{
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                group:"DIY_bazhen_bagua",
                locked:true,
            },
            "DIY_bazhen_bagua":{
                audio:"DIY_bazhen",
                audioname:["re_sp_zhugeliang","ol_sp_zhugeliang","ol_pangtong"],
                equipSkill:true,
                noHidden:true,
                inherit:"bagua_skill",
                filter:function(event,player){
        if(!lib.skill.bagua_skill.filter(event,player)) return false;
        return true;
    },
                ai:{
                    respondShan:true,
                    effect:{
                        target:function(card,player,target){
                if(player==target&&get.subtype(card)=='equip2'){
                    if(get.equipValue(card)<=7.5) return 0;
                }
                return lib.skill.bagua_skill.ai.effect.target.apply(this,arguments);
            },
                    },
                },
                trigger:{
                    player:["chooseToRespondBegin","chooseToUseBegin"],
                },
                check:function(event,player){
        if(event&&(event.ai||event.ai1)){
            var ai=event.ai||event.ai1;
            var tmp=_status.event;
            _status.event=event;
            var result=ai({name:'shan'},_status.event.player,event);
            _status.event=tmp;
            return result>0;
        }
        return true;
    },
                content:function(){
        "step 0"
        trigger.bagua_skill=true;
        player.judge('bagua',function(card){
            if(player.isEmpty(2)&&get.color(card)=='red') return 1.5;
            if(!player.isEmpty(2)&&get.suit(card)!='spade') return 1.5;
            return -0.5;
            }).judge2=function(result){
            return result.bool;
        };
        "step 1"
        if(result.judge>0){
            trigger.untrigger();
            trigger.set('responded',true);
            trigger.result={bool:true,card:{name:'shan',isCard:true}}
        }
    },
            },
            "DIY_huoji":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filterCard:function(card){
        return get.color(card)=='red';
    },
                viewAs:{
                    name:"huogong",
                    nature:"fire",
                },
                group:"DIY_huoji2",
                viewAsFilter:function(player){
        if(!player.countCards('hes',{color:'red'})) return false;
    },
                position:"hes",
                prompt:"将一张红色牌当火攻使用",
                check:function(card){
        var player=_status.currentPhase;
        if(player.countCards('h')>player.hp){
            return 6-get.value(card);
        }
        return 3-get.value(card)
    },
                ai:{
                    fireAttack:true,
                    basic:{
                        order:4,
                        value:[3,1],
                        useful:1,
                    },
                    wuxie:function(target,card,player,current,state){
            if(get.attitude(current,player)>=0&&state>0) return false;
        },
                    result:{
                        player:function(player){
                var nh=player.countCards('h');
                if(nh<=player.hp&&nh<=4&&_status.event.name=='chooseToUse'){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'},player,_status.event)){
                        return -10;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -10;
                        if(viewAs&&viewAs.name=='huogong') return -10;
                    }
                }
                return 0;
            },
                        target:function(player,target){
                if(target.hasSkill('huogong2')||target.countCards('h')==0) return 0;
                if(player.countCards('h')<=1) return 0;
                if(target==player){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'},player,_status.event)){
                        return -1.5;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -1.5;
                        if(viewAs&&viewAs.name=='huogong') return -1.5;
                    }
                    return 0;
                }
                return -1.5;
            },
                    },
                    tag:{
                        damage:1,
                        fireDamage:1,
                        natureDamage:1,
                        norepeat:1,
                    },
                },
            },
            "DIY_huoji2":{
                trigger:{
                    player:"useCardToTargeted",
                },
                filter:function(event,player){
        if(event.card.name=='huogong') return true;
    },
                charlotte:true,
                forced:true,
                audio:"DIY_huoji",
                content:function(){
        'step 0'
        trigger.cancel();
        target=trigger.target;
        player.chooseCard(true).ai=function(card){
            if(_status.event.getRand()<0.5) return Math.random();
            return get.value(card);
        };
        'step 1'
        event.card2=result.cards[0];
        player.showCards(event.card2);
        suit=get.suit(event.card2)
        trigger.target.chooseToDiscard('火计：请弃置一张'+get.translation(suit)+'牌，否则受到一点火焰伤害','h',function(card){
            return get.suit(card)==_status.event.suit;
        }).set('ai',function(card){
            return 8-get.value(card);
        }).set('suit',suit);
        'step 2'
        if(!result.bool){
            trigger.target.damage('fire',1);
        }
        'step 3'
        trigger.targets.remove(trigger.target);
        trigger.getParent().triggeredTargets2.remove(trigger.target);
        trigger.untrigger();
        game.delay(2);
    },
            },
            "DIY_qianxun2":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:"DIY_qianxun",
                filter:function(event,player){
        return player.getStorage('DIY_qianxun').length>0;
    },
                content:function(){
        var cards=player.getExpansions('DIY_qianxun');
        if(cards.length) player.gain(cards,'draw');
        player.unmarkAuto('DIY_qianxun',[cards]);
    },
            },
            "DIY_qianxun":{
                audio:"ext:天牢令/image/audio:2",
                enable:["chooseToUse","chooseToRespond"],
                filter:function(event,player){
        return player.getStorage('DIY_qianxun').length>0&&(event.filterCard({name:'sha'},player,event)||event.filterCard({name:'shan'},player,event));
    },
                chooseButton:{
                    dialog:function(event,player){
            var dialog=ui.create.dialog('谦逊','hidden');
            if(event.filterCard({name:'sha'},player,event)&&event.filterCard({name:'shan'},player,event)){
                dialog._chooseButton=2;
                var table=document.createElement('div');
                table.classList.add('add-setting');
                table.style.margin='0';
                table.style.width='100%';
                table.style.position='relative';
                var list=['sha','shan'];
                for(var i of list){
                    if(player.isDisabled(i)) continue;
                    var td=ui.create.div('.shadowed.reduce_radius.pointerdiv.tdnode');
                    td.innerHTML='<span>'+get.translation(i)+'</span>';
                    td.link=i;
                    td.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
                    for(var j in lib.element.button){
                        td[j]=lib.element.button[j];
                    }
                    table.appendChild(td);
                    dialog.buttons.add(td);
                }
                dialog.content.appendChild(table);
            }
            else dialog._cardName=event.filterCard({name:'sha'},player,event)?'sha':'shan';
            dialog.add(player.storage.DIY_qianxun);
            return dialog;
        },
                    filter:function(button){
            var evt=_status.event,player=_status.event.player;
            if(!evt.dialog._chooseButton){
                var evt2=_status.event.getParent();
                return evt2.filterCard(get.autoViewAs({name:evt.dialog._cardName},[button.link]),player,evt2);
            }
            if(ui.selected.buttons.length){
                var str=ui.selected.buttons[0].link;
                if(typeof str!='string'||typeof button.link=='string') return false;
                var evt2=_status.event.getParent();
                return evt2.filterCard(get.autoViewAs({name:str},[button.link]),player,evt2);
            }
            return typeof button.link=='string';
        },
                    select:function(){
            return (_status.event.dialog._chooseButton||1);
        },
                    backup:function(links,player){
            var card,name;
            if(links.length==2){
                name=links[0];
                card=links[1];
            }
            else{
                card=links[0];
                var event=_status.event;
                name=event.filterCard(get.autoViewAs({name:'sha'},[card]),player,event)?'sha':'shan';
            }
            return {
                audio:'DIY_qianxun',
                filterCard:function(){return false},
                selectCard:-1,
                card:card,
                viewAs:get.autoViewAs({name:name},card),
                card:card,
                precontent:function(){
                    var card=lib.skill.DIY_qianxun_backup.card;
                    player.unmarkAuto('DIY_qianxun',[card]);
                    event.result.card={name:event.result.card.name};
                    event.result.cards=[card];
                },
            }
        },
                    prompt:function(links,player){
            return '请选择【杀】的目标';
        },
                },
                ai:{
                    respondSha:true,
                    respondShan:true,
                    skillTagFilter:function(player,tag,arg){
            return player.getStorage('DIY_qianxun').length>0;
        },
                    order:1,
                    result:{
                        player:1,
                    },
                },
                group:["DIY_qianxun_place","DIY_qianxun2"],
                subSkill:{
                    place:{
                        audio:"DIY_qianxun",
                        trigger:{
                            target:"useCardToBegin",
                            player:"judgeBefore",
                        },
                        filter:function(event,player){
                            if(player.countCards('h')==0) return false;
                            if(event.getParent().name=='phaseJudge'){
                                return true;
                            }
                            if(event.name=='judge') return false;
                            if(event.targets&&event.targets.length>1) return false;
                            if(event.card&&(event.card.name='sha'||get.type(event.card)=='trick')&&event.player!=player) return true;
            },
                        content:function(){
                var cards=player.getCards('h');
                player.addToExpansion(cards,'giveAuto',player).gaintag.add('DIY_qianxun');
                player.markAuto('DIY_qianxun',cards);
                player.$gain2(cards,false);
                game.delayx();
            },
                        sub:true,
                    },
                    backup:{
                        audio:"DIY_qianxun",
                        sub:true,
                    },
                },
                intro:{
                    content:"cards",
                    onunmark:"throw",
                },
            },
            "DIY_lianying":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
                },
                direct:true,
                filter:function(event,player){
        if(player.countCards('h')) return false;
        var evt=event.getl(player);
        return evt&&evt.hs&&evt.hs.length;
    },
                content:function(){
        "step 0"
        var num=trigger.getl(player).hs.length;
        player.chooseTarget(get.prompt('DIY_lianying'),'令至多'+get.cnNumber(num)+'名角色各摸一张牌',[1,num]).ai=function(target){
            var player=_status.event.player;
            if(player==target) return get.attitude(player,target)+10;
            return get.attitude(player,target);
        }
        "step 1"
        if(result.bool){
            player.logSkill('DIY_lianying',result.targets);
            game.asyncDraw(result.targets);
        }
        else event.finish();
        "step 2"
        game.delay();
    },
                ai:{
                    threaten:0.8,
                    effect:{
                        target:function(card){
                if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
            },
                    },
                    noh:true,
                },
            },
            "DIY_guanxing_zhuge":{
                trigger:{
                    global:["drawBegin","judgeBegin"],
                },
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                filter:function(){
        return ui.cardPile.childNodes.length>0;
    },
                content:function(){
        'step 0'
        player.logSkill("DIY_guanxing_zhuge");
        player.chooseButton(['观星：请选择要置于牌堆'+(trigger.bottom?'底':'顶')+'的牌（先选择的在上）',Array.from(ui.cardPile.childNodes)],[1,trigger.num||1]);
        'step 1'
        if(result.bool){
            while(result.links.length){
                if(trigger.bottom){
                    var card=result.links.shift();
                    ui.cardPile.removeChild(card);
                    ui.cardPile.appendChild(card);
                }
                else{
                    var card=result.links.pop();
                    ui.cardPile.removeChild(card);
                    ui.cardPile.insertBefore(card,ui.cardPile.firstChild)
                }
            }
        }
    },
                ai:{
                    isLuckyStar:true,
                },
            },
            "DIY_kongcheng":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseEnd",
                },
                group:["DIY_kongcheng2","DIY_kongcheng_yibing"],
                filter:function(event,player){
        if(player.countCards('h')==0) return false;
        return true;
    },
                content:function(){
        var cards=player.getCards('h');
        player.addToExpansion(cards,'giveAuto',player).gaintag.add('DIY_kongcheng2');
        player.storage.DIY_kongcheng=true;
    },
            },
            "DIY_kongcheng_yibing":{
                audio:"DIY_kongcheng",
                trigger:{
                    target:"useCardToTarget",
                },
                frequent:true,
                filter:function(event,player){
        if(!player.storage.DIY_kongcheng) return false;
        return event.player!=player;
    },
                logTarget:"player",
                content:function(){
        'step 0'
        player.line(trigger.player,'green');
        event.choice={
            basic:false,
            trick:false,
            equip:false,
        }
        player.chooseBool('是否押基本牌？').ai=function(event,player){
            var rand=0.95;
            if(!trigger.player.countCards('h',{type:['basic']})) rand=0.05;
            if(!trigger.player.countCards('h')) rand=0;
            return Math.random()<rand?true:false;
        };
        'step 1'
        if(result.bool){
            event.choice.basic=true;
        }
        player.chooseBool('是否押锦囊牌？').ai=function(event,player){
            var rand=0.9;
                if(!trigger.player.countCards('h',{type:['trick','delay']})) rand=0.1;
                if(!trigger.player.countCards('h')) rand=0;
                return Math.random()<rand?true:false;
        };
        'step 2'
        if(result.bool){
            event.choice.trick=true;
        }
        player.chooseBool('是否押装备牌？').ai=function(event,player){
            var rand=0.75;
                if(!trigger.player.countCards('h',{type:['equip']})) rand=0.25;
                if(!trigger.player.countCards('h')) rand=0;
                return Math.random()<rand?true:false;
        };
        'step 3'
        if(result.bool){
            event.choice.equip=true;
        }
        game.delay();
        var reality={
            basic:false,
            trick:false,
            equip:false,
        }
        var he=trigger.player.getCards('h');
        for(var i=0;i<he.length;i++){
            reality[get.type(he[i],'trick')]=true;
        }
        event.num1=0;
        var tl=['basic','trick','equip'];
        for(var i=0;i<tl.length;i++){
            if(event.choice[tl[i]]==reality[tl[i]]) event.num1++;
        }
        'step 4'
        game.delay();
        'step 5'
        event.choice={
            basic:false,
            trick:false,
            equip:false,
        }
        trigger.player.chooseBool('是否押基本牌？').ai=function(event,player){
            var rand=0.95;
            if(!player.countCards('h',{type:['basic']})) rand=0.05;
            if(!player.countCards('h')) rand=0;
            return Math.random()<rand?true:false;
        };
        'step 6'
        if(result.bool){
            event.choice.basic=true;
        }
        trigger.player.chooseBool('是否押锦囊牌？').ai=function(event,player){
            var rand=0.9;
                if(!player.countCards('h',{type:['trick','delay']})) rand=0.1;
                if(!player.countCards('h')) rand=0;
                return Math.random()<rand?true:false;
        };
        'step 7'
        if(result.bool){
            event.choice.trick=true;
        }
        trigger.player.chooseBool('是否押装备牌？').ai=function(event,player){
            var rand=0.75;
                if(!player.countCards('h',{type:['equip']})) rand=0.25;
                if(!player.countCards('h')) rand=0;
                return Math.random()<rand?true:false;
        };
        'step 8'
        if(result.bool){
            event.choice.equip=true;
        }
        game.delay();
        var reality={
            basic:false,
            trick:false,
            equip:false,
        }
        var he=player.getExpansions('DIY_kongcheng2');
        for(var i=0;i<he.length;i++){
            reality[get.type(he[i],'trick')]=true;
        }
        event.num2=0;
        var tl=['basic','trick','equip'];
        for(var i=0;i<tl.length;i++){
            if(event.choice[tl[i]]==reality[tl[i]]) event.num2++;
        }
        'step 9'
        player.popup('猜对'+get.cnNumber(event.num1)+'项');
        game.log(player,'猜对了'+get.cnNumber(event.num1)+'项');
        trigger.player.popup('猜对'+get.cnNumber(event.num2)+'项');
        game.log(trigger.player,'猜对了'+get.cnNumber(event.num2)+'项');
        if(event.num1>2||event.num2<3){
            trigger.targets.remove(player);
            trigger.getParent().triggeredTargets2.remove(player);
        }
    },
            },
            "DIY_kongcheng2":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:"DIY_kongcheng",
                content:function(){
        var cards=player.getExpansions('DIY_kongcheng2');
        if(cards.length) player.loseToDiscardpile(cards);
        player.storage.DIY_kongcheng=false;
    },
                marktext:"疑兵",
                intro:{
                    name:"疑兵",
                    mark:function(dialog,storage,player){
            var cards=player.getExpansions('DIY_kongcheng2');
            if(player.isUnderControl(true)) dialog.addAuto(cards);
            else return '共有'+get.cnNumber(cards.length)+'张牌';
        },
                    markcount:"expansion",
                },
            },
            "DIY_guizao":{
                trigger:{
                    player:"loseAfter",
                },
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
        if(!event.cards2||event.cards2.length!=1) return false;
        if(event.type=='discard') return true;
        if(_status.currentPhase!=player&&event.getParent().name=='useCard') return true;
        if(_status.currentPhase!=player&&event.getParent().name=='respond') return true;
        return false;
    },
                direct:true,
                content:function(){
        'step 0'
        suit=get.suit(trigger.cards2[0]);
        if(player.storage.DIY_guizao&&player.getStorage('DIY_guizao').contains(suit)) event.goto(2);
        'step 1'
        player.chooseDrawRecover();
        player.logSkill("DIY_guizao");
        'step 2'
        delete player.storage.DIY_guizao;
        player.markAuto('DIY_guizao',[suit]);
    },
                marktext:"藻",
                intro:{
                    name:"瑰藻",
                    content:function(storage,player){
                    var str="上一次触发此技能的牌的花色:";
                    if(!player.storage.DIY_guizao){
                        str+='无';
                    }
                    if(player.getStorage('DIY_guizao').contains('spade')){
                        str+='♠';
                    }
                    if(player.getStorage('DIY_guizao').contains('heart')){
                        str+='♥';
                    }
                    if(player.getStorage('DIY_guizao').contains('diamond')){
                        str+='♦';
                    }
                    if(player.getStorage('DIY_guizao').contains('club')){
                        str+='♣';
                    }
                    return str;
                    },
                },
            },
            "DIY_jiyu":{
                marktext:"讥谀",
                intro:{
                    name:"讥谀",
                    content:"$",
                },
                mark:true,
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filter:function(event,player){
                    if(!player.getStat().skill.DIY_jiyu||!player.storage.DIY_jiyu) return true;
                    var hs=player.getCards('h');
                    for(var i=0;i<hs.length;i++){
                        if(!player.storage.DIY_jiyu.contains(get.suit(hs[i]))){
                            return true;
                        }
                    }
                    return false;
                },
                locked:false,
                filterTarget:function(card,player,target){
                    return target.countCards('he')&&target!=player;
                },
                content:function(){
                    'step 0'
                    if(!player.storage.DIY_jiyu) player.storage.DIY_jiyu=[];
                    player.discardPlayerCard(target,'he',true);
                    'step 1'
                    if(!result.cards||!result.cards.length) return;
                    var card=result.cards[0];
                    suit=get.suit(card);
                    if(player.storage.DIY_jiyu.contains(suit)){
                        player.loseHp();
                        player.chooseToDiscard(true);
                    }
                    else{
                        player.draw();
                        player.storage.DIY_jiyu.add(suit);
                    }
                },
                onremove:"DIY_jiyu",
                group:"DIY_jiyu_clear",
                subSkill:{
                    clear:{
                        trigger:{
                            player:"phaseEnd",
                        },
                        direct:true,
                        content:function(){
                            delete player.storage.DIY_jiyu;
            },
                        sub:true,
                    },
                },
                ai:{
                    order:9,
                    result:{
                        target:function(player,target){
                if(target.countCards('h')<=3) return -1;
                return 0;
                        },
                    },
                },
                mod:{
                    cardEnabled:function(card,player){
                        if(player.storage.DIY_jiyu&&player.storage.DIY_jiyu.contains(get.suit(card))) return false;
                    },
                    ignoredHandcard:function(card,player){
                        if(player.storage.DIY_jiyu&&player.storage.DIY_jiyu.contains(get.suit(card))){
                            return true;
                        }
                    },
                    cardDiscardable:function(card,player,name){
                        if(name=='phaseDiscard'&&player.storage.DIY_jiyu&&player.storage.DIY_jiyu.contains(get.suit(card))) return false;
                    },
                },
            },
            "DIY_taoluan":{
                enable:"chooseToUse",
                audio:"ext:天牢令/image/audio:2",
                zhuanhuanji:true,
                mark:true,
                locked:true,
                marktext:"☯",
                intro:{
                    content:function(storage,player,skill){
            if(player.storage.DIY_taoluan=true) return '你可以减1点体力上限，视为使用一张本回合未以此法使用过的基本牌';
            return '你可以失去1点体力，视为使用一张本回合未以此法使用过的普通锦囊牌';
        },
                },
                init:function(player){
        player.storage.DIY_taoluan=false;
        if(!player.storage.DIY_taoluan2) player.storage.DIY_taoluan2=[];
    },
                hiddenCard:function(player,name){
        if(player.storage.DIY_taoluan2.contains(name)) return false;
        var type=get.type(name);
        if(player.storage.DIY_taoluan) return type=='basic';
        return type=='trick';
    },
                filter:function(event,player){
        if(player.storage.DIY_taoluan2.contains(name)) return false;
        var type=player.storage.DIY_taoluan?'basic':'trick';
        for(var name of lib.inpile){
            if(player.storage.DIY_taoluan2.contains(name)) continue;
            if(get.type(name)!=type) continue;
            if(event.filterCard({name:name,isCard:true},player,event)) return true;
        }
        return false;
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            for(var i=0;i<lib.inpile.length;i++){
                var name=lib.inpile[i];
                if(player.storage.DIY_taoluan2.contains(name)) continue;
                var type=player.storage.DIY_taoluan?'basic':'trick';
                if(get.type(name)!=type) continue;
                if(name=='sha'){
                    list.push(['基本','','sha']);
                    for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
                }
                else if(get.type(name)=='trick') list.push(['锦囊','',name]);
                else if(get.type(name)=='basic') list.push(['基本','',name]);
            }
            if(list.length==0){
                return ui.create.dialog('滔乱已无可用牌');
            }
            return ui.create.dialog('滔乱',[list,'vcard']);
        },
                    filter:function(button,player){
            return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function(button){
            var player=_status.event.player;
            if(player.countCards('hs',button.link[2])>0) return 0;
            if(button.link[2]=='wugu') return;
            var effect=player.getUseValue(button.link[2]);
            if(effect>0) return effect;
            return 0;
        },
                    backup:function(links,player){
            return {
                filterCard:function(){return false},
                audio:'DIY_taoluan',
                selectCard:-1,
                popname:true,
                check:function(card){
                    return 6-get.value(card);
                },
                position:'hes',
                viewAs:{name:links[0][2],nature:links[0][3]},
                onuse:function(result,player){
                    if(player.storage.DIY_taoluan){
                        player.loseMaxHp();
                    }
                    else{
                        player.loseHp();
                    }
                    player.changeZhuanhuanji('DIY_taoluan');
                    player.storage.DIY_taoluan2.add(result.card.name);
                },
            }
        },
                    prompt:function(links,player){
            if(player.storage.DIY_taoluan) return hs='减1点体力上限';
            if(!player.storage.DIY_taoluan) return hs='失去1点体力';
            return +(get.translation(hs))+'，视为使用'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'';
        },
                },
                ai:{
                    respondSha:true,
                    respondShan:true,
                    skillTagFilter:function(player,tag,arg){
            if(arg=='respond') return false;
            if(!player.storage.DIY_taoluan||player.hasSkill('DIY_taoluan_true')) return false;
            var name=(tag=='respondSha'?'sha':'shan');
            return !player.storage.DIY_taoluan2.contains(name);
        },
                    order:1,
                    result:{
                        player:1,
                    },
                },
                group:"DIY_taoluan_clear",
                subSkill:{
                    clear:{
                        trigger:{
                            global:"phaseEnd",
                        },
                        direct:true,
                        content:function(){
                            player.storage.DIY_taoluan2=[];
            },
                        sub:true,
                    },
                },
                mod:{
                    maxHandcardBase:function(player,num){
                        return num+player.getStorage('DIY_taoluan2').length;
                    },
                },
            },
            "DIY_yangzhong":{
                unique:true,
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"useCardToBegin",
                },
                filter:function(event,player){
        if(player.countCards('he') == 0)return false;
        return event.targets.length==1&&['basic', 'trick'].contains(get.type(event.card));
    },
                check:function(event,player){
        var active=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]==player) continue;
            if(!game.players[i].isOut()){
                if(ai.get.attitude(player,game.players[i])<=0&&event.player.canUse(event.card,game.players[i])){
                    active++;
                }
            }
        }
        if(active>0) return 1;
        return 0;
    },
                content:function(){
        'step 0'
        player.chooseToDiscard('he',true);
        'step 1'
        var targets=[];
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]==player) continue;
            if(game.players[i]==trigger.target) continue;
            targets.push(game.players[i]);
        }
        if(targets.length) game.log(targets,'成为了额外目标');
        for(var i=0;i<targets.length;i++){
            trigger.targets.push(targets[i]);
        }
        player.addTempSkill('DIY_yangzhong2');
    },
            },
            "DIY_yangzhong2":{
                trigger:{
                    global:"damage",
                },
                usable:1,
                direct:true,
                filter:function(event,player){
        return event.player!=player;
    },
                content:function(){
                    'step 0'
                    list=['回血', '加血'];
                    if(player.hp=player.maxHp) list.remove('回血');
                    player.chooseControl('回血', '加血').set('ai',function(){
                        if(player.storage.DIY_taoluan) return '加血';
                        return '回血';
                    });
                    "step 1"
                    if(result.control=='回血'){
                        player.logSkill('DIY_yangzhong');
                        player.recover(1);
                        player.removeSkill('DIY_yangzhong2');
                    }
                    else{
                        player.logSkill('DIY_yangzhong');
                        player.gainMaxHp(1);
                        player.removeSkill('DIY_yangzhong2');
                    }
                },
            },
            "DIY_zhiheng":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                filter:function(event,player){
        return player.countCards('he')>0&&ui.cardPile.childNodes.length>0;
    },
                content:function(){
        'step 0'
        num1=player.countCards('he')+1;
        player.storage.DIY_zhiheng=num1-1;
        player.chooseButton(['制衡<br>请选择要获得的至多'+get.translation(num1)+'张牌',Array.from(ui.cardPile.childNodes)],[1,num1]);
        'step 1'
        if(result.bool){
            var num2=result.links.length;
            for(var i=0;i<num2;i++){
                cards.push(result.links[i]);
            }
            player.gain(cards,'gain2','log');
            player.logSkill('DIY_huiwan');
        }
        if(num2==num1){
            player.chooseToDiscard('he',num2-1,true);
        }
        else{
            player.chooseToDiscard('he',num2,true);
        }
    },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                    threaten:1.55,
                },
            },
            "DIY_huiwan":{
            },
            "DIY_enyuan":{
                audio:"ext:天牢令/image/audio:4",
                group:["DIY_enyuan_en","DIY_enyuan_yuan","DIY_enyuan_damage"],
            },
            "DIY_enyuan_en":{
                audio:"ext:天牢令/image/audio:3",
                trigger:{
                    player:"gainEnd",
                },
                direct:true,
                filter:function(event,player){
        if(!event.source||event.source==player||!event.source.isIn()) return false;
        var evt=event.getl(event.source);
        return evt&&evt.cards2&&evt.cards2.length>0;
    },
                logTarget:"source",
                content:function(){
        'step 0'
        var history=player.getAllHistory('gain',function(evt){
            var evt=evt.getl(trigger.source);
            return evt;
        });
        if(history.length) num=history.length;
        player.popup(''+get.cnNumber(num)+'');
        if(num%2==game.roundNumber%2){
            player.chooseBool('是否发动【恩怨】令'+get.translation(trigger.source)+'摸一张牌？').set('ai',function(){
                var att=ai.get.attitude(player,trigger.source);
                if(att>0) return true;
                return false;
            });
        }
        'step 1'
        if(result.bool){
            player.logSkill('DIY_enyuan_en',trigger.source);
            trigger.source.draw();
        }
    },
            },
            "DIY_enyuan_yuan":{
                audio:"ext:天牢令/image/audio:3",
                trigger:{
                    source:"gainAfter",
                },
                direct:true,
                filter:function(event,player){
        if(player==event.player) return false;
        var evt=event.getl(player);
        return evt&&evt.hs&&evt.hs.length;
    },
                logTarget:"player",
                content:function(){
        'step 0'
        var history=trigger.player.getAllHistory('gain',function(evt){
            var evt=evt.getl(player);
            return evt;
        });
        if(history.length) num=history.length;
        player.popup(''+get.cnNumber(num)+'');
        if(num%2==game.roundNumber%2){
            player.chooseBool('是否对'+get.translation(trigger.player)+'发动【恩怨】？').set('ai',function(){
                var att=ai.get.attitude(player,trigger.player);
                if(att<0) return true;
                return false;
            });
        }
        'step 1'
        if(result.bool){
            player.logSkill('DIY_enyuan_yuan',trigger.player);
            trigger.player.chooseCard('交给'+get.translation(player)+'一张手牌或流失一点体力').set('ai',function(card){
            if(get.attitude(trigger.player,player)>0){
                    return 11-get.value(card);
                }
                else{
                    return 7-get.value(card);
                }
            });
        }
        else{
            event.goto(4);
        }
        'step 2'
        if(result.bool){
            player.gain(result.cards,trigger.player,'giveAuto');
        }
        else{
            trigger.player.loseHp();
        }
        'step 3'
        event.finish();
                },
            },
            "DIY_enyuan_damage":{
                audio:"DIY_enyuan_yuan",
                trigger:{
                    player:"damageEnd",
                },
                check:function(event,player){
        var att=get.attitude(player,event.source);
        var num=event.source.countCards('h');
        if(att<=0) return true;
        if(num>2) return true;
        if(num) return att<4;
        return false;
    },
                filter:function(event,player){
        return event.source&&event.source!=player&&event.num>0&&event.source.isAlive();
    },
                content:function(){
        "step 0"
        event.num=trigger.num;
        "step 1"
        trigger.source.chooseCard('交给'+get.translation(player)+'一张手牌或流失一点体力').set('ai',function(card){
            if(get.attitude(_status.event.player,_status.event.getParent().player)>0){
                return 11-get.value(card);
            }
            else{
                return 7-get.value(card);
            }
        });
        "step 2"
        if(result.bool){
            player.gain(result.cards,trigger.source,'giveAuto');
        }
        else{
            trigger.source.loseHp();
        }
        if(event.num>1){
            event.num--;
            event.goto(1);
        }
    },
                ai:{
                    "maixie_defend":true,
                    effect:{
                        target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1.5];
                if(!target.hasFriend()) return;
                if(get.tag(card,'damage')) return [1,0,0,-0.7];
            },
                    },
                },
            },
            "DIY_xuanhuo":{
                audio:"ext:天牢令/image/audio:2",
                initList:function(player){
        var list,skills=[];
        if(get.mode()=='guozhan'){
            list=[];
            for(var i in lib.characterPack.mode_guozhan) list.push(i);
        }
        else if(_status.connectMode) list=get.charactersOL();
        else{
            list=[];
            for(var i in lib.character){
                if(lib.filter.characterDisabled2(i)||lib.filter.characterDisabled(i)) continue;
                list.push(i);
            }
        }
        for(var i of list){
            if(i.indexOf('gz_jun')==0) continue;
            for(var j of lib.character[i][3]){
                if(j=='DIY_xuanhuo') continue;
                var skill=lib.skill[j];
                if(!skill||skill.zhuSkill) continue;
                if(skill.init||skill.ai&&(skill.ai.combo||skill.ai.notemp||skill.ai.neg)) continue;
                var info=lib.translate[j+'_info'];
                if(info&&info.indexOf('【杀】')!=-1) skills.add(j);
            }
        }
        player.storage.DIY_xuanhuo=skills;
    },
                trigger:{
                    global:"phaseBeginStart",
                },
                direct:true,
                preHidden:true,
                filter:function(event,player){
        return event.player.countCards('he')>0&&!event.player.hasSkill('DIY_xuanhuo');
    },
                content:function(){
        'step 0'
        trigger.player.chooseCard(get.prompt('DIY_xuanhuo'),'交给'+get.translation(player)+'一张牌，然后获得'+get.translation(player)+'选择的一个描述中包含“【杀】”的技能','he').set('ai',function(){
            var player=_status.event.player,target=_status.event.getParent().player;
            return get.attitude(player,target)>=0;
        });
        'step 1'
        if(result.bool){
            player.logSkill('DIY_xuanhuo',trigger.player);
            player.gain(result.cards,trigger.player,'giveAuto');
        }
        else event.finish();
        'step 2'
        if(player.isIn()&&trigger.player.isIn()){
            if(!player.storage.DIY_xuanhuo) lib.skill.DIY_xuanhuo.initList(player);
            var list=player.storage.DIY_xuanhuo.randomGets(Math.max(4,game.countPlayer()));
            if(!list.length){
                event.finish();
                return;
            }
            event.videoId=lib.status.videoId++;
            var func=function(skills,id){
                var dialog=ui.create.dialog('forcebutton');
                dialog.videoId=id;
                dialog.add('眩惑：选择一个技能');
                for(var i=0;i<skills.length;i++){
                    dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+get.translation(skills[i])+'】</div><div>'+lib.translate[skills[i]+'_info']+'</div></div>');
                }
                dialog.addText(' <br> ');
            }
            if(player.isOnline()) player.send(func,list,event.videoId);
            else if(player==game.me) func(list,event.videoId);
            player.chooseControl(list);
        }
        else event.finish();
        'step 3'
        game.broadcastAll('closeDialog',event.videoId);
        trigger.player.popup(''+get.translation(result.control)+'');
        game.log(trigger.player,'获得了','#g【'+get.translation(result.control)+'】');
        trigger.player.addTempSkill(result.control);
    },
            },
            "DIY_qinyin":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                content:function(){
        'step 0'
        player.chooseToPlayBeatmap(lib.skill.DIY_qinyin.beatmaps.randomGet());
        'step 1'
        var score=Math.floor(result.accuracy/17);
        event.score=score;
        game.log(player,'的演奏评级为','#y'+result.rank[0],'，获得积分点数','#y'+score,'分');
        var list=[];
        list.push('全部摸牌');
        var skillList=[];
        var skills=player.getOriginalSkills();
        for(var i=0;i<skills.length;i++){
            if(lib.skill[skills[i]].limited&&player.awakenedSkills.contains(skills[i])){
                skillList.push(skills[i]);
            }
        }
        if(score>2&&skillList.length>0){
            list.push('重置一个限定技');
        }
        if(list.length>1){
            var num=score-3;
            player.chooseControl(list).set('prompt','业炎：重置一个已发动的限定技并摸'+get.translation(Math.floor(num/2))+'张牌或摸'+get.translation(Math.floor(score/2))+'张牌').set('ai',function(){
                return '重置一个限定技';
            });
        }
        else event._result={control:'全部摸牌'};
        'step 2'
        var score=event.score;
        if(result.control!='全部摸牌'){
            score-=3;
            player.draw(Math.floor(score/2));
            var List=[];
            var skills=player.getOriginalSkills();
            for(var i=0;i<skills.length;i++){
                if(lib.skill[skills[i]].limited&&player.awakenedSkills.contains(skills[i])){
                    List.push(skills[i]);
                }
            }
            if(List.length==1){
                player.restoreSkill(List[0]);
                game.log(player,'重置了','#g【'+get.translation(List[0])+'】');
                event.goto(3);
            }
            else{
                player.chooseControl(List).set('prompt','选择一个限定技重置之');
                event.goto(3);
            }
        }
        player.draw(Math.floor(score/2));
        event.goto(4);
        'step 3'
        if(result.control){
            player.restoreSkill(result.control);
            game.log(player,'重置了','#g【'+get.translation(result.control)+'】');
        }
        'step 4'
        event.finish();
    },
                ai:{
                    order:10,
                    result:{
                        player:1,
                    },
                },
                beatmaps:[{"name":"鳥の詩","filename":"tori_no_uta","timeleap":[1047,3012,4978,5469,5961,6452,6698,7435,8909,10875,12840],"current":-546,"judgebar_height":0.14,"range1":[86,110],"range2":[92,104],"range3":[96,100],"speed":25},{"name":"竹取飛翔　～ Lunatic Princess","filename":"taketori_hishou","timeleap":[1021,1490,1959,2896,3834,4537,4771,5709,6646,7585,8039,8494,9403,10291,11180,11832,12049,12920,13345,13771,14196],"current":-500,"judgebar_height":0.14,"range1":[86,110],"range2":[92,104],"range3":[96,100],"speed":25,"judgebar_color":"linear-gradient(rgba(240, 120, 123, 1), rgba(230, 115, 113, 1))"}],
                derivation:"chongxu_faq",
            },
            "DIY_yeyan":{
                unique:true,
                limited:true,
                enable:"phaseUse",
                audio:"ext:天牢令/image/audio:3",
                animationColor:"metal",
                skillAnimation:"legend",
                line:"fire",
                multitarget:true,
                multiline:true,
                filter:function(event,player){
                    return !player.storage.DIY_yeyan;
                },
                content:function (){
        "step 0"
        player.awakenSkill('DIY_yeyan');
        player.storage.DIY_yeyan=true;
        for(var i=0;i<game.players.length;i++){
            game.players[i].storage.DIY_yeyan_damage=0;
        }
        "step 1"
        player.chooseTarget(get.prompt('DIY_yeyan'),'选择第一点火焰伤害的分配对象').set('ai',function(target){
            var att=get.attitude(_status.event.player,target);
            return att<0;
        });
        "step 2"
        if(result.bool){
            var target=result.targets[0];
            target.storage.DIY_yeyan_damage++;
            var num=target.storage.DIY_yeyan_damage;
            target.popup(''+get.cnNumber(num)+'点');
        }
        player.chooseTarget(get.prompt('DIY_yeyan'),'选择第二点火焰伤害的分配对象').set('ai',function(target){
            var att=get.attitude(_status.event.player,target);
            return att<0;
        });
        "step 3"
        if(result.bool){
            var target=result.targets[0];
            target.storage.DIY_yeyan_damage++;
            var num=target.storage.DIY_yeyan_damage;
            if(num>1) player.chooseToDiscard('he',true);
            target.popup(''+get.cnNumber(num)+'点');
        }
        player.chooseTarget(get.prompt('DIY_yeyan'),'选择第三点火焰伤害的分配对象').set('ai',function(target){
            var att=get.attitude(_status.event.player,target);
            return att<0;
        });
        "step 4"
        if(result.bool){
            var target=result.targets[0];
            target.storage.DIY_yeyan_damage++;
            var num=target.storage.DIY_yeyan_damage;
            if(num>1) player.chooseToDiscard('he',true);
            target.popup(''+get.cnNumber(num)+'点');
        }
        "step 5"
        game.delay();
        for(var i=0;i<game.players.length;i++){
            if(!game.players[i].storage.DIY_yeyan_damage) continue;
            var num=game.players[i].storage.DIY_yeyan_damage;
            game.players[i].storage.DIY_yeyan_damage=0;
            game.players[i].damage(num,'fire');
        }
    },
                ai:{
                    order:12,
                    result:{
                        player:1,
                    },
                },
                mark:true,
                intro:{
                    content:"limited",
                },
                init:function(player,skill){
        player.storage[skill]=false;
    },
            },
            "DIY_yuanchou":{
                audio:"yuanchou",
                trigger:{
                    player:"useCardToPlayer",
                    target:"useCardToTarget",
                },
                filter:function(event){
        return event.card.name=='sha'&&get.nature(event.card)!='stab';
    },
                forced:true,
                logTarget:"target",
                content:function(){
        trigger.target.addTempSkill('qinggang2');
        trigger.target.storage.qinggang2.add(trigger.card);
		trigger.target.markSkill('qinggang2');
    },
                ai:{
                    "unequip_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(arg&&arg.name=='sha') return true;
            return false;
        },
                },
                group:"DIY_yuanchou_stab",
                subSkill:{
                    stab:{
                        audio:"DIY_yuanchou",
                        trigger:{
                            player:"useCardToPlayer",
                        },
                        filter:function(event){
                            return event.card.name=='sha'&&get.nature(event.card)=='stab';
                        },
                        forced:true,
                        content:function(){
                            trigger.target.addTempSkill('qinggang2');
                            trigger.target.storage.qinggang2.add(trigger.card);
							trigger.target.markSkill('qinggang2');
                            if(!trigger.getParent().directHit.contains(trigger.target)){
								var id=trigger.target.playerid;
                            	var map=trigger.getParent().customArgs;
                            	if(!map[id]) map[id]={};
                            	if(typeof map[id].shanRequired=='number'){
                                	map[id].shanRequired++;
                            	}
                            	else{
                                	map[id].shanRequired=2;
                            	}
							}
                        },
                        sub:true,
                    },
                },
            },
            "DIY_juesheng":{
                audio:"juesheng",
                enable:"phaseUse",
                limited:true,
                skillAnimation:true,
                animationColor:"orange",
                trigger:{
                    global:"phaseEnd",
                },
                filter:function(event,player){
        return event.player!=player;
    },
                check:function(event,player){
        return get.damageEffect(event.player,player,player)>0;
    },
                content:function(){
        player.loseMaxHp();
        player.awakenSkill('DIY_juesheng');
        if(player.name=='JX_fanjiangzhangda') player.changeGroup("wu");
        player.addTempSkill('DIY_juesheng_counter');
        player.useCard({name:'sha',nature:'stab',isCard:true},trigger.player,false,'noai');
    },
                ai:{
                    result:{
                        player:function(player,target){
                return target.maxHp-target.hp;
            },
                        target:function(player,target){
                var num=target.maxHp-target.hp;
                if(num<target.hp) return 0;
                return -num;
            },
                    },
                },
                subSkill:{
                    counter:{
                        trigger:{
                            source:"damageBegin1",
                        },
                        forced:true,
                        charlotte:true,
                        content:function(){
                trigger.num=trigger.player.maxHp;
                player.removeSkill('DIY_yuanchou');
            },
                        sub:true,
                    },
                },
                mark:true,
                intro:{
                    content:"limited",
                },
                init:function(player,skill){
        player.storage[skill]=false;
    },
            },
            "DIY_keji":{
                trigger:{
                    player:"gainAfter",
                },
                forced:true,
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
        return player.countCards('h')>0;
    },
                content:function(){
        var cards=player.getCards('h');
        player.loseToSpecial(cards,'DIY_keji').visible=true;
        player.markSkill('DIY_keji');
    },
                group:["DIY_keji_gain"],
                marktext:"克",
                intro:{
                    mark:function(dialog,storage,player){
            dialog.addAuto(player.getCards('s',function(card){
                return card.hasGaintag('DIY_keji');
            }));
        },
                    markcount:function(storage,player){
            return player.getCards('s',function(card){
                return card.hasGaintag('DIY_keji');
            }).length;
        },
                    onunmark:function(storage,player){
            var cards=player.getCards('s',function(card){
                return card.hasGaintag('DIY_keji');
            });
            if(cards.length){
                player.lose(cards,ui.discardPile);
                player.$throw(cards,1000);
                game.log(cards,'进入了弃牌堆');
            }
        },
                },
            },
            "DIY_keji_gain":{
                trigger:{
                    player:"loseAfter",
                },
                forced:true,
                filter:function(event,player){
                    if(!event.ss||!event.ss.length) return false;
                    for(var i in event.gaintag_map){
                        if(event.gaintag_map[i].contains('DIY_keji')) return true;
                        return false;
                    }
                },
                content:function(){
                    'step 0'
                    player.chooseBool('从牌堆中获得与“克”花色相同的一张牌获得点“取消”获得一点护甲').ai=function(event,player){
                        var num=[0,1].randomGet();
                        return num<1?true:false;
                    };
                    'step 1'
                    if(!result.bool){
                        player.changeHujia();
                    }
                    else{
                        var cards=[];
                        for(var i of trigger.ss){
                            if(!trigger.gaintag_map[i.cardid]||!trigger.gaintag_map[i.cardid].contains('DIY_keji')) continue;
                            var suit=get.suit(i,false);
                            var card=get.cardPile2(function(card){
                                return !cards.contains(card)&&get.suit(card,false)==suit;
                            });
                            if(card) cards.push(card);
                        }
                        if(cards.length) player.gain(cards,'gain2');
                        var num=player.getCards('s',function(card){
                            return card.hasGaintag('DIY_keji');
                        }).length;
                        if(num) player.markSkill('DIY_keji');
                        else player.unmarkSkill('DIY_keji');
                        game.updateRoundNumber();
                    }
                },
            },
            "DIY_dujiang":{
                skillAnimation:true,
                animationColor:"wood",
                audio:"ext:天牢令/image/audio:2",
                unique:true,
                juexingji:true,
                derivation:"DIY_duojing",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                filter:function(event,player){
                    if(player.storage.DIY_qinxue) return false;
                    var num=player.getCards('s',function(card){
                        return card.hasGaintag('DIY_keji');
                    }).length;
                    return num>3;
                },
                content:function(){
                    player.storage.DIY_qinxue=true;
                    player.addSkill('DIY_duojing');
                    player.awakenSkill('DIY_dujiang');
                },
            },
            "DIY_duojing":{
                shaRelated:true,
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardToPlayered",
                },
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                filter:function(event,player){
        return player.hujia>1&&event.card.name=='sha';
    },
                logTarget:"target",
                content:function(){
        "step 0"
        player.changeHujia(-1);
        var list=['不可被响应','无视防具','伤害+1','不计入次数'];
        player.chooseControl(list).set('prompt','夺荆：请为'+get.translation(trigger.card)+'选择一种效果').set('choice',function(){
            if(list.contains('不计入次数')&&player.hasSha()) return '不计入次数';
            if(list.contains('不可被响应')&&trigger.target.mayHaveShan()) return '不可被响应';
            if(list.contains('伤害+1')) return '伤害+1';
            return list.randomGet();
        }()).set('ai',()=>_status.event.choice);
        "step 1"
        var target=trigger.target;
        game.log(player,'对',target,'的',trigger.card,'#g'+result.control);
        switch(result.control){
            case '不可被响应':
                trigger.directHit.add(target);
                break;
            case '无视防具':
                target.addTempSkill('qinggang2');
                target.storage.qinggang2.add(trigger.card);
                break;
            case '伤害+1':
                var map=trigger.customArgs;
                var id=target.playerid;
                if(!map[id]) map[id]={};
                if(!map[id].extraDamage) map[id].extraDamage=0;
                map[id].extraDamage++;
                break;
            case '不计入次数':
                var evt=trigger.getParent();
                if(evt.addCount!==false){
                    evt.addCount=false;
                    player.getStat().card.sha--;
                }
                break;
        }
    },
                ai:{
                    ignoreSkill:true,
                    skillTagFilter:function(player,tag,arg){
            if(tag=='directHit_ai'){
                return get.attitude(player,arg.target)<=0;
            }
            if(!arg||arg.isLink||!arg.card||arg.card.name!='sha') return false;
            if(!arg.target||get.attitude(player,arg.target)>=0) return false;
            if(!arg.skill||!lib.skill[arg.skill]||lib.skill[arg.skill].charlotte||get.is.locked(arg.skill)||!arg.target.getSkills(true,false).contains(arg.skill)) return false;
        },
                    "directHit_ai":true,
                },
            },
            "DIY_lveming":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filterTarget:function(card,player,target){
        return player!=target&&target.countCards('e')<=player.countCards('e');
    },
                filter:function(event,player){
        var num=Math.max(1,player.countCards('e'));
        if(player.getStat().skill.DIY_lveming>=num) return false;
        return true;
    },
                content:function(){
        "step 0"
        var list=[1,2,3,4,5,6,7,8,9,10,11,12,13].map((i)=>get.strNumber(i));
        target.chooseControl(list).set('ai',function(){
            return get.rand(0,12);
        }).set('prompt','请选择一个点数');
        "step 1"
        if(result.control){
            target.$damagepop(result.control,'thunder');
            var num=result.index+1;
            event.num=num;
        }
        else{
            target.$damagepop('K','thunder');
            event.num=13;
        };
        game.log(target,'选择的点数是','#y'+get.strNumber(event.num));
        player.judge(function(card){
            if(card.number==_status.event.getParent('DIY_lveming').num) return 4;
            return 0;
        });
        "step 2"
        if(result.bool==true){
            target.damage(2);
        }
        else{
            var card=target.getCards('hej').randomGet();
            player.gain(card,target,'giveAuto','bySelf');
        }
    },
                ai:{
                    order:9,
                    result:{
                        target:function(player,target){
                var numj=target.countCards('j');
                var numhe=target.countCards('he');
                if(numhe==0) return numj>0?6:-6;
                return -6-(numj+1)/numhe;
            },
                    },
                    threaten:1.1,
                },
            },
            "DIY_tunjun":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    source:"damageSource",
                },
                group:["DIY_tunjun1","DIY_tunjun2","DIY_tunjun3","DIY_tunjun4","DIY_tunjun5"],
                forced:true,
                charlotte:true,
                onremove:true,
                filter:function(event,player){
        if(event.player==player) return false;
        if(player.countCards('e',{subtype:"equip1"})>=2&&player.countCards('e',{subtype:"equip2"})>=2&&player.countCards('e',{subtype:"equip3"})>=2&&player.countCards('e',{subtype:"equip4"})>=2&&player.countCards('e',{subtype:"equip5"})>=2) return false;
        return true;
    },
                content:function(){
        for(var i=1;i<7;i++){
            if(player.countCards('e',{subtype:"equip"+i})<2&&!player.isDisabled('equip'+i)){
                var sub='equip'+i,card=get.cardPile(function(card){
                    return get.subtype(card,false)==sub&&!get.cardtag(card,'gifts');
                });
                if(card){
                    player.$gain2(card);
                    game.delayx();
                    player.equip(card);
                    break;
                }
            }
        }
    },
            },
            "DIY_tunjun1":{
                trigger:{
                    player:"equipBegin",
                },
                forced:true,
                silent:true,
                filter:function(event,player){
        return get.subtype(event.card)=="equip1"
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
        "step 2"
        if(player.countCards('e',{subtype:"equip1"})>2){player.chooseButton(['选择一张武器牌弃置', player.getCards('e',{subtype:"equip1"})], 1,true)
        }
        "step 3"
        if(result.bool){player.discard(result.links)}
        "step 4"
        if(player.countCards('e',{subtype:"equip1"})>2) event.goto(2)
    },
                popup:false,
            },
            "DIY_tunjun2":{
                trigger:{
                    player:"equipBegin",
                },
                forced:true,
                silent:true,
                filter:function(event,player){
        return get.subtype(event.card)=="equip2"
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
        "step 2"
        if(player.countCards('e',{subtype:"equip2"})>2){player.chooseButton(['选择一张防具牌弃置', player.getCards('e',{subtype:"equip2"})], 1,true)
        }
        "step 3"
        if(result.bool){player.discard(result.links)}
        "step 4"
        if(player.countCards('e',{subtype:"equip2"})>2) event.goto(2)
    },
                popup:false,
            },
            "DIY_tunjun3":{
                trigger:{
                    player:"equipBegin",
                },
                forced:true,
                silent:true,
                filter:function(event,player){
        return get.subtype(event.card)=="equip3"
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
        "step 2"
        if(player.countCards('e',{subtype:"equip3"})>2){player.chooseButton(['选择一张防御马弃置', player.getCards('e',{subtype:"equip3"})], 1,true)
        }
        "step 3"
        if(result.bool){player.discard(result.links)}
        "step 4"
        if(player.countCards('e',{subtype:"equip3"})>2) event.goto(2)
    },
                popup:false,
            },
            "DIY_tunjun4":{
                trigger:{
                    player:"equipBegin",
                },
                forced:true,
                silent:true,
                filter:function(event,player){
        return get.subtype(event.card)=="equip4"
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
        "step 2"
        if(player.countCards('e',{subtype:"equip4"})>2){player.chooseButton(['选择一张防具牌弃置', player.getCards('e',{subtype:"equip4"})], 1,true)
        }
        "step 3"
        if(result.bool){player.discard(result.links)}
        "step 4"
        if(player.countCards('e',{subtype:"equip4"})>2) event.goto(2)
    },
                popup:false,
            },
            "DIY_tunjun5":{
                trigger:{
                    player:"equipBegin",
                },
                forced:true,
                silent:true,
                filter:function(event,player){
        return get.subtype(event.card)=="equip5"
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
        "step 2"
        if(player.countCards('e',{subtype:"equip5"})>2){player.chooseButton(['选择一张宝物牌弃置', player.getCards('e',{subtype:"equip5"})], 1,true)
        }
        "step 3"
        if(result.bool){player.discard(result.links)}
        "step 4"
        if(player.countCards('e',{subtype:"equip5"})>2) event.goto(2)
    },
                popup:false,
            },
            "DIY_tianxiang":{
                enable:"chooseToUse",
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
        if(player.countCards('j')<1) return false;
        for(var name of lib.inpile){
            if(event.filterCard({name:name,isCard:true},player,event)) return true;
        }
        return false;
    },
                hiddenCard:function(player,name){
        return player.countCards('j')>0;
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            for(var i=0;i<lib.inpile.length;i++){
                var name=lib.inpile[i];
                if(name=='sha'){
                    if(event.filterCard({name:name},player,event)) list.push(['基本','','sha']);
                    for(var j of lib.inpile_nature){
                        if(event.filterCard({name:name,nature:j},player,event)) list.push(['基本','','sha',j]);
                    }
                }
                else if(get.type2(name)=='trick'&&event.filterCard({name:name},player,event)) list.push(['锦囊','',name]);
                else if(get.type(name)=='basic'&&event.filterCard({name:name},player,event)) list.push(['基本','',name]);
            }
            return ui.create.dialog('国色',[list,'vcard']);
        },
                    filter:function(button,player){
            return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function(button){
            var player=_status.event.player;
            if(player.countCards('hs',button.link[2])>0) return 0;
            if(button.link[2]=='wugu') return;
            var effect=player.getUseValue(button.link[2]);
            if(effect>0) return effect;
            return 0;
        },
                    backup:function(links,player){
            return {
                audio:'DIY_tianxiang',
                selectCard:1,
                position:'hes',
                filterCard:true,
                popname:true,
                check:function(card){
                    return 6-get.value(card);
                },
                viewAs:{name:links[0][2],nature:links[0][3]},
                onuse:function(result,player){
                    player.discardPlayerCard(player,'j',true);
                    player.logSkill("DIY_tianxiang_pass");
                },
            }
        },
                    prompt:function(links,player){
            return '将一张牌当做'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    respondSha:true,
                    respondShan:true,
                    order:1,
                    result:{
                        player:1,
                    },
                },
                group:"DIY_tianxiang_pass",
                subSkill:{
                    pass:{
                        forced:true,
                        audio:"DIY_tianxiang",
                        trigger:{
                            player:"phaseJudgeBefore",
                        },
                        content:function(){
                            trigger.cancel();
                            game.log(player,'跳过了判定阶段');
            },
                        sub:true,
                    },
                },
            },
            "DIY_liuli":{
                trigger:{
                    global:"useCardToTarget",
                },
                logTarget:"target",
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                filter:function(event,player){
        return get.type(event.card)=='delay'&&!event.targets.contains(player)&&event.target.countCards('he')>0;
    },
                content:function(){
        'step 0'
        trigger.target.chooseCard('he','是否对'+get.translation(player)+'发动【流离】？','弃置一张牌，将'+get.translation(trigger.card)+'转移给'+get.translation(player)).set('ai',function(card){
            return get.unuseful(card)+9;
        });
        'step 1'
        if(result.bool){    
            player.logSkill('DIY_liuli',trigger.target);
            trigger.target.discard(result.cards);
            var evt=trigger.getParent();
            evt.triggeredTargets2.remove(trigger.target);
            evt.targets.remove(trigger.target);
            evt.targets.push(player);
        }
    },
            },
            "DIY_xingwu":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"TLAoLogSkillAfter",
                },
                filter:function(event,player){
        if(event.player.name!='yin_suncezhouyu') return false;
        if(event.skill!="yindingjiang") return false;
        return true;
    },
                direct:true,
                content:function(){
        player.chooseToUse('星舞：你可以使用一张牌').logSkill='DIY_xingwu';
    },
            },
            "DIY_shoucheng":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){
        return target.countCards('he')>0&&!target.hasSkill('DIY_shoucheng_mark');
    },
                content:function(){
                    player.discardPlayerCard(target,'he',true);
                    target.addTempSkill("DIY_shoucheng_mark",{player:'phaseEnd'});
                },
                subSkill:{
                    mark:{
                        marktext:"守成",
                        mark:true,
                        intro:{
                            content:"当你跳过一个阶段时，你可以执行一个同名阶段<br>（每回合每种阶段限一次）",
                        },
                        group:["DIY_shoucheng_mark1","DIY_shoucheng_mark2","DIY_shoucheng_mark3","DIY_shoucheng_mark4"],
                        sub:true,
                    },
                    "mark1":{
                        usable:1,
                        trigger:{
                            player:["phaseJudgeSkipped","phaseJudgeCancelled"],
                        },
                        direct:true,
                        content:function(){
                        "step 0"
                        player.chooseBool('守成：是否执行一个判定阶段').ai=function(event,player){
                            return false;
                        };
                        "step 1"
                        if(result.bool){
                            var next=player.phaseJudge();
                            event.next.remove(next);
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_shoucheng")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_shoucheng',player);
                                    current.addSkill('DIY_shengxi2');
                                }
                            });
                            game.log(player,'执行了一个判定阶段');
                            trigger.next.push(next);
                        }
                        },
                        sub:true,
                    },
                    "mark2":{
                        usable:1,
                        trigger:{
                            player:["phaseDrawSkipped","phaseDrawCancelled"],
                        },
                        direct:true,
                        content:function(){
                        "step 0"
                        player.chooseBool('守成：是否执行一个摸牌阶段').ai=function(event,player){
                            return true;
                        };
                        "step 1"
                        if(result.bool){
                            var next=player.phaseDraw();
                            event.next.remove(next);
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_shoucheng")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_shoucheng',player);
                                    current.addSkill('DIY_shengxi2');
                                }
                            });
                            game.log(player,'执行了一个摸牌阶段');
                            trigger.next.push(next);
                        }
                        },
                        sub:true,
                    },
                    "mark3":{
                        usable:1,
                        trigger:{
                            player:["phaseUseSkipped","phaseUseCancelled"],
                        },
                        direct:true,
                        content:function(){
                        "step 0"
                        player.chooseBool('守成：是否执行一个出牌阶段').ai=function(event,player){
                            return true;
                        };
                        "step 1"
                        if(result.bool){
                            var next=player.phaseUse();
                            event.next.remove(next);
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_shoucheng")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_shoucheng',player);
                                    current.addSkill('DIY_shengxi2');
                                }
                            });
                            game.log(player,'执行了一个出牌阶段');
                            trigger.next.push(next);
                        }
                        },
                        sub:true,
                    },
                    "mark4":{
                        usable:1,
                        trigger:{
                            player:["phaseDiscardSkipped","phaseDiscardCancelled"],
                        },
                        direct:true,
                        content:function(){
                        "step 0"
                        player.chooseBool('守成：是否执行一个弃牌阶段').ai=function(event,player){
                            return false;
                        };
                        "step 1"
                        if(result.bool){
                            var next=player.phaseDiscard();
                            event.next.remove(next);
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_shoucheng")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_shoucheng',player);
                                    current.addSkill('DIY_shengxi2');
                                }
                            });
                            game.log(player,'执行了一个弃牌阶段');
                            trigger.next.push(next);
                        }
                        },
                        sub:true,
                    },
                },
                ai:{
                    order:12,
                    result:{
                        target:function(player,target){
                            if(target.hasJudge('lebu')||target.hasJudge('bingliang')) return 1;
                            if(target.hasSkill('spyinju2')||target.hasSkill('zhengjing2')||target.hasSkill('yizheng2')||target.hasSkill('yufeng2')||target.hasSkill('fangquan')||target.hasSkill('qiaobian')||target.hasSkill('DIY_qiaobian')||target.hasSkill('shensu')||target.hasSkill('DIY_shensu')||target.hasSkill('fenli')||target.hasSkill('DIY_fenli')||target.hasSkill('ol_fangquan')) return 1;
                            if(target.hasSkill('xinlirang')&&target.countMark('xinlirang')>0) return 1;
                            return -1;
                        },
                    },
                },
            },
            "DIY_zhenting":{
                trigger:{
                    global:["phaseJudgeBefore","phaseDrawBefore","phaseUseBefore","phaseDiscardBefore"],
                },
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                filter:function(event,player){
        if(event.player==player) return true;
        if(event.player.hasSkill('DIY_shoucheng_mark')) return true;
        return false;
    },
                content:function(){
                    "step 0"
                    if(!trigger.player.storage[trigger.name]) trigger.player.storage[trigger.name]=0;
                    trigger.player.storage[trigger.name]++;
                    var num=trigger.player.storage[trigger.name];
                    if(num%2==0&&!player.getStorage('DIY_zhenting').contains(trigger.name)){
                        player.logSkill('DIY_zhenting');
                        if(trigger.name=="phaseJudge") game.log(player,'记录了判定阶段');
                        if(trigger.name=="phaseDraw") game.log(player,'记录了摸牌阶段');
                        if(trigger.name=="phaseUse") game.log(player,'记录了出牌阶段');
                        if(trigger.name=="phaseDiscard") game.log(player,'记录了弃牌阶段');
                        player.markAuto('DIY_zhenting',[trigger.name]);
                    }
                },
                onremove:true,
                marktext:"镇庭",
                intro:{
                    content:"$",
                },
                group:"DIY_zhenting_pass",
                subSkill:{
                    pass:{
                        trigger:{
                            global:"phaseBeginStart",
                        },
                        filter:function(event,player){
                            return player.getStorage('DIY_zhenting').length>0;
                        },
                        direct:true,
                        content:function(){
                            "step 0"
                            var list=[];
                            if(player.getStorage('DIY_zhenting').contains("phaseJudge")) list.push('判定');
                            if(player.getStorage('DIY_zhenting').contains("phaseDraw")) list.push('摸牌');
                            if(player.getStorage('DIY_zhenting').contains("phaseUse")) list.push('出牌');
                            if(player.getStorage('DIY_zhenting').contains("phaseDiscard")) list.push('弃牌');
                            list.push('cancel2');
                            player.chooseControl(list).set('prompt','镇庭：请选择令'+get.translation(trigger.player)+'执行的阶段').set('ai',function(){
                                var att=get.attitude(player,trigger.player);
                                if(att<0&&trigger.player.countCards('h')>trigger.player.hp) return '弃牌';
                                if(att<0&&trigger.player.countCards('j')>0) return '判定';
                                if(att<0) return 'cancel2';
                                if(att>0&&!trigger.player.countCards('h')<trigger.player.hp) return '出牌';
                                return '摸牌';
                            });
                            "step 1"
                            var target=trigger.player;
                            if(result.control!='cancel2') game.log(player,'令',target,'执行了一个','#g'+result.control,'#g阶段');
                            switch(result.control){
                                case '判定':
                                    next=trigger.player.phaseJudge();
                                    player.unmarkAuto('DIY_zhenting',["phaseJudge"]);
                                    event.next.remove(next);
                                    player.addSkill('DIY_shengxi2');
                                    player.logSkill('DIY_zhenting',trigger.player);
                                    trigger.next.push(next);
                                    break;
                                case '摸牌':
                                    next=trigger.player.phaseDraw();
                                    player.unmarkAuto('DIY_zhenting',["phaseDraw"]);
                                    event.next.remove(next);
                                    player.addSkill('DIY_shengxi2');
                                    player.logSkill('DIY_zhenting',trigger.player);
                                    trigger.next.push(next);
                                    break;
                                case '出牌':
                                    next=trigger.player.phaseUse();
                                    player.unmarkAuto('DIY_zhenting',["phaseUse"]);
                                    event.next.remove(next);
                                    player.addSkill('DIY_shengxi2');
                                    player.logSkill('DIY_zhenting',trigger.player);
                                    trigger.next.push(next);
                                    break;
                                case '弃牌':
                                    next=trigger.player.phaseDiscard();
                                    player.unmarkAuto('DIY_zhenting',["phaseDiscard"]);
                                    event.next.remove(next);
                                    player.addSkill('DIY_shengxi2');
                                    player.logSkill('DIY_zhenting',trigger.player);
                                    trigger.next.push(next);
                                    break;
                            }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_shengxi":{
                trigger:{
                    global:"phaseUseEnd",
                },
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                content:function(){
                    "step 0"
                    if(player.hasSkill('DIY_shengxi2')||trigger.player.getHistory('sourceDamage').length) event.goto(3);
                    "step 1"
                    player.chooseBool('生息：是否令'+get.translation(trigger.player)+'摸一张牌？').ai=function(event,player){
                        if(get.attitude(player,trigger.player)>0) return true;
                        return false;
                    };
                    "step 2"
                    if(result.bool){
                        player.logSkill('DIY_shengxi',trigger.player);
                        trigger.player.draw();
                    }
                    "step 3"
                    player.removeSkill('DIY_shengxi2');
                },
            },
            "DIY_shengxi2":{
                mark:true,
                marktext:"生息",
                intro:{
                    content:"本回合〖生息〗失效",
                },
            },
            "DIY_dongcha":{
                trigger:{
                    player:"judgeBegin",
                },
                audio:"ext:天牢令/image/audio:2",
                filter:function(){
        return ui.cardPile.childNodes.length>0;
    },
                forced:true,
                content:function(){
        'step 0'
        var cards=get.cards();
        event.cards=cards;
        game.log(player,'观看了牌堆顶的'+get.cnNumber(cards.length)+'张牌');
        player.chooseControl('ok').set('dialog',['洞察',cards]);
        'step 1'
        while(cards.length){
            ui.cardPile.insertBefore(cards.pop(),ui.cardPile.firstChild);
        }
        game.updateRoundNumber();
        'step 2'
        player.chooseCard('he','将一张牌置于牌堆顶');
        'step 3'
        if(result&&result.cards){
            event.card=result.cards[0];
            player.lose(result.cards,ui.cardPile,'insert');
            game.log(player,'将',(get.position(event.card)=='h'?'一张牌':event.card),'置于牌堆顶');
            game.broadcastAll(function(player){
                var cardx=ui.create.card();
                cardx.classList.add('infohidden');
                cardx.classList.add('infoflip');
            },player);
            game.updateRoundNumber();
        }
    },
            },
            "DIY_yajun":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"damageEnd",
                },
                derivation:"DIY_dongcha",
                direct:true,
                content:function(){
        'step 0'
        event.count=trigger.num;
        'step 1'
        player.chooseControl('选项一','选项二','cancel2').set('prompt','雅俊<br><br><div class="text">选项一:获得造成此伤害的牌并摸一张牌。</div><br><div class="text">选项二:按照你选择的区域优先度随机获得每名其他角色区域里的一张牌，然后翻面。</div></br>').set('ai',function(event,player){
            var num=game.countPlayer(function(current){
            if(current.countCards('he')&&current!=player&&get.attitude(player,current)<=0){
                return true;
            }
            if(current.countCards('j')&&current!=player&&get.attitude(player,current)>0){
                return true;
            }
            }); 
            if(num>2) return '选项二';
            return '选项一';
        });
        'step 2'
        if(result.control!='cancel2'){
            player.addTempSkill('DIY_dongcha',{player:"phaseBegin"});
            if(result.control=='选项一'){
                event.goto(3);
            }
            else{
                event.goto(5);
            }
        }
        'step 3'
        player.logSkill('DIY_yajun');
        player.gain(trigger.cards);
        player.$gain2(trigger.cards);
        player.draw();
        event.count--;
        'step 4'
        if(event.count>0){
            event.goto(3);
        }
        else{
            event.goto(12);
        }
        'step 5'
        var targets=game.filterPlayer();
        targets.remove(player);
        targets.sort(lib.sort.seat);
        event.targets=targets;
        "step 6"
        event.num=0;
        player.logSkill('DIY_yajun');
        player.line(targets,'green');
        player.chooseControl('手牌区','装备区','判定区').set('ai',function(){
            if(game.hasPlayer(function(current){
                return current.countCards('j')&&current!=player&&get.attitude(player,current)>0;
            })) return 2;
            return Math.floor(Math.random()*3);
        }).set('prompt','请选择优先获得的区域');
        "step 7"
        event.range={
            手牌区:['h','e','j'],
            装备区:['e','h','j'],
            判定区:['j','h','e'],
        }[result.control||'手牌区'];
        "step 8"
        if(num<event.targets.length){
            var target=event.targets[num];
            var range=event.range;
            for(var i=0;i<range.length;i++){
                var cards=target.getCards(range[i]);
                if(cards.length){
                    var card=cards.randomGet();
                    player.gain(card,target,'giveAuto','bySelf');
                    break;
                }
            }
            event.num++;
        }
        "step 9"
        if(num<event.targets.length) event.goto(8);
        "step 10"
        player.turnOver();
        "step 11"
        event.count--;
        if(event.count){
            event.goto(5);
        }
        'step 12'
        game.delay();
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function(card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.55];
            },
                    },
                },
            },
            "DIY_guijian":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"damageEnd",
                },
                filter:function(event,player){
        return event.player!=player&&event.player.isAlive();
    },
                check:function(event,player){
        return get.attitude(player,event.player)>0;
    },
                content:function(){
                    'step 0'
                    player.judge(function(card){
                        if(trigger.player.hp==trigger.player.maxHp){
                            if(get.color(card)=='red') return -1;
                        }
                        if(get.color(card)=='red') return 1;
                        return 0;
                    });
                    'step 1'
                    if(result.color){
                        if(result.color=='red'){
                            if(trigger.player.hp<trigger.player.maxHp) trigger.player.recover();
                            event.goto(3);
                        }
                        else{
                            player.draw();
                            player.chooseCard('he',true,'选择交给'+get.translation(trigger.player)+'一张牌');
                        }
                    }
                    'step 2'
                    if(result.bool&&result.cards&&result.cards.length) trigger.player.gain(result.cards,player,'giveAuto');
                    'step 3'
                    event.finish();
                },
            },
            "DIY_tiansuan":{
                audio:"tiansuan",
                trigger:{
                    global:"gameDrawAfter",
                    player:"phaseBegin",
                },
                forced:true,
                filter:function(event,player){
                    return !game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_1');
                    })||!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_2');
                    })||!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_3');
                    })||!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_4');
                    })||!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_5');
                    });
                },
                content:function(){
                    player.removeSkill('DIY_tiansuan_1');
                    player.removeSkill('DIY_tiansuan_2');
                    player.removeSkill('DIY_tiansuan_5');
                    player.removeSkill('DIY_tiansuan_3');
                    player.removeSkill('DIY_tiansuan_4');
                    if(!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_1');
                    })) player.addSkill('DIY_tiansuan_1');
                    if(!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_2');
                    })) player.addSkill('DIY_tiansuan_2');
                    if(!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_5');
                    })) player.addSkill('DIY_tiansuan_5');
                    if(!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_3');
                    })) player.addSkill('DIY_tiansuan_3');
                    if(!game.hasPlayer(function(current){
                    return current.hasSkill('DIY_tiansuan_4');
                    })) player.addSkill('DIY_tiansuan_4');
                },
                group:"DIY_tiansuan_6",
                subSkill:{
                    "1":{
                        charlotte:true,
                        mark:true,
                        marktext:"下下签",
                        intro:{
                            name:"下下签",
                            content:"当你受到伤害时，你令此伤害+1。你不能使用【酒】或【桃】。<br>（若你有〖天算〗此签无效）",
                        },
                        trigger:{
                            player:"damageBegin1",
                        },
                        filter:function(event,player){
                            return !player.hasSkill('DIY_tiansuan');
                        },
                        direct:true,
                        forced:true,
                        mod:{
                            cardEnabled:function(card,player){
                                if(!player.hasSkill('DIY_tiansuan')&&(card.name=='tao'||card.name=='jiu')) return false;
                            },
                            cardSavable:function(card,player){
                                if(!player.hasSkill('DIY_tiansuan')&&(card.name=='tao'||card.name=='jiu')) return false;
                            },
                        },
                        content:function(){
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_tiansuan")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_tiansuan',player);
                                }
                            });
                            player.popup('下下签');
                            trigger.num++;
                        },
                        aiCheck:function(target){
                            if(target.hasSkill('DIY_tiansuan_1')) return 0;
                            var player=_status.event.player;
                            var att=get.attitude(player,target);
                            return -att/Math.sqrt(Math.max(1,target.hp));
                        },
                        ai:{
                            effect:{
                                target:function(card,player,target,current){
                                    if(get.tag(card,'damage')&&!player.hasSkillTag('jueqing',false,target)) return 1.3;
                                },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        charlotte:true,
                        mark:true,
                        marktext:"下签",
                        intro:{
                            name:"下签",
                            content:"当你受到伤害时，你令此伤害+1。",
                        },
                        trigger:{
                            player:"damageBegin2",
                        },
                        direct:true,
                        forced:true,
                        content:function(){
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_tiansuan")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_tiansuan',player);
                                }
                            });
                            player.popup('下签');
                            trigger.num++;
                        },
                        aiCheck:function(target){
                            if(target.hasSkill('DIY_tiansuan_2')) return 0;
                            var player=_status.event.player;
                            var att=get.attitude(player,target);
                            return -att/Math.sqrt(Math.max(1,target.hp));
                        },
                        ai:{
                            effect:{
                                target:function(card,player,target,current){
                                    if(get.tag(card,'damage')&&!player.hasSkillTag('jueqing',false,target)) return 1.3;
                                },
                            },
                        },
                        sub:true,
                    },
                    "3":{
                        charlotte:true,
                        mark:true,
                        marktext:"上签",
                        intro:{
                            name:"上签",
                            content:"当你受到伤害时，你摸一张牌并令此伤害值改为1。",
                        },
                        trigger:{
                            player:"damageBegin3",
                        },
                        direct:true,
                        forced:true,
                        content:function(){
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_tiansuan")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_tiansuan',player);
                                }
                            });
                            player.popup('上签');
                            trigger.num=1;
                            player.draw();
                        },
                        aiCheck:function(target){
                            if(target.hasSkill('DIY_tiansuan_3')) return 0;
                            var player=_status.event.player;
                            var att=get.attitude(player,target);
                            if(target.countCards('e',function(card){
                                return get.value(card,target)<=0;
                            })) att*=2;
                            if(target.hp==1) return att/2;
                            return att/Math.sqrt(Math.max(1,target.hp));
                        },
                        ai:{
                            filterDamage:true,
                            skillTagFilter:function(player,tag,arg){
                                if(arg&&arg.player){
                                    if(arg.player.hasSkillTag('jueqing',false,player)) return false;
                                }
                            },
                            effect:{
                                target:function(card,player,target,current){
                                    if(target&&target.hp>1&&get.tag(card,'damage')&&!player.hasSkillTag('jueqing',false,target)) return 0.8;
                                },
                            },
                        },
                        sub:true,
                    },
                    "4":{
                        charlotte:true,
                        mark:true,
                        marktext:"上上签",
                        intro:{
                            name:"上上签",
                            content:"当你受到伤害时，防止此伤害。<br>（若你有〖天算〗此签无效）",
                        },
                        trigger:{
                            player:"damageBegin4",
                        },
                        filter:function(event,player){
                            return !player.hasSkill('DIY_tiansuan');
                        },
                        direct:true,
                        forced:true,
                        content:function(){
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_tiansuan")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_tiansuan',player);
                                }
                            });
                            player.popup('上上签');
                            trigger.cancel();
                        },
                        aiCheck:function(target){
                            if(target.hasSkill('DIY_tiansuan_4')) return 0;
                            var player=_status.event.player;
                            var att=get.attitude(player,target);
                            if(target.countCards('e',function(card){
                                return get.value(card,target)<=0;
                            })) att*=2;
                            return att/Math.sqrt(Math.max(1,target.hp));
                        },
                        ai:{
                            effect:{
                                target:function(card,player,target,current){
                                    if(get.tag(card,'damage')&&!player.hasSkillTag('jueqing',false,target)) return 'zerotarget';
                                },
                            },
                        },
                        sub:true,
                    },
                    "5":{
                        charlotte:true,
                        mark:true,
                        marktext:"中签",
                        intro:{
                            name:"中签",
                            content:"当你受到伤害时，你令伤害属性改为火属性并将伤害值改为1。",
                        },
                        trigger:{
                            player:"damageBegin",
                        },
                        direct:true,
                        forced:true,
                        content:function(){
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_tiansuan")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_tiansuan',player);
                                }
                            });
                            player.popup('中签');
                            trigger.num=1;
                            trigger.nature='fire';
                        },
                        aiCheck:function(target){
                            if(target.hasSkill('DIY_tiansuan_5')) return 0;
                            var player=_status.event.player;
                            var att=get.attitude(player,target);
                            if(target.countCards('e',function(card){
                                return get.value(card,target)<=0;
                            })) att*=2;
                            if(target.hp==1) return att/2;
                            return att/Math.sqrt(Math.max(1,target.hp));
                        },
                        sub:true,
                    },
                    "6":{
                        enable:"phaseUse",
                        audio:"tiansuan",
                        filter:function(event,player){
                            return player.hasSkill('DIY_tiansuan_1')||player.hasSkill('DIY_tiansuan_2')||player.hasSkill('DIY_tiansuan_3')||player.hasSkill('DIY_tiansuan_4')||player.hasSkill('DIY_tiansuan_5');
                        },
                        filterTarget:function (card,player,target){
                            if(target.hasSkill('DIY_tiansuan_1')) return false;
                            if(target.hasSkill('DIY_tiansuan_2')) return false;
                            if(target.hasSkill('DIY_tiansuan_3')) return false;
                            if(target.hasSkill('DIY_tiansuan_4')) return false;
                            if(target.hasSkill('DIY_tiansuan_5')) return false;
                            return player!=target;
                        },
                        content:function(){
                            'step 0'
                            var list=[];
                            if(player.hasSkill('DIY_tiansuan_1')) list.push('下下签');
                            if(player.hasSkill('DIY_tiansuan_2')) list.push('下签');
                            if(player.hasSkill('DIY_tiansuan_5')) list.push('中签');
                            if(player.hasSkill('DIY_tiansuan_3')) list.push('上签');
                            if(player.hasSkill('DIY_tiansuan_4')) list.push('上上签');
                            player.chooseControl(list).set('ai',function(){
                                var att=get.attitude(player,target);
                                if(att>0&&target.hp<3) return '上上签';
                                if(att>0) return '上签';
                                if(att<0&&target.hp<3) return '下下签';
                                if(att<0) return '下签';
                                return '中签';
                            });
                            'step 1'
                            game.log(player,'将','#g【'+result.control+'】','移给了',target);
                            switch(result.control){
                                case '下下签':
                                    player.say(["此签加之与你，定有所伤"].randomGet());
                                    player.removeSkill('DIY_tiansuan_1');
                                    target.addTempSkill('DIY_tiansuan_1',{player:'phaseUseBegin'});
                                    break;
                                case '下签':
                                    player.say(["此签加之与你，定有所伤","这就是，你们要经历的下签地狱！"].randomGet());
                                    player.removeSkill('DIY_tiansuan_2');
                                    target.addTempSkill('DIY_tiansuan_2',{player:'phaseUseBegin'});
                                    break;
                                case '上签':
                                    player.removeSkill('DIY_tiansuan_3');
                                    target.addTempSkill('DIY_tiansuan_3',{player:'phaseUseBegin'});
                                    break;
                                case '上上签':
                                    player.say(["此乃完全之签，不惧天雷"].randomGet());
                                    player.removeSkill('DIY_tiansuan_4');
                                    target.addTempSkill('DIY_tiansuan_4',{player:'phaseUseBegin'});
                                    break;
                                case '中签':
                                    player.removeSkill('DIY_tiansuan_5');
                                    target.addTempSkill('DIY_tiansuan_5',{player:'phaseUseBegin'});
                                    break;
                            }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_tuxi":{
                audio:"ext:天牢令/image/audio:3",
                trigger:{
                    player:"drawBegin",
                },
                forced:true,
                direct:true,
                filter:function(event,player){
        return event.num>0&&game.hasPlayer(function(target){
            return target.countCards('he')>0&&player!=target;
        });
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('DIY_tuxi'),'获得至多'+get.translation(trigger.num)+'名角色的各一张牌，然后少摸等量的牌',[1,trigger.num],function(card,player,target){
            return target.countCards('he')>0&&player!=target;
        },function(target){
            var att=get.attitude(_status.event.player,target);
            if(target.hasSkill('tuntian')) return att/10;
            return 1-att;
        }).setHiddenSkill('DIY_tuxi');
        "step 1"
        if(result.bool){
            player.logSkill('DIY_tuxi',result.targets);
            player.line(result.targets,'green');
            event.targets=result.targets;
            event.targets.sort(lib.sort.seat);
            trigger.num-=result.targets.length;
        }
        else{
            event.finish();
        }
        "step 2"
        if(player.isAlive()&&event.targets.length){
            player.gainPlayerCard(event.targets.shift(),'he',true);
        }
        else event.finish();
        'step 3'
        if(event.targets.length) event.goto(2);
        'step 4'
        if(trigger.num<=0) trigger.cancel();
    },
                ai:{
                    threaten:1.6,
                    expose:0.2,
                },
            },
            "DIY_powei":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    target:"useCardToTarget",
                },
                marktext:"围",
                intro:{
                    name:"破围(围)",
                    "name2":"围",
                    content:"mark",
                },
                forced:true,
                filter:function(event,player){
        if(event.targets.length!=1) return false;
        return event.player!=player&&!event.player.hasMark("DIY_powei");
    },
                content:function(){
                    trigger.player.addMark('DIY_powei',1,false);
                },
                group:"DIY_powei_use",
                mod:{
                    targetInRange:function(card,player,target){
                        if(target.hasMark('DIY_powei')) return true;
                    },
                    cardUsableTarget:function(card,player,target){
                        if(target.hasMark('DIY_powei')) return true;
                    },
                },
                ai:{
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
                        return arg&&arg.target&&arg.target.hasMark('DIY_powei')
                    },
                },
                subSkill:{
                    use:{
                        audio:"DIY_powei",
                        trigger:{
                            player:"useCardToTargeted",
                        },
                        forced:true,
                        filter:function(event,player){
                            if(event.targets.length!=1) return false;
                            return event.target.hasMark('DIY_powei');
                        },
                        content:function(){
                            player.draw();
                        },
                        sub:true,
                    },
                },
            },
            "DIY_xuanfeng":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["loseAfter","phaseDiscardEnd"],
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
                },
                direct:true,
                filter:function(event,player){
        if(!game.hasPlayer(function(current){
            return current!=player&&current.countCards('he')>0;
        })) return false;
        if(event.name=='phaseDiscard'){
            var cards=[];
            player.getHistory('lose',function(evt){
                if(evt&&evt.type=='discard'&&evt.getParent('phaseDiscard')==event&&evt.hs) cards.addArray(evt.hs);
            });
            return cards.length>1;
        }
        var evt=event.getl(player);
        return evt&&evt.es&&evt.es.length>0;
    },
                content:function(){
        'step 0'
        var list=['弃置至多两名其他角色的合计两张牌'];
        if(lib.skill.DIY_xuanfeng.canMoveCard(player)) list.push('移动场上的一张装备牌');
        player.chooseControl('cancel2').set('choiceList',list).set('prompt',get.prompt('DIY_xuanfeng')).set('ai',function(){
            if(lib.skill.DIY_xuanfeng.canMoveCard(player,true)) return 1;
            return 0;
        });
        'step 1'
        if(result.control!='cancel2'){
            player.logSkill('DIY_xuanfeng');
            if(result.index==1) event.goto(5);
            else event.count=2;
        }
        else event.goto(10);
        'step 2'
        player.chooseTarget('弃置一名其他角色的一张牌',function(card,player,target){
            if(player==target) return false;
            return target.countDiscardableCards(player,'he');
        }).set('ai',function(target){
            return -get.attitude(_status.event.player,target);
        });
        'step 3'
        if(result.bool){
            player.line(result.targets[0],'green');
            player.discardPlayerCard(result.targets[0],'he',true);
            event.count--;
        }
        else event.goto(10);
        'step 4'
        if(event.count) event.goto(2);
        else event.goto(10);
        'step 5'
        var next=player.chooseTarget(2,function(card,player,target){
            if(ui.selected.targets.length){
                var from=ui.selected.targets[0];
                if(target.isMin()) return false;
                var es=from.getCards('e');
                for(var i=0;i<es.length;i++){
                    if(target.isEmpty(get.subtype(es[i]))) return true;
                }
                return false;
            }
            else{
                return target.countCards('e')>0;
            }
        });
        next.set('ai',function(target){
            var player=_status.event.player;
            var att=get.attitude(player,target);
            var sgnatt=get.sgn(att);
            if(ui.selected.targets.length==0){
                if(att>0){
                    if(target.countCards('e',function(card){
                        return get.value(card,target)<0&&game.hasPlayer(function(current){
                            return current!=player&&current!=target&&get.attitude(player,current)<0&&current.isEmpty(get.subtype(card))&&get.effect(current,card,player,player)>0;
                        });
                    })>0) return 9;
                }
                else if(att<0){
                    if(game.hasPlayer(function(current){
                        if(current!=target&&current!=player&&get.attitude(player,current)>0){
                            var es=target.getCards('e');
                            for(var i=0;i<es.length;i++){
                                if(get.value(es[i],target)>0&&current.isEmpty(get.subtype(es[i]))&&get.effect(current,es[i],player,player)>0) return true;
                            }
                        }
                    })){
                        return -att;
                    }
                }
                return 0;
            }
            var es=ui.selected.targets[0].getCards('e');
            var i;
            var att2=get.sgn(get.attitude(player,ui.selected.targets[0]));
            for(i=0;i<es.length;i++){
                if(sgnatt!=0&&att2!=0&&sgnatt!=att2&&
                    get.sgn(get.value(es[i],ui.selected.targets[0]))==-att2&&
                    get.sgn(get.value(es[i],target))==sgnatt&&
                    target.isEmpty(get.subtype(es[i]))){
                    return Math.abs(att);
                }
            }
            if(i==es.length){
                return 0;
            }
            return -att*get.attitude(player,ui.selected.targets[0]);
        });
        next.set('multitarget',true);
        next.set('targetprompt',['被移走','移动目标']);
        next.set('prompt',event.prompt||'移动场上的一张装备牌');
        next.set('forced',true);
        'step 6'
        if(result.bool){
            player.line2(result.targets,'green');
            event.targets=result.targets;
        }
        else{
            event.goto(10);
        }
        'step 7'
        game.delay();
        'step 8'
        if(targets.length==2){
            player.choosePlayerCard('e',true,function(button){
                var player=_status.event.player;
                var targets0=_status.event.targets0;
                var targets1=_status.event.targets1;
                if(get.attitude(player,targets0)>get.attitude(player,targets1)){
                    if(get.value(button.link,targets0)<0) return get.effect(targets1,button.link,player,player);
                    return 0;
                }
                else{
                    return get.value(button.link,targets0)*get.effect(targets1,button.link,player,player);
                }
            },targets[0]).set('targets0',targets[0]).set('targets1',targets[1]).set('filterButton',function(button){
                var targets1=_status.event.targets1;
                return targets1.isEmpty(get.subtype(button.link));
            });
        }
        else{
            event.goto(10);
        }
        'step 9'
        if(result.bool&&result.links.length){
            var link=result.links[0];
            event.targets[1].equip(link);
            event.targets[0].$give(link,event.targets[1])
            game.delay();
            event.result={bool:true};
        }
        'step 10'
        player.chooseTarget(get.prompt('DIY_xuanfeng'),function(card,player,target){
            if(target==player) return false;
            return get.distance(player,target)<=1||player.canUse('sha',target,false);
        }).set('ai',function(target){
            if(get.distance(player,target)<=1){
                return get.damageEffect(target,player,player)*2;
            }
            else{
                return get.effect(target,{name:'sha'},player,player);
            }
        });
        'step 11'
        if(result.bool){
            player.logSkill('DIY_xuanfeng',result.targets);
            var target=result.targets[0];
            var distance=get.distance(player,target);
            if(distance<=1&&player.canUse('sha',target,false)){
                player.chooseControl('出杀','造成伤害').ai=function(){
                    return '造成伤害';
                }
                event.target=target;
            }
            else if(distance<=1){
                target.damage();
                event.finish();
            }
            else{
                player.useCard({name:'sha',isCard:true},target,false).animate=false;
                game.delay();
                event.finish();
            }
        }
        else{
            event.finish();
        }
        "step 12"
        var target=event.target;
        if(result.control=='出杀'){
            player.useCard({name:'sha',isCard:true},target,false).animate=false;
            game.delay();
        }
        else{
            target.damage();
        }
    },
                canMoveCard:function(player,withatt){
        return game.hasPlayer(function(current){
            var att=get.sgn(get.attitude(player,current));
            if(!withatt||att!=0){
                var es=current.getCards('e');
                for(var i=0;i<es.length;i++){
                    if(game.hasPlayer(function(current2){
                        if(player==current2) return false;
                        if(withatt){
                            if(get.sgn(get.value(es[i],current))!=-att) return false;
                            var att2=get.sgn(get.attitude(player,current2));
                            if(att==att2||att2!=get.sgn(get.value(es[i],current2))) return false;
                        }
                        return current!=current2&&!current2.isMin()&&current2.isEmpty(get.subtype(es[i]));
                    })){
                        return true;
                    }
                }
            }
        });
    },
                ai:{
                    effect:{
                        target:function(card,player,target,current){
                if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
            },
                    },
                    reverseEquip:true,
                    noe:true,
                },
            },
            "DIY_yongjin":{
                audio:"ext:天牢令/image/audio:2",
                unique:true,
                trigger:{
                    player:"gainAfter",
                },
                direct:true,
                filter:function(event,player){
        if(event.parent.parent.name=='phaseDraw') return false;
        return event.cards&&event.cards.length>0&&player.countCards('h',{type:['equip']});
    },
                content:function(){
        player.chooseToUse({type:'equip'},'勇进：使用一张装备牌').logSkill='DIY_yongjin';
    },
                ai:{
                    expose:0.3,
                },
            },
            "DIY_shicai":{
                mod:{
                    aiOrder:function(player,card,num){
                        if(player.storage.DIY_shicai==card) return num+999;
                    },
                },
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filter:function(event,player){
        if(player.hasSkill('DIY_shicai_used')) return false;
        var hs=player.getCards('h');
        for(var i=0;i<hs.length;i++){
            if(hs[i].hasGaintag('DIY_shicai')) return false;
        }
        return true;
    },
                forced:true,
                direct:true,
                onremove:true,
                mark:true,
                intro:{
                    mark:function(dialog,content,player){
            if(player!=game.me) return get.translation(player)+'观看牌堆中...';
            if(get.itemtype(_status.pileTop)!='card') return '牌堆顶无牌';
            var cards=[];
            for(var i=0;i<3;i++){
                var card=ui.cardPile.childNodes[i];
                if(card) cards.push(card);
                else break;
            }
            dialog.add(cards);
        },
                },
                check:function(card){
        var player=_status.event.player;
        var cards=get.cards(3);
        var val1=player.getUseValue(cards[0],null,true);
        var val2=player.getUseValue(cards[1],null,true);
        var val3=player.getUseValue(cards[2],null,true);
        if(!val1&&!val2&&!val3) return -1;
        return val1>0||val2>0||val3>0;
    },
                content:function(){
        'step 0'
        var cards=get.cards(3);
        player.chooseButton(['恃才：选择获得一张牌',cards.slice(0)]).set('ai',function(button){
            return game.hasPlayer(function(current){
                return _status.event.player.canUse(button.link,current,null,true);
            })&&player.getUseValue(button.link,null,true);
        });
        while(cards.length){
            ui.cardPile.insertBefore(cards.pop(),ui.cardPile.firstChild);
        }
        'step 1'
        if(result.bool){
            player.logSkill('DIY_shicai');
            player.gain(result.links,'gain2').gaintag.add('DIY_shicai');
            player.storage.DIY_shicai=result.links[0];
        }
        else{
            player.addTempSkill('DIY_shicai_used');
        }
        'step 2'
        game.updateRoundNumber();
    },
                subSkill:{
                    used:{
                        trigger:{
                            player:["useCard2","respond"],
                        },
                        direct:true,
                        forced:true,
                        content:function(){
                            player.removeSkill('DIY_shicai_used');
                        },
                        sub:true,
                    },
                },
                ai:{
                    order:11,
                    result:{
                        player:1,
                    },
                },
            },
            "DIY_cunmu":{
                trigger:{
                    player:["phaseBegin","useCard"],
                },
                forced:true,
                locked:false,
                audio:"ext:天牢令/image/audio:2",
                content:function(){
        'step 0'
        var cards=get.bottomCards(3);
        player.chooseButton(['寸目：选择置于牌堆顶的一张牌',cards.slice(0)]).set('ai',function(button){
            if(_status.event.player==_status.currentPhase) return game.hasPlayer(function(current){
                return _status.event.player.canUse(button.link,current,null,true);
            })&&player.getUseValue(button.link,null,true);
            return get.value(button.link,_status.event.player);
        });
        while(cards.length){
            ui.cardPile.appendChild(cards.pop(),ui.cardPile.firstChild);
        }
        'step 1'
        if(result.bool){
            ui.cardPile.insertBefore(result.links[0],ui.cardPile.firstChild);
        }
        game.updateRoundNumber();
    },
            },
            "DIY_chenglve":{
                mark:true,
                locked:true,
                zhuanhuanji:true,
                marktext:"成",
                intro:{
                    content:function(storage,player,skill){
            var str=player.storage.DIY_chenglve?'锁定技，摸牌阶段开始时，你放弃摸牌，改为摸两张牌，然后弃置一张手牌。若如此做，直到本回合结束，你使用与弃置牌花色相同的牌无距离和次数限制':'锁定技，摸牌阶段开始时，你放弃摸牌，改为摸一张牌，然后弃置两张手牌。若如此做，直到本回合结束，你使用与弃置牌花色相同的牌无距离和次数限制';
            if(player.storage.DIY_chenglve1){
                str+='<br><li>当前花色：';
                str+=get.translation(player.storage.DIY_chenglve1);
            }
            return str;
        },
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                forced:true,
                content:function(){
        'step 0'
        trigger.cancel(null,null,'notrigger');
        if(player.storage.DIY_chenglve==true){
            player.storage.DIY_chenglve=false;
            player.draw(2);
            player.chooseToDiscard('h',true);
        }
        else{
            player.storage.DIY_chenglve=true;
            player.draw();
            player.chooseToDiscard('h',2,true);
        }
        'step 1'
        if(result.bool){
            player.storage.DIY_chenglve1=[];
            for(var i=0;i<result.cards.length;i++){
                player.storage.DIY_chenglve1.add(get.suit(result.cards[i],player));
            }
            player.markSkill('DIY_chenglve');
            player.addTempSkill('DIY_chenglve_1');
        }
    },
                subSkill:{
                    "1":{
                        mod:{
                            cardUsable:function(card,player){
                                var cards=player.storage.DIY_chenglve1;
                                for(var i=0;i<cards.length;i++){
                                    if(cards[i]==get.suit(card)) return Infinity;
                                };
                            },
                            targetInRange:function(card,player){
                                var cards=player.storage.DIY_chenglve1;
                                for(var i=0;i<cards.length;i++){
                                    if(cards[i]==get.suit(card)) return true;
                                };
                            },
                        },
                        onremove:true,
                        sub:true,
                    },
                },
                ai:{
                    fireAttack:true,
                    halfneg:true,
                    threaten:1.05,
                },
            },
            "DIY_panshi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                direct:true,
                filter:function(event,player){
        if(!game.hasPlayer(function(current){
            return current.hasSkill('DIY_cixiao');
        })) return true;
        return player.countCards('he')>=1;
    },
                content:function(){
        'step 0'
        if(game.hasPlayer(function(current){
            return current.hasSkill('DIY_cixiao');
        })) event.goto(2);
        else player.chooseTarget(lib.filter.notMe,get.prompt('DIY_panshi'),'令一名其他角色获得「义父」标记').set('ai',function(target){
            var player=_status.event.player;
            var att=-get.attitude(player,target);
            return att*target.countCards('h');
        });
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('DIY_panshi',target);
            target.addSkill('DIY_cixiao');
        }
        event.finish();
        'step 2'
        var list=game.filterPlayer(function(current){
            return current.hasSkill('DIY_cixiao');
        });
        player.chooseCard({
            prompt:get.prompt('DIY_panshi'),
            prompt2:('弃置一张牌并对'+get.translation(list)+'造成1点伤害，然后你可以移动「义父」标记'),
            position:'he',
            filterCard:lib.filter.cardDiscardable,
            ai1:function(card){
                if(_status.event.goon) return 5-get.value(card);
                return 0;
            },
            ai2:function(target){
                var player=_status.event.player;
                var att=-get.attitude(player,target);
                return att*target.countCards('h');
            },
            goon:function(target){
                var att=-get.attitude(player,target);
                return att*target.countCards('h')<=0;
            }(list[0]),
        });
        'step 3'
        if(result.bool){
            var list=game.filterPlayer(function(current){
                return current.hasSkill('DIY_cixiao');
            });
            player.logSkill('DIY_panshi_damage');
            player.discard(result.cards).delay=false;
            player.line2(game.filterPlayer(function(current){
                if(current.hasSkill('DIY_cixiao')){
                    current.damage();
                    return true;
                }
            }));
            var list=game.filterPlayer(function(current){
                return current.hasSkill('DIY_cixiao');
            });
            player.chooseTarget(lib.filter.notMe,get.prompt('DIY_panshi'),'你可以移动「义父」标记',function(card,player,target){
                return !target.hasSkill('DIY_cixiao');
            }).set('ai',function(target){
            var player=_status.event.player;
            var att=-get.attitude(player,target);
            return att*target.countCards('h');
            });
        }
        else event.goto(5);
        'step 4'
        if(result.bool){
            player.logSkill('DIY_panshi');
            var target=result.targets[0];
            player.line2(game.filterPlayer(function(current){
                if(current.hasSkill('DIY_cixiao')){
                    current.removeSkill('DIY_cixiao');
                    return true;
                }
            }).concat(result.targets),'green');
            target.addSkill('DIY_cixiao');
        }
        'step 5'
        game.delayx();
    },
                derivation:"DIY_cixiao",
                ai:{
                    threaten:8,
                },
            },
            "DIY_panshi_damage":{
                audio:"ext:天牢令/image/audio:2",
            },
            "DIY_cixiao":{
                audio:"ext:天牢令/image/audio:2",
                mark:true,
                marktext:"父",
                intro:{
                    content:"我儿奉先天下无双",
                },
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                filter:function(event,player){
        return player.countCards('h')>0&&game.hasPlayer(function(current){
            return current!=player&&current.hasSkill('DIY_panshi');
        });
    },
                content:function(){
        'step 0'
        var targets=game.filterPlayer(function(current){
            return current!=player&&current.hasSkill('DIY_panshi');
        });
        if(targets.length==1){
            event.target=targets[0];
            player.chooseCard('h',true,'慈孝：给儿子'+get.translation(targets)+'发零花钱');
        }
        else player.chooseCardTarget({
            prompt:'慈孝：给儿子们'+get.translation(targets)+'中的一名角色发零花钱',
            filterCard:true,
            position:'h',
            targets:targets,
            forced:true,
            filterTarget:function(card,player,target){
                return _status.event.targets.contains(target);
            },
        });
        'step 1'
        if(result.bool){
            if(!target) target=result.targets[0];
            player.line(target);
            target.gain(result.cards,player,'giveAuto');
        }
    },
                group:"DIY_cixiao_damage",
            },
            "DIY_cixiao_damage":{
                trigger:{
                    player:"damageBegin4",
                },
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                filter:function(event,player){
        return event.source.hasSkill('DIY_panshi');
    },
                content:function(){
        trigger.num++;
    },
            },
            "DIY_liqu":{
                global:"DIY_liqu2",
                audio:"ext:天牢令/image/audio:2",
            },
            "DIY_liqu2":{
                usable:1,
                audio:"wengua",
                enable:"phaseUse",
                filter:function(event,player){
        if(game.players.length<3) return false;
        if(player.hasSkill('DIY_liqu')) return false;
        return player.countCards('he')&&game.hasPlayer(function(current){
            return current.hasSkill('DIY_liqu');
        });
    },
                direct:true,
                delay:false,
                filterCard:true,
                discard:false,
                lose:false,
                position:"he",
                prompt:function(){
        var player=_status.event.player;
        var list=game.filterPlayer(function(current){
            return current.hasSkill('DIY_liqu');
        });
        var str='将一张牌交给'+get.translation(list);
        if(list.length>1) str+='中的一人';
        return str;
    },
                check:function(card){
        if(card.name=='sha') return 5;
        return 8-get.value(card);
    },
                content:function(){
        "step 0"
        var targets=game.filterPlayer(function(current){
            return current.hasSkill('DIY_liqu');
        });
        if(targets.length==1){
            event.target=targets[0];
            event.goto(2);
        }
        else if(targets.length>0){
            player.chooseTarget(true,'选择【利驱】的目标',function(card,player,target){
                return _status.event.list.contains(target);
            }).set('list',targets).set('ai',function(target){
                var player=_status.event.player;
                return get.attitude(player,target);
            });
        }
        else{
            event.finish();
        }
        "step 1"
        if(result.bool&&result.targets.length){
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.target){
            player.logSkill('DIY_liqu',event.target);
            event.card=cards[0];
            if(event.target!=player){
                player.give(cards,event.target);
            }
            player.chooseTarget(true,'选择'+get.translation(event.target)+'使用【杀】的目标',function(card,player,target){
                return target!=player&&target!=event.target;
            }).set('ai',function(target){
            var player=_status.event.player;
            var att=-get.attitude(player,target);
            return att*target.countCards('h');
            });
        }
        else{
            event.finish();
        }
        delete _status.noclearcountdown;
        game.stopCountChoose();
        "step 3"
        if(result.bool){
            target=result.targets[0];
            event.target.chooseToUse('对'+get.translation(target)+'使用一张杀',{name:'sha'},result.targets[0],-1);
        }
        else{
            event.finish();
        }
        "step 4"
        game.delay();
    },
                ai:{
                    order:2,
                    threaten:1.5,
                    result:{
                        player:function(player,target){
                var target=game.findPlayer(function(current){
                    return current.hasSkill('wengua');
                });
                if(target){
                    return get.attitude(player,target);
                }
            },
                    },
                },
            },
            "DIY_sidao":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardAfter",
                },
                filter:function(event,player){
        if(!player.countCards('hs')) return false;
        if(!event.targets||!event.targets.length) return false;
        for(var i=0;i<event.targets.length;i++){
            if(lib.filter.filterTarget({name:'shunshou'},player,event.targets[i])) return true;
        }
        return false;
    },
                direct:true,
                content:function(){
        var next=player.chooseToUse();
        next.set('targets',game.filterPlayer(function(current){
            return trigger.targets.contains(current);
        }));
        next.set('openskilldialog',get.prompt2('DIY_sidao'));
        next.set('norestore',true);
        next.set('_backupevent','DIY_sidaox');
        next.set('custom',{
            add:{},
            replace:{window:function(){}}
        });
        next.backup('DIY_sidaox');
    },
            },
            "DIY_sidaox":{
                audio:"DIY_sidao",
                filterCard:function(card){
        return get.itemtype(card)=='card';
    },
                position:"hs",
                viewAs:{
                    name:"shunshou",
                },
                filterTarget:function(card,player,target){
        return _status.event.targets&&_status.event.targets.contains(target)&&lib.filter.filterTarget.apply(this,arguments);
    },
                prompt:"将一张手牌当顺手牵羊使用",
                check:function(card){return 7-get.value(card)},
                ai:{
                    wuxie:function(target,card,player,viewer){
            if(get.attitude(viewer,player)>0&&get.attitude(viewer,target)>0){
                return 0;
            }
        },
                    basic:{
                        order:7.5,
                        useful:4,
                        value:9,
                    },
                    result:{
                        target:function(player,target){
                if(get.attitude(player,target)<=0) return (target.countCards('he',function(card){
                    return get.value(card,target)>0&&card!=target.getEquip('jinhe');
                })>0)?-1.5:1.5;
                return (target.countCards('ej',function(card){
                    if(get.position(card)=='e') return get.value(card,target)<=0;
                    var cardj=card.viewAs?{name:card.viewAs}:card;
                    return get.effect(target,cardj,target,player)<0;
                })>0)?1.5:-1.5;
            },
                        player:function(player,target){
                if(get.attitude(player,target)<0&&!target.countCards('he',function(card){
                    return get.value(card,target)>0&&card!=target.getEquip('jinhe');
                })){
                    return 0;
                }
                if(get.attitude(player,target)>1){
                    return (target.countCards('ej',function(card){
                        if(get.position(card)=='e') return get.value(card,target)<=0;
                        var cardj=card.viewAs?{name:card.viewAs}:card;
                        return get.effect(target,cardj,target,player)<0;
                    })>0)?1.5:-1.5;
                }
                return 1;
            },
                    },
                    tag:{
                        loseCard:1,
                        gain:1,
                    },
                },
            },
            "DIY_tanbei":{
                audio:"ext:天牢令/image/audio:3",
                trigger:{
                    source:"damageBegin2",
                },
                filter:function(event,player){
        return player!=event.player;
    },
                forced:true,
                logTarget:"player",
                content:function(){
        if(trigger.player.countCards('h')){
            trigger.cancel();
            player.useCard({name:'shunshou',isCard:true},trigger.player,false,'noai');
        }
        trigger.num++;
    },
            },
            "DIY_fenxin":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                filter:function(event,player){
        var list=[];
        var skills=player.getSkills();
        for(var i=0;i<skills.length;i++){
            list.add(skills[i]);
        }
        return list.length>0;
    },
                content:function(){
        'step 0'
        var list=[];
        var skills=player.getSkills();
        for(var i=0;i<skills.length;i++){
            var label=get.info(skills[i]);
            var name=lib.translate[skills[i]];
            var info=lib.translate[skills[i]+'_info'];
            if(!info) continue;
            if(!name) continue;
            if(name=='酒') continue;
            if(label.equipSkill) continue;
            list.add(skills[i]);
        }
        var Skills=player.awakenedSkills;
        for(var i=0;i<Skills.length;i++){
            if(lib.skill[Skills[i]].limited&&!player.getStorage('DIY_fenxin').contains(Skills[i])){
                list.add(Skills[i]);
            }
        }
        list.remove('jiu');
        event.skills=list;
        if(event.skills.length>0){
            player.chooseControl(event.skills).set('prompt','请选择要废除的技能').set('ai',function(){return event.skills.randomGet()});
        }
        else event.finish();
        'step 1'
        player.popup(result.control);
        player.removeSkill(result.control);
        if(!player.storage.DIY_fenxin) player.storage.DIY_fenxin=[];
        player.markAuto('DIY_fenxin',[result.control]);
        game.log(player,'移除了技能','#g【'+get.translation(result.control)+'】');
        'step 2'
        var list;
        if(_status.characterlist){
            list=[];
            for(var i=0;i<_status.characterlist.length;i++){
                var name=_status.characterlist[i];
                if(lib.character[name][1]==player.group) list.push(name);
            }
        }
        else if(_status.connectMode){
            list=get.charactersOL(function(i){
                return lib.character[i][1]!=player.group;
            });
        }
        else{
            list=get.gainableCharacters(function(info){
                return info[1]==player.group;
            });
        }
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list.remove(players[i].name);
            list.remove(players[i].name1);
            list.remove(players[i].name2);
        }
        list.remove('lingju');
        list.remove('old_lingju');
        list.remove('JX_lingju');
        list=list.randomGets(Math.max(4,game.countPlayer()));
        var skills=[];
        for(var i of list){
            skills.addArray((lib.character[i][3]||[]).filter(function(skill){
                var info=get.info(skill);
                return info&&!info.zhuSkill&&!info.juexingji&&!info.hiddenSkill&&!info.charlotte&&!info.dutySkill;
            }));
        }
        if(!list.length||!skills.length){event.finish();return;}
        if(player.isUnderControl()){
            game.swapPlayerAuto(player);
        }
        var switchToAuto=function(){
            _status.imchoosing=false;
            event._result={
                bool:true,
                skills:skills.randomGets(1),
            };
            if(event.dialog) event.dialog.close();
            if(event.control) event.control.close();
        };
        var chooseButton=function(list,skills){
            var event=_status.event;
            if(!event._result) event._result={};
            event._result.skills=[];
            var rSkill=event._result.skills;            
            var dialog=ui.create.dialog('请选择获得的一个技能',[list,'character'],'hidden');
            event.dialog=dialog;
            var table=document.createElement('div');
            table.classList.add('add-setting');
            table.style.margin='0';
            table.style.width='100%';
            table.style.position='relative';
            for(var i=0;i<skills.length;i++){
                var td=ui.create.div('.shadowed.reduce_radius.pointerdiv.tdnode');
                td.link=skills[i];
                table.appendChild(td);
                td.innerHTML='<span>'+get.translation(skills[i])+'</span>';
                td.addEventListener(lib.config.touchscreen?'touchend':'click',function(){
                    if(_status.dragged) return;
                    if(_status.justdragged) return;
                    _status.tempNoButton=true;
                    setTimeout(function(){
                        _status.tempNoButton=false;
                    },500);
                    var link=this.link;                    
                    if(!this.classList.contains('bluebg')){
                        if(rSkill.length>=1) return;
                        rSkill.add(link);
                        this.classList.add('bluebg');
                    }
                    else{
                        this.classList.remove('bluebg');
                        rSkill.remove(link);
                    }
                });
            }
            dialog.content.appendChild(table);
            dialog.add('');
            dialog.open();
            
            event.switchToAuto=function(){
                event.dialog.close();
                event.control.close();
                game.resume();
                _status.imchoosing=false;
            };
            event.control=ui.create.control('ok',function(link){
                event.dialog.close();
                event.control.close();
                game.resume();
                _status.imchoosing=false;
            });
            for(var i=0;i<event.dialog.buttons.length;i++){
                event.dialog.buttons[i].classList.add('selectable');
            }
            game.pause();
            game.countChoose();
        };
        if(event.isMine()){
            chooseButton(list,skills);
        }
        else if(event.isOnline()){
            event.player.send(chooseButton,list,skills);
            event.player.wait();
            game.pause();
        }
        else{
            switchToAuto();
        }
        'step 3'
        var map=event.result||result;
        if(map&&map.skills&&map.skills.length){
            for(var i of map.skills){
            player.addSkill(i);
            game.log(player,'获得了技能','#g【'+get.translation(i)+'】');
            }
        }
        game.broadcastAll(function(list){
            game.expandSkills(list);
            for(var i of list){
                var info=lib.skill[i];
                if(!info) continue;
                if(!info.audioname2) info.audioname2={};
                info.audioname2.old_yuanshu='weidi';
            }
        },map.skills);
        'step 4'
        if(player.storage.DIY_fenxin&&player.getStorage('DIY_fenxin').contains('DIY_fenxin')){
            player.chooseTarget('选择一名角色然后移除其武将牌上的一个技能',function(card,player,target){
                return target!=player;
            }).set('ai',function(target){
            var player=_status.event.player;
            var att=-get.attitude(player,target);
            return att*target.countCards('h');
            });
        }
        else{
            event.goto(7);
        }
        'step 5'
        if(result.bool){
            event.target=result.targets[0];
            var info=lib.character[event.target.name];
            var skills=event.target.getSkills();
            var list=[];
            for(var i=0;i<info[3].length;i++){
                if(lib.skill[info[3][i]].fixed) continue;
                if(skills.contains(info[3][i])){
                    list.push(info[3][i]);
                }
            }
            if(list.length){
                player.chooseControl(list).set('prompt','请选择要移除的'+get.translation(event.target)+'的技能').set('ai',function(){return list.randomGet()});
            }
        }
        'step 6'
        if(result.control!='cancel2'){
            var skill=result.control;
            event.target.popup(skill);
            game.log(event.target,'移除了技能','#g【'+get.translation(skill)+'】');
            event.target.removeSkill(skill);
            event.target.disableSkill('chuanxin_disable',skill,true);
        }
        'step 7'
    },
            },
            "DIY_jieyuan":{
                audio:"ext:天牢令/image/audio:2",
                group:["DIY_jieyuan_more","DIY_jieyuan_less"],
                subSkill:{
                    more:{
                        audio:"ext:天牢令/image/audio:1",
                        trigger:{
                            source:"damageBegin1",
                        },
                        direct:true,
                        filter:function(event,player){
                return player.countCards('he');
            },
                        content:function(){
                'step 0'
                var goon=(get.attitude(player,trigger.player)<0);
                var next=player.chooseToDiscard(get.prompt('DIY_jieyuan',trigger.player),'he');
                next.set('prompt2','弃置一张牌令伤害+1');
                next.set('ai',function(card){
                    if(_status.event.goon){
                        return 8-get.value(card);
                    }
                    return 0;
                });
                next.set('goon',goon);
                next.logSkill=['DIY_jieyuan',trigger.player];
                'step 1'
                if(result.bool){
                    trigger.num++;
                }
            },
                        sub:true,
                    },
                    less:{
                        audio:"ext:天牢令/image/audio:1",
                        trigger:{
                            player:"damageBegin2",
                        },
                        filter:function(event,player){
                return player.countCards('he');
            },
                        direct:true,
                        content:function(){
                "step 0"
                var next=player.chooseToDiscard(get.prompt('DIY_jieyuan'),'he');
                next.set('prompt2','弃置一张牌令伤害-1');
                next.set('ai',function(card){
                    var player=_status.event.player;
                    if(player.hp==1||_status.event.getTrigger().num>1){
                        return 9-get.value(card);
                    }
                    if(player.hp==2){
                        return 8-get.value(card);
                    }
                    return 7-get.value(card);
                });
                next.logSkill='DIY_jieyuan';
                "step 1"
                if(result.bool){
                    trigger.num--;
                }
            },
                        sub:true,
                    },
                },
                ai:{
                    expose:0.2,
                    threaten:1.5,
                },
            },
            "DIY_mengjin":{
                shaRelated:true,
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardToPlayered",
                },
                logTarget:"target",
                check:function(event,player){
        return get.attitude(player,event.target)<=0;
    },
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        if(event.target.countCards('he')) return true;
        return false;
    },
                content:function(){
        var range=player.getAttackRange();
        player.discardPlayerCard(trigger.target,true,'he',range);
    },
                ai:{
                    threaten:0.5,
                    "directHit_ai":true,
                    skillTagFilter:function(player,tag,arg){
            if(get.attitude(player,arg.target)<=0&&arg.card.name=='sha'&&player.countCards('h',function(card){
                return card!=arg.card&&(!arg.card.cards||!arg.card.cards.contains(card));
            })>=arg.target.countCards('h')) return true;
            return false;
        },
                },
            },
            "DIY_juesi":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filter:function(event,player){
        return player.countCards('h',{type:'basic'})>0;
    },
                filterTarget:function(card,player,target){
        return target!=player&&target.countCards('he')>0&&(player.inRange(target)||target.inRange(player));
    },
                filterCard:{
                    type:"basic",
                },
                content:function(){
        'step 0'
        player.discardPlayerCard(target,true,'he');
        'step 1'
        if(result.bool&&result.cards[0].name!='sha'){
            player.useCard({name:'sha',isCard:true},target);
            target.useCard({name:'sha',isCard:true},player);
        }
    },
                ai:{
                    order:2,
                    result:{
                        target:-1,
                    },
                },
                group:"DIY_juesi_sha",
                subSkill:{
                    sha:{
                        trigger:{
                            target:"useCardToTarget",
                        },
                        direct:true,
                        filter:function(event,player){
                            return event.card.name=='sha'&&event.getParent(2).name=='DIY_juesi';
                        },
                        content:function(){
                            trigger.getParent().directHit.push(player);
                        },
                        sub:true,
                    },
                },
            },
            "DIY_qianhuan":{
                group:["DIY_qianhuan_add","DIY_qianhuan_use"],
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                onremove:function(player,skill){
        var cards=player.getExpansions(skill);
        if(cards.length) player.loseToDiscardpile(cards);
    },
                ai:{
                    threaten:1.8,
                },
                audio:"ext:天牢令/image/audio:2",
                preHidden:true,
                subSkill:{
                    add:{
                        trigger:{
                            global:"damageEnd",
                        },
                        filter:function(event,player){
                return event.player.isAlive()&&player.group=='qun';
            },
                        direct:true,
                        content:function(){
                'step 0'
                if(lib.config.extensions&&lib.config.extensions.contains('千幻聆音')&&lib.config['extension_千幻聆音_enable']){
                    target=player;
                }
                else{
                    target=trigger.player;
                }
                target.chooseBool(get.prompt2('DIY_qianhuan'),'千幻：是否摸一张牌并将一张牌置于'+get.translation(player)+'的武将牌上').set('ai',function(event,player){
            return get.attitude(target,player)>0;
        });
                'step 1'
                if(result.bool){
                    if(lib.config.extensions&&lib.config.extensions.contains('千幻聆音')&&lib.config['extension_千幻聆音_enable']){
                        target=player;
                    }
                    else{
                        target=trigger.player;
                    }
                    target.draw();
                    target.chooseCard('he',true).set('ai',function(card){
                        return 9-get.value(card);
                    });
                }
                else{
                    event.goto(3);
                }
                'step 2'
                if(result.bool){
                    player.logSkill('DIY_qianhuan');
                    var card=result.cards[0];
                    player.addToExpansion(card,player,'give').gaintag.add('DIY_qianhuan');
                }
            },
                        sub:true,
                    },
                    use:{
                        audio:"ext:天牢令/image/audio:2",
                        trigger:{
                            global:"useCardToTarget",
                        },
                        filter:function(event,player){
                if(!['basic','trick'].contains(get.type(event.card,'trick'))) return false;
                return event.target&&event.targets.length==1&&player.getExpansions('DIY_qianhuan').length;
            },
                        direct:true,
                        content:function(){
                'step 0'
                var goon=get.effect(trigger.target,trigger.card,trigger.player,player)<0;
                if(goon){
                    if(['tiesuo','diaohulishan','lianjunshengyan','zhibi','chiling','lulitongxin'].contains(trigger.card.name)){
                        goon=false;
                    }
                    else if(trigger.card.name=='sha'){
                        if(trigger.target.mayHaveShan()||trigger.target.hp>=3){
                            goon=false;
                        }
                    }
                    else if(trigger.card.name=='guohe'){
                        if(trigger.target.countCards('he')>=3||!trigger.target.countCards('h')){
                            goon=false;
                        }
                    }
                    else if(trigger.card.name=='shuiyanqijunx'){
                        if(trigger.target.countCards('e')<=1||trigger.target.hp>=3){
                            goon=false;
                        }
                    }
                    else if(get.tag(trigger.card,'damage')&&trigger.target.hp>=3){
                        goon=false;
                    }
                }
                player.chooseButton().set('goon',goon).set('ai',function(button){
                    if(_status.event.goon) return 1;
                    return 0;
                }).set('createDialog',[get.prompt('DIY_qianhuan'),'<div class="text center">移去一张“千幻”牌令'+
                get.translation(trigger.player)+'对'+get.translation(trigger.target)+'的'+get.translation(trigger.card)+'失效</div>',player.getExpansions('DIY_qianhuan')]);
                'step 1'
                if(result.bool){
                    player.logSkill('DIY_qianhuan_use',trigger.player);
                    trigger.getParent().targets.remove(trigger.target);
                    var card=result.links[0];
                    player.loseToDiscardpile(card);
                }
            },
                        sub:true,
                    },
                },
            },
            "DIY_guhuo":{
                audio:"ext:天牢令/image/audio:2",
                derivation:"rechanyuan",
                enable:["chooseToUse","chooseToRespond"],
                hiddenCard:function(player,name){
        if(player.group!='wu') return false;
        return (lib.inpile.contains(name)&&player.countCards('hes')>0);
    },
                filter:function(event,player){
        if(player.group!='wu') return false;
        if(!player.countCards('hes')) return false;
        for(var i of lib.inpile){
            var type=get.type(i);
            if((type=='basic'||type=='trick')&&event.filterCard({name:i},player,event)) return true;
            if(i=='sha'){
                for(var j of lib.inpile_nature){
                    if(event.filterCard({name:i,nature:j},player,event)) return true;
                }
            }
        }
        return false;
    },
                chooseButton:{
                    dialog:function(){
            var list=[];
            for(var i of lib.inpile){
                var type=get.type(i);
                if(type=='basic'||type=='trick') list.push([type,'',i]);
                if(i=='sha'){
                    for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
                }
            }
            return ui.create.dialog('蛊惑',[list,'vcard']);
        },
                    filter:function(button,player){
            var evt=_status.event.getParent();
            return evt.filterCard({name:button.link[2],nature:button.link[3]},player,evt);
        },
                    check:function(button){
            var player=_status.event.player;
            var hasEnemy=game.hasPlayer(function(current){
                return current!=player&&!current.hasSkill('rechanyuan')&&(get.realAttitude||get.attitude)(current,player)<0;
            });
            var card={name:button.link[2],nature:button.link[3]};
            var val=_status.event.getParent().type=='phase'?player.getUseValue(card):1;
            if(val<=0) return 0;
            if(hasEnemy){
                if(!player.countCards('h',function(cardx){
                    if(card.name==cardx.name){
                        if(card.name!='sha') return true;
                        return get.nature(card)==get.nature(cardx);
                    }
                    return false;
                })) return 0;
                return 3*val;
            }
            return val;
        },
                    backup:function(links,player){
            return {
                viewAs:{
                    name:links[0][2],
                    nature:links[0][3],
                    suit:'none',
                    number:null,
                },
                position:'hes',
                ai1:function(card){
                    var player=_status.event.player;
                    var hasEnemy=game.hasPlayer(function(current){
                        return current!=player&&!current.hasSkill('rechanyuan')&&(get.realAttitude||get.attitude)(current,player)<0;
                    });
                    var cardx=lib.skill.DIY_guhuo_backup.viewAs;
                    if(hasEnemy){
                        if(card.name==cardx.name&&(card.name!='sha'||card.nature==cardx.nature)) return 10;
                        return 0;
                    }
                    return 6-get.value(card);
                },
                filterCard:true,
            }
        },
                    prompt:function(links){
            return '将一张手牌当做'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    fireAttack:true,
                    respondShan:true,
                    respondSha:true,
                    skillTagFilter:function(player){
            if(!player.countCards('hes')) return false;
        },
                    order:10,
                    result:{
                        player:1,
                    },
                    threaten:1.3,
                },
                group:"DIY_guhuo_guess",
            },
            "DIY_guhuo_guess":{
                trigger:{
                    player:["useCardBefore","respondBefore"],
                },
                forced:true,
                silent:true,
                popup:false,
                firstDo:true,
                filter:function(event,player){
        return event.skill&&event.skill.indexOf('DIY_guhuo_')==0;
    },
                content:function(){
        'step 0'
        event.fake=false;
        var card=trigger.cards[0];
        if(card.name!=trigger.card.name||(card.name=='sha'&&(trigger.card.nature||card.nature)&&trigger.card.nature!=card.nature)) event.fake=true;
        player.logSkill('DIY_guhuo');
        player.line(trigger.targets,get.nature(trigger.card));
        event.cardTranslate=get.translation(trigger.card.name);
        trigger.card.number=get.number(card);
        trigger.card.suit=get.suit(card);
        //trigger.line=false;
        trigger.skill='DIY_guhuo_backup';
        if(trigger.card.name=='sha'&&trigger.card.nature) event.cardTranslate=get.translation(trigger.card.nature)+event.cardTranslate;
        player.popup(event.cardTranslate,trigger.name=='useCard'?'metal':'wood');
        event.prompt='是否质疑'+get.translation(player)+'声明的'+event.cardTranslate+'？';
        game.log(player,'声明了','#y'+event.cardTranslate);
        event.targets=game.filterPlayer(function(current){
            return current!=player&&!current.hasSkill('rechanyuan');
        }).sortBySeat();
        event.targets2=event.targets.slice(0);
        player.lose(card,ui.ordering).relatedEvent=trigger;
        if(!event.targets.length) event.goto(5);
        else if(_status.connectMode) event.goto(3);
        event.betrays=[];
        'step 1'
        event.target=targets.shift();
        event.target.chooseButton([event.prompt,[['不质疑','质疑'],'vcard']],true,function(button){
            var player=_status.event.player;
            var evt=_status.event.getParent('DIY_guhuo_guess');
            if(!evt) return Math.random();
            var ally=button.link[2]=='不质疑';
            if(ally&&(player.hp<=1||get.attitude(player,evt.player)>=0)) return 1.1;
            return Math.random();
        });
        'step 2'
        if(result.links[0][2]=='质疑'){
            event.betrays.push(target);
            target.addExpose(0.2);
        }
        event.goto(targets.length?1:5);
        'step 3'
        var list=event.targets.map(function(target){
            return [target,[event.prompt,[['不质疑','质疑'],'vcard']],true];
        });
        player.chooseButtonOL(list).set('switchToAuto',function(){
            _status.event.result='ai';
        }).set('processAI',function(){
            var choice=Math.random()>0.5?'不质疑':'质疑';
            var player=_status.event.player;
            var evt=_status.event.getParent('DIY_guhuo_guess');
            if(player.hp<=1||evt&&(get.realAttitude||get.attitude)(player,evt.player)>=0) choice='不质疑';
            return {
                bool:true,
                links:[['','',choice]],
            }
        });
        'step 4'
        for(var i in result){
            if(result[i].links[0][2]=='质疑'){
                event.betrays.push(lib.playerOL[i]);
                lib.playerOL[i].addExpose(0.2);
            }
        }
        'step 5'
        for(var i of event.targets2){
            var b=event.betrays.contains(i);
            i.popup(b?'质疑':'不质疑',b?'fire':'wood');
            game.log(i,b?'#y质疑':'#g不质疑');
        }
        game.delay();
        'step 6'
        player.showCards(trigger.cards);
        if(event.betrays.length){
            event.betrays.sortBySeat();
            if(event.fake){
                game.asyncDraw(event.betrays);
                trigger.cancel();
                trigger.getParent().goto(0);
                game.log(player,'声明的','#y'+event.cardTranslate,'作废了')
            }
            else{
                var next=game.createEvent('DIY_guhuo_final',false);
                event.next.remove(next);
                trigger.after.push(next);
                next.targets=event.betrays;
                next.setContent(lib.skill.DIY_guhuo_guess.contentx);
                event.finish();
            }
        }
        else event.finish();
        'step 7'
        game.delayx();
    },
                contentx:function(){
        'step 0'
        event.target=targets.shift();
        event.target.chooseToDiscard('弃置一张牌或失去1点体力').set('ai',function(card){
            return 9-get.value(card);
        });
        'step 1'
        if(!result.bool) target.loseHp();
        'step 2'
        target.addSkill('rechanyuan');
        if(targets.length) event.goto(0);
    },
            },
            "DIY_yaowu":{
                trigger:{
                    player:"damageBegin3",
                },
                audio:"ext:天牢令/image/audio:6",
                forced:true,
                filter:function(event){
        return event.card&&(get.color(event.card)!='red'||event.source&&event.source.isAlive());
    },
                content:function(){
        player.gain(trigger.cards,'gain2').gaintag.add('DIY_yaowu');
        trigger[get.color(trigger.card)!='red'?'player':'source'].draw(trigger.num);
    },
                mod:{
                    ignoredHandcard:function(card,player){
            if(card.hasGaintag('DIY_yaowu')) return true;
        },
                    cardDiscardable:function(card,player,name){
            if(name=='phaseDiscard'&&card.hasGaintag('DIY_yaowu')) return false;
        },
                    cardUsable:function(card,player,num){
            var Num=0;
            var hs=player.getCards('h');
            for(var i=0;i<hs.length;i++){
                if(hs[i].hasGaintag('DIY_yaowu')) Num++;
            }
            if(card.name=='sha') return num=Num+1;
        },
                },
            },
            "DIY_daoshu":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                silent:true,
                filterTarget:function(card,player,target){
        return target!=player&&target.countCards('h')>0;
    },
                content:function(){
        'step 0'
        if(!target.isAlive()||!target.countCards('h')) event.goto(6);
        player.chooseControl(lib.suit).set('prompt','请选择一个花色').ai=function(){
        if(target.countCards('h',{suit:['diamond']})) return 'diamond';
        if(target.countCards('h',{suit:['heart']})) return 'heart';
        if(target.countCards('h',{suit:['spade']})) return 'spade';
        if(target.countCards('h',{suit:['club']})) return 'club';
        return lib.suit.randomGet();
        };
        'step 1'
        player.logSkill('DIY_daoshu',target);
        event.suit=result.control;
        player.popup(event.suit+2);
        game.log(player,'选择了',event.suit+2);
        event.cards=target.get('h', function (card) {
          return get.suit(card)==event.suit;
        });
        if(!event.cards.length){
          event.goto(3);
        }
        'step 2'
        if(event.cards.length){
            player.gainPlayerCard(target,true,'h','visibleMove');
            target.damage();
            event.goto(5);
        }
        'step 3'
        if(player.countCards('h',function(card){return get.suit(card)!=event.suit})==0){
            player.showHandcards();
            event.goto(6);
        }
        else{
            player.chooseCard('h',true,function(card){
                return get.suit(card)!=event.suit;
            },'交给'+get.translation(target)+'一张不为'+get.translation(event.suit)+'花色的牌').set('event.suit',event.suit);
        }
        'step 4'
        player.give(result.cards,target,true);
        event.goto(6);
        'step 5'
        if(target.hp>0&&target.countCards('h')) event.goto(0);
    },
                ai:{
                    order:1,
                    result:{
                        target:-1,
                    },
                },
                subSkill:{
                    used:{
                        sub:true,
                    },
                },
                forced:true,
                popup:false,
            },
            "DIY_weicheng":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"gainAfter",
                },
                frequent:true,
                filter:function(event,player){
        if(event.player!=player){
            var evt=event.getl(player);
            return evt&&evt.hs&&evt.hs.length>0;
        }
        return false;
    },
                preHidden:true,
                content:function(){
        player.showHandcards();
        player.draw();
    },
            },
            "DIY_zhengu":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                direct:true,
                content:function(){
        "step 0"
        player.chooseTarget(get.prompt2('DIY_zhengu'),function(card,player,target){
            return !target.hasSkill('DIY_zhengu2');
        }).set('ai',function(target){
            var player=_status.event.player;
            var num=(Math.min(5,player.countCards('h'))-target.countCards('h'));
            var att=get.attitude(player,target);
            return num*att;
        });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('DIY_zhengu',target);
            var num=player.countCards('h')-target.countCards('h');
            if(num>0) target.draw(num);
            if(num<0) target.chooseToDiscard('h',true,-num);
            player.addSkill("DIY_zhengu2");
            target.addSkill("DIY_zhengu2");
            player.storage.DIY_zhengu_mark=player.countCards('h');
            target.storage.DIY_zhengu_mark=player.countCards('h');
        }
    },
                group:"DIY_zhengu_phase",
                subSkill:{
                    phase:{
                        trigger:{
                            player:"phaseBegin",
                        },
                        filter:function(event,player){
                        if(!game.hasPlayer(function(current){
                        return current.hasSkill('DIY_zhengu2');
                        })) return false;
                        return true;
                    },
                        charlotte:true,
                        direct:true,
                        forced:true,
                        content:function(){
                        game.countPlayer(function(current){
                            if(current.hasSkill("DIY_zhengu2")){
                                current.storage.DIY_zhengu_mark=[];
                                current.removeSkill('DIY_zhengu2');
                            }
                        });
                    },
                        sub:true,
                    },
                },
            },
            "DIY_zhengu2":{
                trigger:{
                    player:["loseAfter","gainAfter"],
                },
                charlotte:true,
                onremove:true,
                mark:true,
                marktext:"镇骨",
                intro:{
                    name:"镇骨",
                    content:function(storage,player){
                        var num=player.storage.DIY_zhengu_mark;
                        var str='当你的手牌数小/大于'+get.cnNumber(num)+'时，你摸/弃置至'+get.cnNumber(num)+'张牌。';
                        return str;
                    },
                },
                direct:true,
                forced:true,
                filter:function(event,player){
        return player.countCards('h')!=player.storage.DIY_zhengu_mark;
    },
                content:function(){
        game.countPlayer(function(current){
            if(current.hasSkill("DIY_zhengu")){
                current.line(player,'yellow');
                current.logSkill('DIY_zhengu',player);
            }
        });
        var num=player.storage.DIY_zhengu_mark-player.countCards('h');
        if(num>0){
            player.draw(num);
        }
        else{
            player.chooseToDiscard('h',true,-num);
        }
    },
            },
            "DIY_qiangwu":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard1",
                },
                usable:1,
                forced:true,
                filter:function(event,player){
        return player.isPhaseUsing();
    },
                content:function(){
        "step 0"
        var number=get.number(trigger.card);
        player.storage.DIY_qiangwu=number;
        player.addTempSkill('DIY_qiangwu2','phaseUseEnd');
    },
            },
            "DIY_shenxian":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["useCard2","respond"],
                },
                round:1,
                forced:true,
                content:function(){
        player.draw(get.number(trigger.card));
    },
                group:["DIY_shenxian_roundcount"],
            },
            "DIY_qiangwu2":{
                mod:{
                    aiOrder:function(player,card,num){
            if(get.number(card)>player.storage.DIY_qiangwu) return num+2;
        },
                    targetInRange:function(card,player){
            if(_status.currentPhase==player&&get.number(card)<player.storage.DIY_qiangwu) return true;
        },
                    cardUsable:function(card,player){
            if(_status.currentPhase==player&&get.number(card)>player.storage.DIY_qiangwu) return Infinity;
        },
                },
                trigger:{
                    player:"useCard1",
                },
                charlotte:true,
                onremove:true,
                mark:true,
                marktext:"枪舞",
                intro:{
                    name:"枪舞",
                    content:function(storage,player){
                        var num=player.storage.DIY_qiangwu;
                        var str='你使用大于'+get.translation(num)+'点的牌无次数限制，你使用小于'+get.translation(num)+'张点的牌无距离限制。';
                        return str;
                    },
                },
                filter:function(event,player){
        if(_status.currentPhase==player&&event.card.name=='sha'&&
        get.number(event.card)>player.storage.DIY_qiangwu&&event.addCount!==false) return true;
        return false;
    },
                forced:true,
                popup:false,
                firstDo:true,
                content:function(){
        trigger.addCount=false;
        if(player.stat[player.stat.length-1].card.sha>0){
            player.stat[player.stat.length-1].card.sha--;
        }
    },
            },
            "DIY_xuehen":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                filter:function(event,player){
        return player.countCards('he',{color:'red'})>0;
    },
                filterTarget:true,
                selectTarget:function(){
        var player=_status.event.player
        return [1,player.getDamagedHp()+1];
    },
                position:"he",
                filterCard:{
                    color:"red",
                },
                check:function(card){
        return 8-get.value(card);
    },
                multitarget:true,
                multiline:true,
                line:"fire",
                content:function(){
        'step 0'
        event.delay=false;
        for(var i=0;i<targets.length;i++){
            if(!targets[i].isLinked()){
                targets[i].link(true);
                event.delay=true;
            }
        }
        'step 1'
        if(event.delay){
            game.delay();
        }
        'step 2'
        if(targets.length==1){
            num=player.getDamagedHp()+1;
        }
        else{
            num=1;
        }
        targets[0].damage(num,'fire','nocard');
    },
                ai:{
                    damage:true,
                    fireAttack:true,
                    threaten:1.5,
                    order:7,
                    result:{
                        target:function(player,target){
                var eff=get.damageEffect(target,player,target,'fire');
                if(target.isLinked()){
                    return eff/10;
                }
                else{
                    return eff;
                }
            },
                    },
                },
            },
            "DIY_huxiao":{
                trigger:{
                    source:"damageSource",
                },
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                filter:function(event,player){
        return event.nature=='fire';
    },
                logTarget:"player",
                content:function(){
        if(!player.storage.DIY_huxiao2){
            player.storage.DIY_huxiao2=[];
        }
        player.storage.DIY_huxiao2.add(trigger.player);
        player.addTempSkill('DIY_huxiao2');
    },
            },
            "DIY_huxiao2":{
                onremove:true,
                mark:true,
                intro:{
                    content:"players",
                },
                mod:{
                    cardUsableTarget:function(card,player,target){
            if(player.storage.DIY_huxiao2&&player.storage.DIY_huxiao2.contains(target)) return true;
        },
                },
            },
            "DIY_huxiao3":{
                trigger:{
                    player:"shaMiss",
                },
                direct:true,
                charlotte:true,
                mod:{
                    attackRange:function(player,num){
            return 3;
        },
                },
                filter:function(event,player){
        return player.canUse('sha',event.target,false)&&(player.hasSha()||_status.connectMode&&player.countCards('h'));
    },
                content:function(){
        "step 0"
        player.gain(trigger.cards,'gain2');
        "step 1"
        player.chooseToUse(get.prompt('DIY_huxiao3'),function(card,player,event){
            if(get.name(card)!='sha') return false;
            return lib.filter.filterCard.apply(this,arguments);
        },trigger.target,-1).set('addCount',false).logSkill='DIY_huxiao';
    },
            },
            "DIY_wuji":{
                skillAnimation:true,
                animationColor:"orange",
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                forced:true,
                unique:true,
                juexingji:true,
                filter:function(event,player){
        return player.getStat('damage')>=3&&!player.storage.DIY_wuji;
    },
                content:function(){
        "step 0"
        player.removeSkill('DIY_huxiao');
        player.addSkill('DIY_huxiao3')
        player.gainMaxHp();
        "step 1"
        player.recover();
        player.awakenSkill('DIY_wuji');
        player.storage.DIY_wuji=true;
    },
            },
            "DIY_fengpo":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:["useCardAfter","respondAfter"],
                },
                group:"DIY_fengpo2",
                forced:true,
                filter:function(event,player){
        return (!event.card.isCard||event.cards.length!=1||(get.position(event.cards[0],true)!='o'&&event.card.name!=event.cards[0].name));
    },
                content:function(){
        player.draw();
        player.chooseToUse('凤魄：你可以使用一张牌').logSkill='DIY_fengpo';
    },
            },
            "DIY_fengpo2":{
                audio:"DIY_fengpo",
                enable:["chooseToUse","chooseToRespond"],
                prompt:function(){
        return '将一张方片当作【火杀】使用或打出';
    },
                position:"hes",
                check:function(card,event){
        return 10-get.value(card);
    },
                selectCard:1,
                viewAs:{
                    name:"sha",
                    nature:"fire",
                },
                viewAsFilter:function(player){
        return player.countCards('hes',{suit:'diamond'});
    },
                filterCard:function(card){
        return get.suit(card)=='diamond';
    },
                ai:{
                    yingbian:function(card,player,targets,viewer){
            if(get.attitude(viewer,player)<=0) return 0;
            var base=0,hit=false;
            if(get.cardtag(card,'yingbian_hit')){
                hit=true;
                if(targets.filter(function(target){
                    return target.hasShan()&&get.attitude(viewer,target)<0&&get.damageEffect(target,player,viewer,get.nature(card))>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_all')){
                if(game.hasPlayer(function(current){
                    return !targets.contains(current)&&lib.filter.targetEnabled2(card,player,current)&&get.effect(current,card,player,player)>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_damage')){
                if(targets.filter(function(target){
                    return get.attitude(player,target)<0&&(hit||!target.mayHaveShan()||player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                    },true))&&!target.hasSkillTag('filterDamage',null,{
                        player:player,
                        card:card,
                        jiu:true,
                    })
                })) base+=5;
            }
            return base;
        },
                    canLink:function(player,target,card){
            if(!target.isLinked()&&!player.hasSkill('wutiesuolian_skill')) return false;
            if(target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                target:target,
                card:card,
            },true)) return false;
            if(player.hasSkill('jueqing')||player.hasSkill('gangzhi')||target.hasSkill('gangzhi')) return false;
            return true;
        },
                    basic:{
                        useful:[5,3,1],
                        value:[5,3,1],
                    },
                    order:function(item,player){
            if(player.hasSkillTag('presha',true,null,true)) return 10;
            if(lib.linked.contains(get.nature(item))){
                if(game.hasPlayer(function(current){
                    return current!=player&&current.isLinked()&&player.canUse(item,current,null,true)&&get.effect(current,item,player,player)>0&&lib.card.sha.ai.canLink(player,current,item);
                })&&game.countPlayer(function(current){
                    return current.isLinked()&&get.damageEffect(current,player,player,get.nature(item))>0;
                })>1) return 3.1;
                return 3;
            }
            return 3.05;
        },
                    result:{
                        target:function(player,target,card,isLink){
                var eff=function(){
                    if(!isLink&&player.hasSkill('jiu')){
                        if(!target.hasSkillTag('filterDamage',null,{
                            player:player,
                            card:card,
                            jiu:true,
                        })){
                            if(get.attitude(player,target)>0){
                                return -7;
                            }
                            else{
                                return -4;
                            }
                        }
                        return -0.5;
                    }
                    return -1.5;
                }();
                if(!isLink&&target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                },true)) return eff/1.2;
                return eff;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function(card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function(card){
                if(card.nature) return 1;
            },
                        fireDamage:function(card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function(card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function(card,nature){
                if(card.nature=='poison') return 1;
            },
                    },
                },
            },
            "DIY_zengou":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:["respond","useCard"],
                },
                filter:function(event,player){
        if(!event.respondTo) return false;
        if(event.player==player) return false;
        if(!player.inRange(event.player)) return false;
        return true;
    },
                logTarget:"player",
                check:function(event,player){
        if(get.attitude(player,event.player)>=0) return false;
        if(get.damageEffect(event.player,event.getParent(3).player,player,get.nature(event.card))<=0) return false;
        if(player.hasCard(function(card){
            return get.type(card)!=get.type(event.card)&&lib.filter.cardDiscardable(card,player,'DIY_zengou');
        },'he')) return true;
        return true;
    },
                content:function(){
        'step 0'
        trigger.cancel();
        var str='弃置一张牌';
        if(player.hp>0) str+='，或点「取消」失去一点体力';
        str+='，然后取消'+get.translation(trigger.cards.filterInD())+'的所有目标并获得此牌';
        var next=player.chooseToDiscard(str,'he').set('ai',function(card){
            return 7-get.value(card);
        });
        if(player.hp<=0) next.set('forced',true);
        'step 1'
        if(!result.bool) player.loseHp();
        'step 2'
        var cards=trigger.cards.filterInD();
        if(cards.length) player.gain(cards,'gain2');
    },
            },
            "DIY_zhangji":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                frequent:true,
                content:function(){
        'step 0'
        if(player.isMaxHp()) player.chooseUseTarget({name:'sha'},'长姬：是否视为使用一张【杀】？',false,'nodistance');
        'step 1'
        if(player.isMaxHandcard()) player.chooseUseTarget({name:'jiedao'},'长姬：是否视为使用一张【借刀杀人】？',false,'nodistance');
        'step 2'
        if(player.isMaxHp()&&player.isMaxHandcard()){
            var num=player.getStat('damage');
            player.draw(num);
        }
    },
            },
            "DIY_zenhui":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardToPlayered",
                },
                filter:function(event,player){
        if(event.targets.length>1) return false;
        var card=event.card;
        if(card.name=='sha') return true;
        if(get.type(card)=='trick') return true;
        return false;
    },
                direct:true,
                content:function(){
        "step 0"
        player.chooseTarget(get.prompt2('DIY_zenhui'),function(card,player,target){
            if(player==target) return false;
            var evt=_status.event.getTrigger();
            return !evt.targets.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            return get.effect(target,trigger.card,player,player)+0.01;
        });
        "step 1"
        if(result.bool){
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        "step 2"
        player.logSkill('DIY_zenhui',event.target);
        if(!player.canUse(trigger.card,event.target,false)) event.goto(4);
        if(player.hasSkill('DIY_zenhui2')) event.goto(5);
        event.target.chooseBool('代替'+get.translation(player)+'成为'+get.translation(trigger.card)+'的使用者，或点“取消”成为'+get.translation(trigger.card)+'的额外目标').set('ai',function(card){
            var num=[0,1].randomGet();
            return num<1?true:false;
        });
        "step 3"
        if(result.bool){
            event.goto(4);
        }
        else{
            event.goto(5);
        }
        "step 4"
        trigger.untrigger();
        trigger.getParent().player=event.target;
        game.log(event.target,'成为了',trigger.card,'的使用者');
        player.insertPhase();
        player.addTempSkill('DIY_zenhui2');
        event.goto(6);
        "step 5"
        game.log(event.target,'成为了',trigger.card,'的额外目标');
        trigger.getParent().targets.push(event.target);
        "step 6"
        event.finish();
    },
            },
            "DIY_zenhui2":{
                marktext:"谮毁",
                mark:true,
                intro:{
                    "name2":"谮毁",
                    content:"本回合结束时，你进行一个额外回合",
                },
            },
            "DIY_jiaojin":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    target:"useCardToTarget",
                },
                filter:function(event,player){
        return (event.card.name=='sha'||get.type(event.card)=='trick')&&event.player!=player&&event.player.hasSex('male');
    },
                direct:true,
                content:function(){
        "step 0"
        player.chooseToDiscard('he');
        "step 1"
        if(result.bool){
            player.draw('visible');
            player.logSkill("DIY_jiaojin");
        }
        else{
            event.goto(3);
        }
        "step 2"
        var card=result[0];
        if(get.type(card)!='basic'){
            player.say(["放肆!你敢以下犯上？！","你就不怕我父王杀了你吗？","你疯了？！我可是长公主","岂敢对本公主无礼","见到本公主，为何不跪！","本公主在此，岂容你们放肆？!","本公主 可是掌上明珠","定叫你吃不了兜着走","纵无嫡庶之分，也该论长幼为序"].randomGet());
            trigger.untrigger();
            trigger.getParent().player=player;
            trigger.targets.remove(player);
            trigger.getParent().triggeredTargets2.remove(player);
            trigger.getParent().targets.push(trigger.player);
            game.log(player,'成为了',trigger.cards,'的使用者');
            game.log(trigger.player,'成为了',trigger.cards,'的目标');
        }
    },
            },
            "DIY_jiezi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:["phaseDrawSkipped","phaseDrawCancelled"],
                },
                forced:true,
                content:function(){
        player.addMark('DIY_jiezi',1);
    },
                marktext:"辎",
                intro:{
                    "name2":"辎",
                    content:"mark",
                    onunmark:true,
                },
                group:"DIY_jiezi_extra",
                subSkill:{
                    extra:{
                        audio:"DIY_jiezi",
                        trigger:{
                            global:"phaseDrawAfter",
                        },
                        prompt:function(event,player){
                            var str="截辎：是否令"+get.translation(event.player)+"执行一个摸牌阶段？";
                            return str;
                        },
                        filter:function(event,player){
                return player.countMark('DIY_jiezi');
            },
                        logTarget:"player",
                        check:function(event,player){
                            return get.attitude(player,event.player)>0;
                        },
                        content:function(){
                var next=trigger.player.phaseDraw();
                event.next.remove(next);
                trigger.getParent().next.add(next);
                player.removeMark('DIY_jiezi',1);
            },
                        sub:true,
                    },
                },
            },
            "DIY_duanliang":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseBegin",
                },
                direct:true,
                filter:function(event,player){
                    return !event.numFixed&&player.countCards('h')>0&&event.player!=player;
                },
                content:function(){
        "step 0"
        var save=false;
        if(get.attitude(player,trigger.player)<0){
            save=true;
        }
        var next=player.chooseToDiscard(get.prompt('DIY_duanliang'),'弃置一张黑色牌并进行判定，若结果不为♣ 则跳过'+get.translation(_status.currentPhase)+'的摸牌阶段','he',function(card){
            return get.color(card)=='black';
        }).set('ai',function(card){
			if(save){
                return 7-get.value(card);
			}
			return 0;
        });
        next.logSkill=['DIY_duanliang',_status.currentPhase];
        "step 1"
        if(result.bool){
            player.judge(function(card){
                if(get.suit(card)!="club") return 2;
                return 0;
                }).judge2=function(result){
                    return result.bool?true:false;
                };
        }
        'step 2'
        if(result.bool){
            trigger.player.skip('phaseDraw');
        }
        'step 3'
        game.delay();
    },
                ai:{
                    expose:0.3,
                },
            },
            "DIY_qimei":{
                audio:"qimei",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                direct:true,
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt('DIY_qimei'),'选择一名其他角色并获得“齐眉”效果',lib.filter.notMe).set('',function(target){
            var player=_status.event.player;
            return get.attitude(player,target)/(Math.abs(player.countCards('h')+2-target.countCards('h'))+1)
        });
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('DIY_qimei',target);
            player.storage.DIY_qimei_draw=target;
            player.addTempSkill('DIY_qimei_draw',{player:'phaseBegin'});
            game.delayx();
        }
    },
                subSkill:{
                    draw:{
                        usable:1,
                        audio:"qimei",
                        charlotte:true,
                        forced:true,
                        trigger:{
                            global:["loseAfter","gainAfter"],
                        },
                        logTarget:function(event,player){
                return player.storage.DIY_qimei_draw;
            },
                        filter:function(event,player){
                var target=player.storage.DIY_qimei_draw;
                if(!target||!target.isIn()) return false;
                if(event.player!=target&&event.player!=player) return false;
                return true;
            },
                        content:function(){
                var target=player.storage.DIY_qimei_draw;
                var num=player.countCards('h')-target.countCards('h');
                if(num>0) target.draw(num);
                if(num<0) player.draw(-num);
            },
                        onremove:true,
                        mark:"character",
                        intro:{
                            content:"已和$组成齐眉组合",
                        },
                        group:"DIY_qimei_hp",
                        sub:true,
                    },
                    hp:{
                        usable:1,
                        audio:"qimei",
                        trigger:{
                            global:"changeHp",
                        },
                        charlotte:true,
                        forced:true,
                        logTarget:function(event,player){
                return player.storage.DIY_qimei_draw;
            },
                        filter:function(event,player){
                var target=player.storage.DIY_qimei_draw;
                if(!target||!target.isIn()) return false;
                if(player!=event.player&&target!=event.player) return false;
                return player.hp!=target.hp;
            },
                        content:function(){
                var target=player.storage.DIY_qimei_draw;
                var num=player.hp-target.hp;
                if(num>0) target.recover(num);
                if(num<0) player.recover(-num);
            },
                        sub:true,
                    },
                },
            },
            "DIY_yuqi":{
                audio:"yuqi",
                trigger:{
                    global:"damageEnd",
                },
                frequent:true,
                filter:function(event){
        var num1=game.countPlayer(function(current){
            return current.countCards('ej',{color:'black'});
        });
        var num2=game.countPlayer(function(current){
            return current.countCards('ej',{color:'red'});
        });
        return event.num>0&&num1==num2;
    },
                content:function(){
        "step 0"
        event.count=trigger.num;
        "step 1"
        event.count--;
        event.cards=get.cards(2);
        "step 2"
        if(event.cards.length>1){
            player.chooseCardButton('将“隅泣”牌分配给任意角色',true,event.cards,[1,event.cards.length]).set('ai',function(button){
                if(ui.selected.buttons.length==0) return 1;
                return 0;
            });
        }
        else if(event.cards.length==1){
            event._result={links:event.cards.slice(0),bool:true};
        }
        else{
            event.goto(5);
        }
        "step 3"
        if(result.bool){
            for(var i=0;i<result.links.length;i++){
                event.cards.remove(result.links[i]);
            }
            event.togive=result.links.slice(0);
            player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
                var att=get.attitude(_status.event.player,target);
                if(_status.event.enemy){
                    return -att;
                }
                else if(att>0){
                    return att/(1+target.countCards('h'));
                }
                else{
                    return att/100;
                }
            }).set('enemy',get.value(event.togive[0],player,'raw')<0);
        }
        "step 4"
        if(result.targets.length){
            result.targets[0].gain(event.togive,'draw');
            player.line(result.targets[0],'green');
            game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张牌');
            event.goto(2);
        }
        "step 5"
        if(event.count>0) player.chooseBool(get.prompt2(event.name)).set('frequentSkill',event.name);
        else event.finish();
        "step 6"
        if(result.bool){
            player.logSkill(event.name);
            event.goto(1);
        }
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function(card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
                    var num=1;
                    if(get.attitude(player,target)>0){
                        if(player.needsToDiscard()){
                            num=0.7;
                        }
                        else{
                            num=0.5;
                        }
                    }
                    if(target.hp>=4) return [1,num*2];
                    if(target.hp==3) return [1,num*1.5];
                    if(target.hp==2) return [1,num*0.5];
                }
            },
                    },
                },
            },
            "DIY_shanshen":{
                mark:true,
                marktext:"善身",
                intro:{
                    content:function(storage,player){
            name:'善身';
            var str='<li>拥有技能〖隅泣〗';
            var num1=game.countPlayer(function(current){
                return current.countCards('ej',{color:'black'});
            });
            var num2=game.countPlayer(function(current){
                return current.countCards('ej',{color:'red'});
            });
            if(num1>num2) str='<li>拥有技能〖帷幕〗';
            if(num2>num1) str='<li>拥有技能〖明哲〗';
            return str;
        },
                },
                audio:"shanshen",
                derivation:["DIY_yuqi","DIY_shanshen_weimu","DIY_shanshen_mingzhe"],
                group:["DIY_yuqi","DIY_shanshen_weimu","DIY_shanshen_mingzhe"],
            },
            "DIY_shanshen_weimu":{
                audio:"shanshen",
                mod:{
                    targetEnabled:function(card,player,target){
            var bool=false;
            var num1=game.countPlayer(function(current){
                return current.countCards('ej',{color:'black'});
            });
            var num2=game.countPlayer(function(current){
                return current.countCards('ej',{color:'red'});
            });
            if(num1>num2) bool=true;
            if(bool&&(get.type(card)=='trick'||get.type(card)=='delay')&&
                get.color(card)=='black') return false;
        },
                },
                trigger:{
                    target:"useCardToTarget",
                },
                forced:true,
                filter:function(event,player){
        var bool=false;
        var num1=game.countPlayer(function(current){
            return current.countCards('ej',{color:'black'});
        });
        var num2=game.countPlayer(function(current){
            return current.countCards('ej',{color:'red'});
        });
        if(num1>num2) bool=true;
        return bool&&player==_status.currentPhase&&event.player!=player;
    },
                content:function(){
        trigger.targets.remove(player);
        trigger.getParent().triggeredTargets2.remove(player);
        trigger.untrigger();
        trigger.cancel();
    },
            },
            "DIY_shanshen_mingzhe":{
                audio:"shanshen",
                trigger:{
                    player:["useCard","respond","loseAfter"],
                },
                frequent:true,
                filter:function(event,player){
        var num1=game.countPlayer(function(current){
            return current.countCards('ej',{color:'black'});
        });
        var num2=game.countPlayer(function(current){
            return current.countCards('ej',{color:'red'});
        });
        if(num1>=num2) return false;
        if(player==_status.currentPhase) return false;
        if(event.name!='lose') return get.color(event.card)=='red';
        if(event.type!='discard') return false;
        if(event.cards2){
            for(var i=0;i<event.cards2.length;i++){
                if(get.color(event.cards2[i],player)=='red') return true;
            }
        }
        return false;
    },
                content:function(){
        "step 0"
        event.count=1;
        if(trigger.name=='lose'){
            event.count=0;
            for(var i=0;i<trigger.cards2.length;i++){
                if(get.color(trigger.cards2[i],player)=='red') event.count++;
            }
        }
        "step 1"
        player.draw();
        event.count--;
        "step 2"
        if(event.count){
            player.chooseBool(get.prompt2('DIY_shanshen')).set('frequentSkill','mingzhe');
        }
        else event.finish();
        "step 3"
        if(result.bool){
            player.logSkill('DIY_shanshen');
            event.goto(1);
        }
    },
                ai:{
                    threaten:0.7,
                },
            },
            "DIY_xianya":{
                audio:"xianjing",
                trigger:{
                    global:"phaseJieshuBegin",
                },
                direct:true,
                filter:function(event,player){
        var num=0;
        player.getHistory('lose',function(evt){
            if(evt.cards2) num+=evt.cards2.length;
        });
        return num>0;
    },
                content:function(){
        'step 0'
        var num=1;
        if(player.getHistory('damage').length>0) num=2;
        player.chooseTarget(get.prompt('DIY_xianya'),'令一名角色摸'+get.cnNumber(num)+'张牌。').set('ai',function(target){
            if(target.hasSkillTag('nogain')&&target!=_status.currentPhase) return target.isDamaged()?0:1;
            var att=get.attitude(_status.event.player,target);
            if(target.isDamaged()) att=att*1.2;
            return att;
        });
        'step 1'
        if(result.bool){
            var num=1;
            if(player.getHistory('damage').length>0) num=2;
            var target=result.targets[0];
            player.logSkill('DIY_xianya',target);
            target.draw(num);
        }
    },
            },
            "DIY_juece":{
                audio:"ext:天牢令/image/audio:2",
                prompt:"出牌阶段限一次，你可以将一张牌交给一名其他角色，然后对其造成一点伤害，若其手牌数大于其体力值，你对其造成1点伤害且【绝策】失效直至一名角色死亡或本回合结束。",
                enable:"phaseUse",
                filter:function(event,player){
        return player.countCards('he')>0&&!player.hasSkill('DIY_juece2');
    },
                discard:false,
                line:true,
                lose:false,
                delay:false,
                position:"he",
                filterCard:true,
                direct:true,
                filterTarget:function(card,player,target){
        return target!=player;
    },
                check:function(card){
        return 5-get.value(card);
    },
                content:function(){
        'step 0'
        if(target.countCards('h')<target.hp){
            player.logSkill('DIY_juece1',target);
        }
        else{
            player.logSkill('DIY_juece',target);
        }
        target.gain(cards,player,'giveAuto');
        'step 1'
        if(target.countCards('h')>target.hp){
           target.damage('nocard');
           player.addSkill('DIY_juece2');
        }
    },
                ai:{
                    order:1,
                    result:{
                        target:function(player,target){
                            if(target.countCards('h')<target.hp) return 1;
                            return -1;
                        },
                    },
                },
            },
            "DIY_juece1":{
                audio:"ext:天牢令/image/audio:1",
            },
            "DIY_juece2":{
                mark:true,
                marktext:"绝",
                intro:{
                    name:"绝策",
                    content:"本回合〖绝策〗失效",
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:["dieAfter","phaseAfter"],
                },
                forced:true,
                content:function(){
        player.removeSkill("DIY_juece2");
    },
            },
            "DIY_mieji":{
                audio:"ext:天牢令/image/audio:1",
                enable:"phaseUse",
                usable:1,
                filter:function(event,player){
        return player.hasCard(function(card){
            return get.type(card)!='basic';
        },'eh');
    },
                filterCard:function(card){
        return get.type(card,'trick')!='basic';
    },
                filterTarget:function(card,player,target){
        return target!=player&&target.countCards('h')>0;
    },
                discard:false,
                delay:false,
                check:function(card){
        return 8-get.value(card);
    },
                loseTo:"cardPile",
                insert:true,
                visible:true,
                content:function(){
        player.showCards(cards);
        target.storage.DIY_mieji2=get.color(cards);
        target.addTempSkill('DIY_mieji2',{player:'phaseAfter'});
    },
                ai:{
                    order:9,
                    result:{
                        target:function(player,target){
                            return -target.countCards('h');
                        },
                    },
                },
            },
            "DIY_mieji2":{
                group:"g_du",
                forced:true,
                mark:true,
                mod:{
                    cardname:function(card,player){
            if(get.color(card)==player.storage.DIY_mieji2) return 'du';
        },
                },
                intro:{
                    content:function(color){
            return '你的'+get.translation(color)+'牌视为【毒】';
        },
                },
            },
            "DIY_qiaoshuo":{
                group:"DIY_qiaoshuo2",
                audio:"reqiaoshui",
                enable:"phaseUse",
                filterTarget:function(card,player,target){
        return player.canCompare(target);
    },
                filter:function(event,player){
        return player.countCards('h')>0;
    },
                content:function(){
        'step 0'
        player.chooseToCompare(target);
        'step 1'
        if(result.bool) player.addMark('DIY_qiaoshuo',1);
        else{
            if(player.countMark('DIY_qiaoshuo')>0){
                player.removeMark('DIY_qiaoshuo',1);
                event.finish();
            }
            else{
                var evt=_status.event.getParent('phaseUse');
                if(evt&&evt.name=='phaseUse'){
                    evt.skipped=true;
                    event.finish();
                }
                event.finish();
            }
        }
    },
                intro:{
                    name:"巧说",
                    content:"mark",
                },
                ai:{
                    order:8,
                    result:{
                        target:function(player,target){
                            return -1;
                        },
                    },
                },
                marktext:"巧说",
            },
            "DIY_qiaoshuo2":{
                trigger:{
                    player:"useCard2",
                },
                direct:true,
                filter:function(event,player){
        if(!player.countMark('DIY_qiaoshuo')) return false;
        var type=get.type(event.card);
        return type=='basic'||type=='trick';
    },
                content:function(){
        'step 0'
        player.removeMark('DIY_qiaoshuo',1);
        var goon=false;
        var info=get.info(trigger.card);
        if(trigger.targets&&!info.multitarget){
            var players=game.filterPlayer();
            for(var i=0;i<players.length;i++){
                if(lib.filter.targetEnabled2(trigger.card,player,players[i])&&!trigger.targets.contains(players[i])){
                    goon=true;break;
                }
            }
        }
        if(goon){
            player.chooseTarget('巧说：是否额外指定一名'+get.translation(trigger.card)+'的目标？',function(card,player,target){
                var trigger=_status.event;
                if(trigger.targets.contains(target)) return false;
                return lib.filter.targetEnabled2(trigger.card,_status.event.player,target);
            }).set('ai',function(target){
                var trigger=_status.event.getTrigger();
                var player=_status.event.player;
                return get.effect(target,trigger.card,player,player);
            }).set('targets',trigger.targets).set('card',trigger.card);
        }
        else{
            if(!info.multitarget&&trigger.targets&&trigger.targets.length>1){
                event.goto(3);
            }
        }
        'step 1'
        if(result.bool){
            if(!event.isMine()) game.delayx();
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.target){
            player.logSkill('DIY_qiaoshuo',event.target);
            trigger.targets.add(event.target);
        }
        event.finish();
        'step 3'
        player.chooseTarget('巧说：是否减少一名'+get.translation(trigger.card)+'的目标？',function(card,player,target){
            return _status.event.targets.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            return -get.effect(target,trigger.card,trigger.player,_status.event.player);
        }).set('targets',trigger.targets);
        'step 4'
        if(result.bool){
            event.targets=result.targets;
            if(event.isMine()){
                player.logSkill('DIY_qiaoshuo',event.targets);
                event.finish();
            }
            for(var i=0;i<result.targets.length;i++){
                trigger.targets.remove(result.targets[i]);
            }
            game.delay();
        }
        else{
            event.finish();
        }
        'step 5'
        player.logSkill('DIY_qiaoshuo',event.targets);
    },
            },
            "DIY_zongshi":{
                audio:"xinjyzongshi",
                trigger:{
                    player:["chooseToCompareAfter","compareMultipleAfter"],
                    target:["chooseToCompareAfter","compareMultipleAfter"],
                },
                filter:function(event,player){
        return !event.preserve;
    },
                frequent:true,
                content:function(){
        'step 0'
        var str='<div class="text center">牌堆顶';
        var cards=get.cards();
        if(player==trigger.player){
            if(trigger.num1>trigger.num2&&get.position(trigger.card2,true)=='o'){
                str+='/拼点牌';
                cards.push(trigger.card2)
            }
            else if(trigger.num1<trigger.num2&&get.position(trigger.card1,true)=='o'){
                str+='/拼点牌';
                cards.push(trigger.card1);
            }
        }
        else{
            if(trigger.num1<trigger.num2&&get.position(trigger.card1,true)=='o'){
                str+='/拼点牌';
                cards.push(trigger.card1);
            }
            else if(trigger.num1>trigger.num2&&get.position(trigger.card2,true)=='o'){
                str+='/拼点牌';
                cards.push(trigger.card2);
            }
        }
        str+='</div>';
        event.cards=cards;
        player.chooseButton(['纵适：选择要获得的牌',str,cards],true).set('ai',get.buttonValue);
        'step 1'
        if(result.bool){
            var draw=result.links[0]==cards[0];
            player.gain(result.links,draw?'draw':'gain2').log=false;
            game.log(player,'获得了',draw?'牌堆顶的一张牌':result.links);
            if(!draw){
                cards[0].fix();
                ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
                game.updateRoundNumber();
            }
        }
    },
            },
            "DIY_jiang":{
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    source:"damageSource",
                    player:"damageEnd",
                },
                forced:true,
                filter:function(event){
        return event.num>0; 
    },
                content:function(){
        player.gainMaxHp(trigger.num);
    },
            },
            "DIY_hunzi":{
                filter:function(event,player){
        return player.hp<=2&&!player.storage.DIY_hunzi;
    },
                ai:{
                    threaten:function(player,target){
            if(target.hp<=2) return 2;
            return 0.5;
        },
                    maixie:true,
                    effect:{
                        target:function(card,player,target){
                if(!target.hasFriend()) return;
                if(get.tag(card,'damage')==1&&target.hp==2&&!target.isTurnedOver()&&
                _status.currentPhase!=target&&get.distance(_status.currentPhase,target,'absolute')<=3) return [0.5,1];
            },
                    },
                },
                skillAnimation:true,
                animationColor:"wood",
                audio:"ext:天牢令/image/audio:1",
                juexingji:true,
                unique:true,
                trigger:{
                    player:["phaseZhunbeiBegin","dying"],
                },
                forced:true,
                derivation:["yingba","scfuhai","pinghe"],
                content:function(){
        'step 0'
        player.node.avatar.setBackgroundImage('extension/天牢令/JX_sunce2.jpg');
        player.recover(1-player.hp);
        player.awakenSkill(event.name);
        player.storage[event.name]=true;
        'step 1'
        game.delay();
        player.popup('英霸');
        player.addSkill('yingba');
        game.log(player,'获得了技能','#g【英霸】');
        'step 2'
        game.delay();
        player.popup('覆海');
        player.addSkill('scfuhai');
        game.log(player,'获得了技能','#g【覆海】');
        'step 3'
        game.delay();
        player.popup('冯河');
        player.addSkill('pinghe');
        game.log(player,'获得了技能','#g【冯河】');
    },
            },
            "DIY_lianji":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:2,
                filter:function(event,player){
        return player.getStorage('DIY_lianji2').length<3&&player.countCards('he');
    },
                onChooseToUse:function(event){
        if(!game.online){
            var evt=event.getParent();
            if(evt.name!='phaseUse') return;
            if(!evt.DIY_lianji_list){
                var list=[];
                list.push('wy_xiaolicangdao');
                list.push('jiedao');
                list.push('wy_meirenji');
                evt.DIY_lianji_list=list;
            }
            if(!event.DIY_lianji_list) event.set('DIY_lianji_list',evt.DIY_lianji_list);
        }
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            for(var i of event.DIY_lianji_list)
                if(!player.getStorage('DIY_lianji2').contains(i)) list.push(['锦囊','',i]);
            return ui.create.dialog('连计',[list,'vcard']);
        },
                    filter:function(button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function(button){
            return _status.event.player.getUseValue({name:button.link[2]});
        },
                    backup:function(links,player){
            return {
                audio:'DIY_lianji',
                filterCard:true,
                popname:true,
                position:'hes',
                viewAs:{name:links[0][2]},
                check:function(card){
                    return 6-get.value(card);
                },
                filterCard:true,
                onuse:function(links,player){
                    if(!player.storage.DIY_lianji2) player.storage.DIY_lianji2=[];
                    player.storage.DIY_lianji2.add(links.card.name);
                    player.addTempSkill('DIY_lianji2',{player:'useCardAfter'});
                },
            };
        },
                    prompt:function(links,player){
            return '将一张牌当做'+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    order:2,
                    result:{
                        player:function(player){
                if((player.hp<=2||player.needsToDiscard())&&!player.getStat('damage')) return 0;
                return 1;
            },
                    },
                },
                group:"DIY_lianji_clear",
                subSkill:{
                    clear:{
                        trigger:{
                            player:"phaseUseAfter",
                        },
                        direct:true,
                        content:function(){
                player.storage.DIY_lianji2=[];
            },
                        sub:true,
                    },
                },
            },
            "DIY_lianji2":{
                mark:true,
                marktext:"连计",
                intro:{
                    name:"连计",
                    content:"董贼伏诛，天下太平！",
                },
            },
            "DIY_moucheng":{
                limited:true,
                unique:true,
                init:function (player){
        player.storage.DIY_moucheng=false;
    },
                skillAnimation:true,
                audio:"ext:天牢令/image/audio:2",
                animationColor:"thunder",
                derivation:"DIY_jingong",
                trigger:{
                    global:"dieAfter",
                },
                filter:function (event,player){
        if(player.storage.DIY_moucheng==true) return false;
        return player.hasSkill('DIY_lianji2');
    },
                content:function (){
        player.awakenSkill('DIY_moucheng');
        player.gainMaxHp();
        player.recover(player.maxHp-player.hp);
        player.drawTo(player.maxHp);
        player.removeSkill('DIY_lianji');
        player.addSkill('DIY_jingong');
        player.storage.DIY_moucheng=true;
    },
                mark:true,
                intro:{
                    content:"limited",
                },
            },
            "DIY_jingong":{
                audio:"ext:天牢令/image/audio:8",
                enable:["chooseToUse","chooseToRespond"],
                hiddenCard:function(player,name){
        if(lib.inpile.contains(name)&&name!='wuxie') return true;
    },
                filter:function(event,player){
        if(event.responded||event.DIY_jingong) return false;
        for(var i of lib.inpile){
            if(event.filterCard({name:i},player,event)&&i!='wuxie') return true;
        }
        return false;
    },
                check:function(event,player){
        if(player.hp<-1) return false;
        var card=event.filterCard(card,player,event);
        var cards=[];
        for(var i=0;i<3;i++){
            cards.push(ui.cardPile.childNodes[i]);
        }
        if(cards.contains(card)) return true;
        return false;
    },
                content:function(){
                    'step 0'
                    var evt=event.getParent(2);
                    evt.set('DIY_jingong',true);
                    var cards=get.cards(3);
                    for(var i=cards.length-1;i>=0;i--){
                        ui.cardPile.insertBefore(cards[i].fix(),ui.cardPile.firstChild);
                    }
					var aozhan=player.hasSkill('aozhan');
                    player.chooseButton(['矜功：选择要'+(evt.name=='chooseToUse'?'使用':'打出')+'的牌',cards]).set('filterButton',function(button){
                        return _status.event.cards.contains(button.link);
                    }).set('cards',cards.filter(function(card){
                        if(aozhan&&card.name=='tao'){
                            return evt.filterCard({
                                name:'sha',isCard:true,cards:[card],
                            },evt.player,evt)||evt.filterCard({
                                name:'shan',isCard:true,cards:[card],
                            },evt.player,evt);
                        }
                        return evt.filterCard(card,evt.player,evt);
                    })).set('ai',function(button){
                        var evt=_status.event.getParent(3);
                        	if(evt&&evt.ai){
                            	var tmp=_status.event;
                            	_status.event=evt;
                            	var result=(evt.ai||event.ai1)(button.link,_status.event.player,evt);
                            	_status.event=tmp;
                            	return result;
                        	}
                        return 1;
                    });
                    'step 1'
                    var evt=event.getParent(2);
                    	if(result.bool&&result.links&&result.links.length){
							var name=result.links[0].name,aozhan=(player.hasSkill('aozhan')&&name=='tao');
							if(aozhan){
								name=evt.filterCard({
									name:'sha',isCard:true,cards:[card],
								},evt.player,evt)?'sha':'shan';
							}
                        	if(evt.name=='chooseToUse'){
                            	game.broadcastAll(function(result,name){
                                	lib.skill.DIY_jingong_backup.viewAs={name:name,cards:[result],isCard:true};
                                	lib.skill.DIY_jingong_backup.prompt='选择'+get.translation(result)+'的目标';
                            	},result.links[0],name);
                            	evt.set('_backupevent','DIY_jingong_backup');
                            	evt.backup('DIY_jingong_backup');
                        	}
                        	else{
                            	delete evt.result.skill;
                            	delete evt.result.used;
                            	evt.result.card=get.autoViewAs(result.links[0]);
								if(aozhan) evt.result.card.name=name;
                            	evt.result.cards=[result.links[0]];
                            	evt.redo();
                            	return;
                        	}
                    	}
                    	else player.loseHp();
                    	evt.goto(0);
                	},
                ai:{
                    effect:{
                        target:function(card,player,target,effect){
                if(get.tag(card,'respondShan')) return 0.7;
                if(get.tag(card,'respondSha')) return 0.7;
            },
                    },
                    order:11,
                    respondShan:true,
                    respondSha:true,
                    result:{
                        player:function(player){
                if(_status.event.dying) return get.attitude(player,_status.event.dying);
                return 1;
            },
                    },
                },
            },
            "DIY_jingong_backup":{
                sourceSkill:"DIY_jingong",
                precontent:function(){
        delete event.result.skill;
        var name=event.result.card.name;
        event.result.cards=event.result.card.cards;
        event.result.card=get.autoViewAs(event.result.cards[0]);
        event.result.card.name=name;
    },
                filterCard:function(){return false},
                selectCard:-1,
            },
            "DIY_lingren":{
                audio:"ext:天牢令/image/audio:6",
                enable:"phaseUse",
                delay:false,
                usable:1,
                filter:function(event,player){
        return player.countCards('h');
    },
                content:function(){
        'step 0'
        player.showHandcards();
        'step 1'
        var list=['红色','黑色'];
        if(player.countCards('h',{color:'red'})==0) list.remove('红色');
        if(player.countCards('h',{color:'black'})==0) list.remove('黑色');
        player.chooseControl(list).set('ai',function(){
            var player=_status.event.player;
            if(player.countCards('h',{color:'red'})==1&&
            player.countCards('h',{color:'black'})>1) return '红色';
            return '黑色';
        });
        'step 2'
        event.control=result.control;
        var cards;
        if(event.control=='红色'){
            cards=player.getCards('h',{color:'red'});
        }
        else{
            cards=player.getCards('h',{color:'black'});
        }
        for(var i=0;i<cards.length;i++){
            var hs=[];
            hs.push(cards[i]);
            player.chooseUseTarget(get.prompt('DIY_lingren'),'将'+get.translation(cards[i])+'当做【杀】使用','sha',hs,true,'nodistance').logSkill='DIY_lingren2';
        }
    },
                ai:{
                    order:function(item,player){
            if(player.countCards('h',{color:'red'})==1) return 10;
            if(player.countCards('h',{color:'black'})==1) return 10;
            return 1;
        },
                    result:{
                        player:1,
                    },
                },
                group:"DIY_lingren_damage",
                subSkill:{
                    damage:{
                        audio:"DIY_lingren",
                        trigger:{
                            player:"damageAfter",
                        },
                        filter:function(event,player){
                            return player.countCards('h');
                        },
                        content:function(){
                            'step 0'
                            player.showHandcards();
                            'step 1'
                            var list=['红色','黑色'];
                            if(player.countCards('h',{color:'red'})==0) list.remove('红色');
                            if(player.countCards('h',{color:'black'})==0) list.remove('黑色');
                            player.chooseControl(list).set('ai',function(){
                                var player=_status.event.player;
                                if(player.countCards('h',{color:'red'})==1&&
                                player.countCards('h',{color:'black'})>1) return '红色';
                                return '黑色';
                            });
                            'step 2'
                            event.control=result.control;
                            var cards;
                            if(event.control=='红色'){
                                cards=player.getCards('h',{color:'red'});
                            }
                            else{
                                cards=player.getCards('h',{color:'black'});
                            }
                            for(var i=0;i<cards.length;i++){
                                var hs=[];
                                hs.push(cards[i]);
                                player.chooseUseTarget(get.prompt('DIY_lingren'),'将'+get.translation(cards[i])+'当做【杀】使用','sha',hs,true,'nodistance').logSkill='DIY_lingren2';
                            }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_lingren2":{
                audio:"DIY_lingren",
            },
            "DIY_fujian":{
                audio:"ext:天牢令/image/audio:2",
                usable:1,
                trigger:{
                    player:["useCard","respond"],
                },
                filter:function(event,player){
        return event.card.name=='sha'&&_status.currentPhase!=player;
    },
                forced:true,
                content:function(){
        "step 0"
        player.line(_status.currentPhase,'green');
        _status.currentPhase.addTempSkill('fengyin');
        "step 1"
        var info=lib.character[_status.currentPhase.name];
        player.draw(info[3].length);
    },
            },
            "DIY_wuniang":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function(event,player){
        if(event.responded) return false;
        if(!event.filterCard({name:'sha'},player,event)) return false;
        return player.countCards('h');
    },
                direct:true,
                content:function(){
        "step 0"
        player.chooseCardTarget({
            prompt:'请选择【武娘】的牌和目标',
            prompt2:'将一张手牌交给一名其他角色视为打出一张【杀】',
            filterCard:true,
            filterTarget:lib.filter.notMe,
            ai1:function(card){
                if(get.tag(card,'recover')&&!game.hasPlayer(function(current){
                    return get.attitude(current,player)>0&&!current.hasSkillTag('nogain');
                })) return 0;
                return 1/Math.max(0.1,get.value(card));
            },
            ai2:function(target){
                var player=_status.event.player,att=get.attitude(player,target);
                if(target.hasSkillTag('nogain')) att/=9;
                return 4+att;
            },
        });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.line(target,'green');
            player.logSkill('DIY_wuniang',target);
            target.gain(result.cards,player,'giveAuto');
            event.draws=game.filterPlayer(function(current){
                if(current==player) return true;
                return ['lyz_guansuo','lyz_guansuo'].contains(current.name)||['lyz_guansuo','lyz_guansuo'].contains(current.name2);
            });
            game.asyncDraw(event.draws,1);
            trigger.untrigger();
            trigger.responded=true;
            trigger.result={bool:true,card:{name:'sha',isCard:true}};
        }
    },
                group:"DIY_wuniang_use",
            },
            "DIY_wuniang_use":{
                enable:"chooseToUse",
                filter:function(event,player){
        if(!player.countCards('h')) return false;
        return event.filterCard({name:'sha'},player,event);
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            if(event.filterCard({name:'sha'},player,event)){
                list.push(['基本','','sha']);
                list.push(['基本','','sha','fire']);
                list.push(['基本','','sha','thunder']);
                list.push(['基本','','sha','ice']);
            }
            return ui.create.dialog('武娘',[list,'vcard'],'hidden');
        },
                    check:function(button){
            var player=_status.event.player;
            var card={name:button.link[2],nature:button.link[3]};
            if(game.hasPlayer(function(current){
                return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
            })){
                if(card.name=='sha'){
                    if(card.nature=='fire') return 2.95;
                    else if(card.nature=='fire') return 2.92;
                    else return 2.9;
                }
            }
            return 0;
        },
                    backup:function(links,player){
            return {
                filterCard:function(){return false},
                viewAs:{name:links[0][2],nature:links[0][3],isCard:true},
                selectCard:-1,
                popname:true,
                log:false,
                precontent:function(){
                    'step 0'
                    player.chooseCardTarget({
                        prompt:'请选择【武娘】的牌和目标',
                        prompt2:'将一张手牌交给一名其他角色',
                        filterCard:true,
                        forced:true,
                        filterTarget:lib.filter.notMe,
                        ai1:function(card){
                            if(get.tag(card,'recover')&&!game.hasPlayer(function(current){
                                return get.attitude(current,player)>0&&!current.hasSkillTag('nogain');
                            })) return 0;
                            return 1/Math.max(0.1,get.value(card));
                        },
                        ai2:function(target){
                            var player=_status.event.player,att=get.attitude(player,target);
                            if(target.hasSkillTag('nogain')) att/=9;
                            return 4+att;
                        },
                    });
                    'step 1'
                    if(result.bool){
                        var target=result.targets[0];
                        player.logSkill('DIY_wuniang',target);
                        player.line(target,'green');
                        target.gain(result.cards,player,'giveAuto');
                        event.draws=game.filterPlayer(function(current){
                            if(current==player) return true;
                            return ['lyz_guansuo','lyz_guansuo'].contains(current.name)||['lyz_guansuo','lyz_guansuo'].contains(current.name2);
                        });
                        game.asyncDraw(event.draws,1);
                    }
                },
            }
        },
                    prompt:function(links,player){
            return '选择'+get.translation(links[0][3]||'')+get.translation(links[0][2])+'的目标';
        },
                },
                ai:{
                    order:function(){
            var player=_status.event.player;
            var event=_status.event;
            if(player.countCards('h')){
                if(event.filterCard({name:'sha'},player,event)){
                    return 2.9;
                }
            }
            return 0;
        },
                    save:true,
                    respondSha:true,
                    skillTagFilter:function(player,tag,arg){
            return player.countCards('h');
        },
                    result:{
                        player:function(player){
                return 1;
            },
                    },
                },
            },
            "DIY_zhennan":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"damageEnd",
                },
                check:function(event,player){
                    return get.attitude(player,event.source)>0;
                },
                filter:function(event,player){
                    var num=event.source.getHistory('useCard',function(evt){
                        return get.tag(evt.card,'damage')>0;
                    }).length;
                    if(['yunhuaman'].contains(event.source.name)||['yunhuaman'].contains(event.source.name2)) return num>0;
                    return num>1;
                },
                content:function(){
        var list=[];
        list.add(player);
        if(trigger.source!=player) list.add(trigger.source);
        var num=1;
        if(['yunhuaman'].contains(trigger.source.name)||['yunhuaman'].contains(trigger.source.name2)) num=2;
        game.asyncDraw(list,num);
    },
                ai:{
                    jueqing:true,
                },
            },
            "DIY_shanjia":{
                audio:"shanjia",
                mark:true,
                intro:{
                    content:function(storage,player){
            var num=player.getAllHistory('useCard',(evt)=>get.type(evt.card)=='equip').length;
            if(num==0){
                str='未使用过装备牌';
            }
            else{
                str='已使用过'+get.translation(num)+'张装备牌';
            }
            if(!player.storage.DIY_shanjia){
                str+='<br>已因〖缮甲〗弃置过〇张装备牌';
            }
            else{
                str+='<br>已因〖缮甲〗弃置过'+get.translation(player.storage.DIY_shanjia)+'张装备牌';
            }
            return str;
        },
                },
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                frequent:true,
                content:function(){
        'step 0'
        player.draw(Math.min(7,Math.max(3,player.getAllHistory('useCard',(evt)=>get.type(evt.card)=='equip').length)));
        'step 1'
        num=Math.min(7,Math.max(3,player.getAllHistory('useCard',(evt)=>get.type(evt.card)=='equip').length));
        if(player.storage.DIY_shanjia) num=Math.min(7,Math.max(3,player.getAllHistory('useCard',(evt)=>get.type(evt.card)=='equip').length))-player.storage.DIY_shanjia;
        if(num<1){
            event.goto(3);
        }
        else{
            player.chooseToDiscard('he',num,true);
        }
        'step 2'
        if(result.bool&&result.cards){
            for(var i=0;i<result.cards.length;i++){
                if(get.type(result.cards[i])=='equip'){
                    if(!player.storage.DIY_shanjia) player.storage.DIY_shanjia=0;
                    player.storage.DIY_shanjia++;
                    player.chooseUseTarget({name:'sha'},false,'缮甲：是否视为使用一张无距离限制的【杀】？','nodistance');
                }
            }
        }
        'step 3'
    },
                ai:{
                    threaten:function(player,target){
            if(typeof target.storage.DIY_shanjia=='number'){
                return Math.min(2,Math.sqrt(1+target.storage.DIY_shanjia));
            }
        },
                },
            },
            "DIY_ganglie":{
                audio:"ext:天牢令/image/audio:4",
                trigger:{
                    player:"damage",
                },
                filter:function(event,player){
        return (event.source!=undefined&&event.num>0);
    },
                direct:true,
                logTarget:"source",
                preHidden:true,
                content:function(){
        "step 0"
        player.addSkill('DIY_ganglie2');
        event.num=trigger.num;
        "step 1"
        var controls=[];
        if(trigger.source.isIn()){
            controls.push('反伤');
            if(trigger.source.countCards('he')) controls.push('弃牌');
        }
        controls.push('cancel');
        player.chooseControl(controls).set('ai',function(){
            if(get.attitude(player,trigger.source)>0) return 'cancel';
            return '反伤';
        }).set('prompt',get.prompt2('DIY_ganglie'));
        "step 2"
        if(result.control=='弃牌'){
            player.logSkill('DIY_ganglie',trigger.source);
            if(trigger.source.countCards('he')){
                player.discardPlayerCard(trigger.source,'he',true);
            }
        }
        else{
            player.logSkill('DIY_ganglie',trigger.source);
            if(trigger.source.isIn()){
                trigger.source.damage();
            }
        }
        event.num--;
        if(event.num>0){
            player.chooseBool(get.prompt2('DIY_ganglie')).set('frequentSkill');
        }
        else{
            event.finish();
        }
        "step 3"
        if(result.bool){
            player.logSkill('DIY_ganglie',trigger.source);
            event.goto(1);
        }
    },
                ai:{
                    "maixie_defend":true,
                    expose:0.4,
                },
            },
            "DIY_ganglie2":{
                audio:"DIY_ganglie",
                mark:true,
                marktext:"竖置",
                intro:{
                    name:"竖置体力牌",
                    content:"防止你受到的所有伤害",
                },
                trigger:{
                    player:"damageBegin3",
                },
                forced:true,
                content:function(){
        trigger.cancel();
    },
            },
            "DIY_fenyong":{
                audio:"ext:天牢令/image/audio:4",
                trigger:{
                    global:"phaseJieshuBegin",
                },
                forced:true,
                filter:function(event,player){
        return player.hasSkill('DIY_ganglie2')&&event.player.isAlive();
    },
                content:function(){
        'step 0'
        player.removeSkill('DIY_ganglie2');
        player.chooseControl('摸牌','弃牌',function(){
            var player=_status.event.player;
            var trigger=_status.event.getTrigger();
            if(get.attitude(player,trigger.player)<0){
                if(trigger.player.countCards('he')<player.maxHp-player.hp){
                    return '摸牌';
                }
                return '弃牌';
            }
            return '摸牌';
        }).set('prompt','摸'+get.cnNumber(player.maxHp-player.hp)+'张牌，或弃置'+get.translation(trigger.player)+get.cnNumber(player.maxHp-player.hp)+'张牌');
        'step 1'
        if(result.control=='弃牌'){
            player.line(trigger.player,'green');
            if(player.hp<player.maxHp&&trigger.player.countCards('he')){
                player.discardPlayerCard(trigger.player,true,'he',player.maxHp-player.hp);
            }
        }
        else{
            player.draw(player.maxHp-player.hp);
        }
    },
            },
            "DIY_tuifeng":{
                group:["DIY_tuifeng2","DIY_tuifeng3"],
                audio:"tuifeng",
                trigger:{
                    player:["damageEnd","phaseUseEnd"],
                },
                frequent:true,
                locked:false,
                marktext:"锋",
                intro:{
                    content:"expansion",
                    markcount:"expansion",
                },
                notemp:true,
                filter:function(event,player){
        if(event.name=='phaseUse') return player.countCards('h')>player.hp;
        return event.num>0;
    },
                content:function(){
        "step 0"
        event.count=trigger.num||1;
        "step 1"
        event.count--;
        player.draw();
        "step 2"
        if(player.countCards('h')){
            player.chooseCard('将一张手牌置于武将牌上作为“锋”',true);
        }
        else{
            event.goto(4);
        }
        "step 3"
        if(result.cards&&result.cards.length){
            player.addToExpansion(result.cards,player,'give').gaintag.add('DIY_tuifeng');
        }
        "step 4"
        if(event.count>0){
            player.chooseBool(get.prompt2('DIY_tuifeng')).set('frequentSkill','DIY_tuifeng');
        }
        else event.finish();
        "step 5"
        if(result.bool){
            player.logSkill('DIY_tuifeng');
            event.goto(1);
        }
    },
                onremove:function(player,skill){
        var cards=player.getExpansions('DIY_tuifeng');
        if(cards.length) player.loseToDiscardpile(cards);
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    threaten:0.8,
                    effect:{
                        target:function(card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
                    if(target.hp>=4) return [0.5,get.tag(card,'damage')*2];
                    if(!target.hasSkill('paiyi')&&target.hp>1) return [0.5,get.tag(card,'damage')*1.5];
                    if(target.hp==3) return [0.5,get.tag(card,'damage')*1.5];
                    if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
                }
            },
                    },
                },
            },
            "DIY_tuifeng2":{
                audio:"tuifeng",
                trigger:{
                    source:"damageSource",
                },
                frequent:true,
                preHidden:true,
                filter:function(event,player,name){
        if(!event.card) return false;
        var evt=event.getParent();
        return evt&&evt.card==event.card&&evt.type=='card'&&evt.targets&&evt.targets.length==1;
    },
                content:function(){
        'step 0'
        player.draw();
        'step 1'
        var hs=player.getCards('h');
        if(hs.length>0){
            if(hs.length==1) event._result={bool:true,cards:hs};
            else player.chooseCard('h',true,'将一张手牌置于武将牌上作为“锋”');
        }
        else event.finish();
        'step 2'
        if(result.bool){
            var cs=result.cards;
            player.addToExpansion(cs,player,'give').gaintag.add('DIY_tuifeng');
        }
    },
            },
            "DIY_tuifeng3":{
                audio:"tuifeng",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                forced:true,
                filter:function(event,player){
        return player.getExpansions('DIY_tuifeng').length>0;
    },
                content:function(){
        'step 0'
        var num=player.getExpansions('DIY_tuifeng').length;
        player.chooseCardButton('推锋：移去至多'+get.cnNumber(num)+'张“锋”',[1,num],player.getExpansions('DIY_tuifeng'));
        'step 1'
        if(result.bool){
            player.draw(2*result.links.length);
            player.addTempSkill('DIY_tuifeng4');
            player.storage.DIY_tuifeng_sha=result.links.length;
            player.loseToDiscardpile(result.links);
        }
    },
            },
            "DIY_tuifeng4":{
                mod:{
                    cardUsable:function(card,player,num){
            if(card.name=='sha') return num+player.storage.DIY_tuifeng_sha;
        },
                },
                onremove:true,
                charlotte:true,
            },
            "DIY_longdan":{
                marktext:"龙胆",
                intro:{
                    content:"本局游戏已发动过#次〖龙胆〗",
                },
                audio:"ext:天牢令/image/audio:2",
                enable:["chooseToUse","chooseToRespond"],
                hiddenCard:function(player,name){
        if(!['sha','shan','tao','jiu'].contains(name)) return false;
        return player.countCards('hes')>=Math.min(7,player.countMark('DIY_longdan'));
    },
                filter:function(event,player){
        if(event.filterCard({name:'sha'},player,event)||
            event.filterCard({name:'shan'},player,event)||
            event.filterCard({name:'jiu'},player,event)||
            event.filterCard({name:'tao'},player,event)){
            return player.countCards('hes')>=Math.min(7,player.countMark('DIY_longdan'));
        }
        return false;
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];
            if(event.filterCard({name:'sha'},player,event)){
                list.push(['基本','','sha']);
                for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
            }
            if(event.filterCard({name:'shan'},player,event)){
                list.push(['基本','','shan']);
            }
            if(event.filterCard({name:'tao'},player,event)){
                list.push(['基本','','tao']);
            }
            if(event.filterCard({name:'jiu'},player,event)){
                list.push(['基本','','jiu']);
            }
            return ui.create.dialog('龙胆',[list,'vcard'],'hidden');
        },
                    check:function(button){
            var player=_status.event.player;
            var card={name:button.link[2],nature:button.link[3]};
            if(_status.event.getParent().type!='phase'||game.hasPlayer(function(current){
                return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
            })){
                switch(button.link[2]){
                    case 'tao':case 'shan':return 5;
                    case 'jiu':{
                        if(player.storage.yizan&&player.countCards('hs',{type:'basic'})>2) return 3;
                    };
                    case 'sha':
                        if(button.link[3]=='fire') return 2.95;
                        else if(button.link[3]=='thunder'||button.link[3]=='ice') return 2.92;
                        else return 2.9;
                }
            }
            return 0;
        },
                    backup:function(links,player){
            return {
                audio:'DIY_longdan',
                filterCard:true,
                complexCard:true,
                selectCard:function(card,player,target){
                    return Math.min(7,_status.event.player.countMark('DIY_longdan'));
                },
                check:function(card,player,target){
                    return 6-get.value(card);
                },
                viewAs:{name:links[0][2],nature:links[0][3]},
                position:'hes',
                popname:true,
                precontent:function(){
                    player.draw();
                    if(player.countMark('DIY_longdan')<7) player.addMark('DIY_longdan',1,false);
                },
            }
        },
                    prompt:function(links,player){
            return '将'+get.cnNumber(Math.min(7,player.countMark('DIY_longdan')))+'张牌当做'+get.translation(links[0][3]||'')+get.translation(links[0][2])+'使用或打出';
        },
                },
                ai:{
                    order:function(){
            var player=_status.event.player;
            var event=_status.event;
            if(event.filterCard({name:'jiu'},player,event)&&get.effect(player,{name:'jiu'})>0){
                return 3.3;
            }
            return 3.1;
        },
                    skillTagFilter:function(player,tag,arg){
            if(tag=='fireAttack') return true;
        return player.countCards('hes')>=Math.min(7,player.countMark('DIY_longdan'));
        },
                    result:{
                        player:1,
                    },
                    respondSha:true,
                    respondShan:true,
                    fireAttack:true,
                },
            },
            "DIY_jizhu":{
                audio:"ext:天牢令/image/audio:3",
                trigger:{
                    player:"phaseBegin",
                },
                prompt:function(event,player){
                    var num=Math.min(7,player.countMark('DIY_longdan'));
                    return '摸'+get.cnNumber(num)+'张牌再弃置'+get.cnNumber(7-num)+'张牌，然后本回合你使用【杀】/【桃】的伤害值/回复值+'+get.translation(7-num)+'';
                },
                content:function(){
                    'step 0'
                    player.draw(Math.min(7,player.countMark('DIY_longdan')));
                    'step 1'
                    event.num=Math.max(7-Math.min(7,player.countMark('DIY_longdan')),1);
                    player.chooseToDiscard('he',event.num,true);
                    'step 2'
                    if(result.bool){
                        player.addTempSkill('DIY_jizhu_effect');
                        player.storage.DIY_jizhu_effect=event.num;
                        player.removeMark('DIY_longdan',Infinity,false);
                    }
                },
                subSkill:{
                    effect:{
                        mark:true,
                        marktext:"积著",
                        intro:{
                            content:"本回合你使用【杀】/【桃】的伤害值/回复值+$",
                        },
                        audio:"DIY_jizhu",
                        trigger:{
                            player:"useCard",
                        },
                        forced:true,
                        filter:function(event,player){
                            if(!player.storage.DIY_jizhu_effect) return false;
                            var evt=event;
                            return ['sha','tao'].contains(evt.card.name);
                        },
                        content:function(){
                            trigger.baseDamage+=player.storage.DIY_jizhu_effect;
                        },
                        sub:true,
                    },
                },
            },
            "DIY_huaiyuan":{
                trigger:{
                    player:"gainAfter",
                },
                audio:"huaiyuan",
                forced:true,
                direct:true,
                content:function(){
        player.addGaintag(trigger.cards,'DIY_sui');
    },
                mod:{
                    "cardEnabled2":function(card,player){
            if(get.itemtype(card)=='card'&&card.hasGaintag('DIY_sui')) return false;
        },
                    ignoredHandcard:function(card,player){
            if(card.hasGaintag('DIY_sui')) return true;
        },
                    cardDiscardable:function(card,player,name){
            if(name=='phaseDiscard'&&card.hasGaintag('DIY_sui')) return false;
        },
                },
                group:["DIY_huaiyuan_Discard","DIY_huaiyuan_count"],
                onremove:function(player){
        player.removeGaintag('DIY_sui');
    },
                subSkill:{
                    Discard:{
                        audio:"huaiyuan",
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        forced:true,
                        content:function(){},
                        sub:true,
                    },
                    count:{
                        trigger:{
                            global:"phaseBeginStart",
                        },
                        forced:true,
                        firstDo:true,
                        silent:true,
                        filter:function(event,player){
                if(player==event.player) return player.countCards('h')>0;
                return player.hasCard(function(card){
                    return card.hasGaintag('DIY_sui');
                },'h');
            },
                        content:function(){
                player.removeGaintag('DIY_sui');
            },
                        sub:true,
                        popup:false,
                    },
                },
            },
            "DIY_sui":{
            },
            "DIY_dezhang":{
                audio:"dezhang",
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function(event,player){
                    return player.getCards('he',function(card){
                        return !card.hasGaintag('DIY_sui');
                    }).length>0;
                },
                discard:false,
                lose:false,
                delay:false,
                check:function(event,player){
                    if(event.player==player&&player.countMark('DIY_dezhang_effect')>2&&player.getCards('h','sha').length>3) return false;
                    return get.attitude(player,event.player)>0;
                },
                content:function(){
        var num=player.getCards('he',function(card){
            return !card.hasGaintag('DIY_sui');
        }).length;
        player.discard(player.getCards('he',function(card){
            return !card.hasGaintag('DIY_sui');
        }));
        player.draw(num);
        trigger.player.addSkill('DIY_dezhang_effect');
        trigger.player.addMark('DIY_dezhang_effect',num,false);
        if(trigger.player!=player) player.changeHujia();
    },
                subSkill:{
                    effect:{
                        charlotte:true,
                        onremove:true,
                        mod:{
                            attackRange:function(player,num){
                                return num+player.countMark('DIY_dezhang_effect');
                            },
                            cardUsable:function(card,player,num){
                                if(card.name=='sha') return num+player.countMark('DIY_dezhang_effect');
                            },
                        },
                        marktext:"德",
                        intro:{
                            content:"攻击范围+#<br>使用【杀】次数上限+#",
                        },
                        sub:true,
                    },
                },
            },
            "DIY_guowu":{
                trigger:{
                    player:"useCardToPlayered",
                },
                intro:{
                    content:"mark",
                },
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                filter:function(event,player){
                    return get.tag(event.card,'damage')>0;
                },
                logTarget:"target",
                content:function(){
                    'step 0'
                    trigger.target.addMark("DIY_guowu",1,false);
                    if(trigger.target.countMark("DIY_guowu")<3) event.goto(3);
                    'step 1'
                    player.chooseControl().set('prompt','帼武：请选择一项').set('choiceList',[
                        '获得'+get.translation(trigger.target)+'一张牌',
                        '令'+get.translation(trigger.card)+'对'+get.translation(trigger.target)+'的伤害值+1',
                        '背水：将X归零',
                    ]).set('ai',function(){
                        var evt=_status.event.getTrigger();
                        var player=_status.event.player;
                        var target=evt.player;
                        if(target.countGainableCards(player,'he')>0) return 0;
                        return 1;
                    });
                    'step 2'
                    player.logSkill('DIY_guowu',trigger.target);
                    if(result.index!=1&&trigger.target.countGainableCards(player,'he')>0){
                        player.gainPlayerCard(trigger.target,'he',true);
                    }
                    if(result.index!=0){
                        trigger.target.addTempSkill("DIY_guowu_damage");
                        trigger.target.storage.DIY_guowu_damage={
                            card:trigger.card,
                        }
                    }
                    if(result.index==2){
                        trigger.target.removeMark("DIY_guowu",Infinity,false);
                    }
                    
                },
                subSkill:{
                    damage:{
                        trigger:{
                            player:"damageBegin3",
                        },
                        onremove:function (player){
                            delete player.storage.DIY_guowu_damage;
                        },
                        silent:true,
                        popup:false,
                        forced:true,
                        direct:true,
                        intro:{
                            content:"吕家女儿胜须眉，胭脂红妆配武裳",
                        },
                        filter:function(event,player){
                            var info=player.storage.DIY_guowu_damage;
                            return event.card&&event.card==info.card;
                        },
                        content:function(){
                            trigger.num++;
                            player.removeSkill("DIY_guowu_damage");
                        },
                        sub:true,
                    },
                },
            },
            "DIY_zhuangrong":{
                derivation:["DIY_607shenwei","DIY_607wushuang"],
                trigger:{
                    player:"phaseJieshuBegin",
                },
                audio:"ext:天牢令/image/audio:2",
                frequent:true,
                content:function(){
                    var hs=player.getCards('h');
                    if(hs.length){
                        player.changeHujia(hs.length);
                        player.discard(hs);
                    }
                    player.addSkill('DIY_zhuangrong_hujia');
                },
                subSkill:{
                    hujia:{
                        trigger:{
                            player:"phaseZhunbei",
                        },
                        forced:true,
                        content:function(){
                            if(player.hujia>0){
                                player.draw(player.hujia);
                                player.changeHujia(-player.hujia);
                            }
                            player.addTempSkill('DIY_607shenwei');
                            player.addTempSkill('DIY_607wushuang');
                        },
                        sub:true,
                    },
                },
            },
            "DIY_607shenwei":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseDrawBegin2",
                },
                forced:true,
                filter:(event)=>!event.numFixed,
                content:function(){
        trigger.num+=2;
    },
                mod:{
                    maxHandcard:(player,num)=>num+2,
                },
            },
            "DIY_607wushuang":{
                shaRelated:true,
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                locked:true,
                group:["DIY_607wushuang_1","DIY_607wushuang_2"],
                preHidden:["DIY_607wushuang_1","DIY_607wushuang_2"],
                subSkill:{
                    "1":{
                        audio:"DIY_607wushuang",
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        forced:true,
                        filter:function(event,player){
                            return event.card.name=='sha'&&!event.getParent().directHit.contains(event.target);
                        },
                        logTarget:"target",
                        content:function(){
                            var id=trigger.target.playerid;
                            var map=trigger.getParent().customArgs;
                            if(!map[id]) map[id]={};
                            if(typeof map[id].shanRequired=='number'){
                                map[id].shanRequired++;
                            }
                            else{
                                map[id].shanRequired=2;
                            }
                        },
                        ai:{
                            "directHit_ai":true,
                            skillTagFilter:function(player,tag,arg){
                                if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:"DIY_607wushuang",
                        trigger:{
                            player:"useCardToPlayered",
                            target:"useCardToTargeted",
                        },
                        forced:true,
                        logTarget:function(trigger,player){
                            return player==trigger.player?trigger.target:trigger.player
                        },
                        filter:function(event,player){
                            return event.card.name=='juedou';
                        },
                        content:function(){
                            var id=(player==trigger.player?trigger.target:trigger.player)['playerid'];
                            var idt=trigger.target.playerid;
                            var map=trigger.getParent().customArgs;
                            if(!map[idt]) map[idt]={};
                            if(!map[idt].shaReq) map[idt].shaReq={};
                            if(!map[idt].shaReq[id]) map[idt].shaReq[id]=1;
                            map[idt].shaReq[id]++;
                        },
                        ai:{
                            "directHit_ai":true,
                            skillTagFilter:function(player,tag,arg){
                                if(arg.card.name!='juedou'||Math.floor(arg.target.countCards('h','sha')/2)>player.countCards('h','sha')) return false;
                            },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_jishe":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filter:function(event,player){
        return player.getHandcardLimit()>0;
    },
                content:function(){
        player.draw();
        player.getHistory('custom').push({DIY_jishe:true});
    },
                group:"DIY_jishe_draw",
                subSkill:{
                    draw:{
                        audio:"DIY_jishe",
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function(event,player){
                            return player.getHistory('custom',function(evt){
                                return evt.DIY_jishe==true;
                            }).length>0;
                        },
                        content:function(){
                            var num1=player.getHistory('custom',function(evt){
                                return evt.DIY_jishe==true;
                            }).length;
                            var num2=1;
                            for(i=0;i<player.countCards('h');i++){
                                num2=num2*num1;
                            }
                            player.draw(num2);
                        },
                        sub:true,
                    },
                },
                ai:{
                    order:11,
                    result:{
                        player:function(player){
                if(player.getHistory('custom',function(evt){
                    return evt.DIY_jishe==true;
                }).length<2){
                    return 1;
                }
                return 0;
            },
                    },
                },
                mod:{
                    maxHandcard:function(player,num){
            return num-player.getHistory('custom',function(evt){
                return evt.DIY_jishe==true;
            }).length;
        },
                },
            },
            "DIY_qieting":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"gainBegin",
                },
                frequent:true,
                filter:function(event,player){
        return player!=event.player;
    },
                content:function(){
        'step 0'
        var cards=trigger.cards;
        game.log(player,'观看了',trigger.player,'即将获得的牌');
        var next=player.chooseToMove('窃听：是否用手牌交换'+get.translation(trigger.player)+'即将获得的牌？');
        next.set('list',[
            [get.translation(trigger.player)+'即将获得的牌',cards],
            ['手牌区',player.getCards('h')],
        ]);
        next.set('filterMove',function(from,to){
            return typeof to!='number';
        });
        'step 1'
        if(result.bool){
            var pushs=result.moved[0],gains=result.moved[1];
            pushs.removeArray(trigger.cards);
            gains.removeArray(player.getCards('h'));
            player.lose(pushs,ui.special);
            trigger.cards.addArray(pushs);
            trigger.cards.remove(gains);
            player.gain(gains,'gain2','log','fromStorage');
        }
        'step 2'
        if(trigger.cards.length>1){
            var color=get.color(trigger.cards[0]);
            for(var i=1;i<trigger.cards.length;i++){
                if(get.color(trigger.cards[i])!=color) return;
            }
            player.draw();
        }
    },
            },
            "DIY_antao":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"damageEnd",
                },
                usable:1,
                direct:true,
                filter:function(event,player){
        return player.countCards('he',{suit:'spade'})&&(event.player.isAlive()||event.source.isAlive());
    },
                content:function(){
        'step 0'
        player.chooseCardTarget({
            prompt:'请选择【暗涛】的牌和目标',
            prompt2:'弃置一张♠牌然后对'+get.translation(trigger.player)+'或'+get.translation(trigger.source)+'造成'+get.cnNumber(trigger.num)+'点伤害',
            position:'he',
            filterCard:{
                suit:"spade",
            },
            filterTarget:function(card,player,target){
                return trigger.player.contains(target)||trigger.source.contains(target);
            },
            ai1:function(card){
                return 8-get.value(card);
            },
            ai2:function(target){
                var player=_status.event.player,att=get.attitude(player,target);
                return -att;
            },
        });
        'step 1'
        if(result.bool){
            player.discard(result.cards);
            player.logSkill('DIY_antao',result.targets);
            var target=result.targets[0];
            target.damage(trigger.num);
        }
    },
            },
            "DIY_zhuilie":{
                audio:"ext:天牢令/image/audio:2",
                mod:{
                    targetInRange:function(card){
            if(card.name=='sha') return true;
        },
                },
                trigger:{
                    player:"useCardToTargeted",
                },
                filter:function(event,player){
        return event.card&&event.card.name=='sha'&&!player.inRange(event.target);
    },
                forced:true,
                logTarget:"target",
                content:function(){
                'step 0'
                player.storage.DIY_zhuilie_1='X';
                player.storage.DIY_zhuilie_2='X';
                player.storage.DIY_zhuilie_3='X';
                player.storage.DIY_zhuilie_4='X';
                i = [1,2,3,4].randomGet();
                /* 定义被追及者速度 */
                if(i!=2){
                    player.storage.DIY_zhuilie_2=Math.floor(Math.random() * (99 - 1 + 1)) + 99;
                }
                /* 定义追及者速度 */
                if(i!=1){
                    player.storage.DIY_zhuilie_1=Math.floor(Math.random() * (99 - 1 + 1)) + 99;
                }
                /* 定义追及距离 */
                if(i!=3){
                    player.storage.DIY_zhuilie_3=Math.floor(Math.random() * (99 - 1 + 1)) + 99;
                }
                /* 定义追及时间 */
                if(i!=4){
                    player.storage.DIY_zhuilie_4=Math.floor(Math.random() * (99 - 1 + 1)) + 99;
                }
                /* 计算出答案 */
                if(i==1) event.num=Math.floor(((player.storage.DIY_zhuilie_3)/(player.storage.DIY_zhuilie_4))+player.storage.DIY_zhuilie_2);
                if(i==2) event.num=Math.floor(player.storage.DIY_zhuilie_1-((player.storage.DIY_zhuilie_3)/(player.storage.DIY_zhuilie_4)));
                if(i==3) event.num=(player.storage.DIY_zhuilie_1-player.storage.DIY_zhuilie_2)*player.storage.DIY_zhuilie_4;
                if(i==4) event.num=Math.floor((player.storage.DIY_zhuilie_3)/(player.storage.DIY_zhuilie_1-player.storage.DIY_zhuilie_2));
                if(event.num<0) event.num=-event.num;
                 /* 创建dialog */
                 var dialog = ui.create.dialog(false);
                 /* dialog标题 */
                 dialog.add('【追猎】<br>在水平道路上有两人<font color=#96caff>'+get.translation(player)+'</font>、<font color=#96caff>'+get.translation(trigger.target)+'</font>相距<font color=\"#FFFF00\">'+get.translation(player.storage.DIY_zhuilie_3)+'m</font>，<font color=#96caff>'+get.translation(player)+'</font>在后做速度为<font color=\"#FFFF00\">'+get.translation(player.storage.DIY_zhuilie_1)+'m/s</font>的匀速直线运动，同时<font color=#96caff>'+get.translation(trigger.target)+'</font>在前以<font color=\"#FFFF00\">'+get.translation(player.storage.DIY_zhuilie_2)+'m/s</font>的速度匀速前行，两人运动方向相同，经<font color=\"#FFFF00\">'+get.translation(player.storage.DIY_zhuilie_4)+'s</font>两人相遇。求题目中的<font color=\"#FFFF00\">X</font>。<br>（若为小数则向下取整，可输入<font color=#ff0033>负数</font>）');
                 /* dialog.add方法只接受div，而不是input */
                 var div = document.createElement('div');
                 /* 创建input并添加到div里 */
                 var input = div.appendChild(document.createElement('input'));
                /* 只能输入数字 */
                input.type = 'number';
                 /* 输入最多99个字符 */
                 input.setAttribute('maxlength', '99');
                /* input内按键不继续冒泡*/
                input.addEventListener('keydown', e => {
                    e.stopPropagation();
                });
                input.addEventListener('keyup', e => {
                    e.stopPropagation();
                });
                 /* 输入前的提示 */
                 input.placeholder = '请输入答案';
                 /* dialog添加div */
                 dialog.add(div);
                 /* 把dialog，input加入event,让下一步骤的技能可调用dialog */
                 event.dialog = dialog;
                 event.input = input;
                 'step 1'
                 /* 获取上一步骤的dialog */
                 var {
                     dialog,
                     input
                 } = event;
                 var clickFun = () => {
                     /* 移除dialog */
                     dialog.remove();
                     /* value是输入框里的值 */
                     var value = input.value;
                     /* 保存到player.storage中 */
                     player.storage.DIY_zhuilie = input.value;
                     /* 继续游戏 */
                     game.resume();
                 }
                 /* 如果是ai */
                 if (!event.isMine()) {
                     /* 给予ai作弊 */
                    
                    /* 输入框赋值 */
                     input.value = event.num;
                     /* 然后执行clickFun*/
                     clickFun();
                 } else {
                     /* 显示dialog */
                     dialog.open();
                     /* 暂停游戏 */
                     game.pause();
                     /* 输入结束后点击确定 */
                     var button = ui.create.control('确定', () => {
                         if(!input.value){
                           return alert('输入不能为空');
                           }
                         /*移除button */
                         button.remove();
                         clickFun();
                     });
                 }
                 'step 2'
                 if(trigger.getParent().addCount!==false){
                     trigger.getParent().addCount=false;
                     var stat=player.getStat();
                     if(stat&&stat.card&&stat.card.sha) stat.card.sha--;
                 }
                 if(player.storage.DIY_zhuilie==event.num){
                     var map=trigger.customArgs;
                     var id=trigger.target.playerid;
                     if(!map[id]) map[id]={};
                     if(typeof map[id].extraDamage!='number') map[id].extraDamage=0;
                     map[id].extraDamage+=trigger.target.hp-1;
                 }
                 else{
                     player.loseHp();
                 }
    },
            },
            "DIY_shefu":{
                enable:"phaseUse",
                audio:"shefu",
                direct:true,
                init:function(player){
        if(!player.storage.DIY_shefu) player.storage.DIY_shefu=[[],[]];
    },
                filterCard:function(card,player){
        var list=[];
        var cards=player.getExpansions('DIY_shefu');
        for(i=0;i<cards.length;i++){
            if(!list.contains(get.suit(cards[i]))) list.add(get.suit(cards[i]));
        }
        return !list.contains(get.suit(card));
    },
                check:function(card){
                    if(get.tag(card,'damage')) return 6;
                    if(card.name=='shunshou'||card.name=='guohe') return 5;
                    return -1;
                },
                discard:false,
                lose:false,
                filter:function(event,player){
        return player.countCards('h')>0;
    },
                onremove:function(player,skill){
        var cards=player.getExpansions(skill);
        if(cards.length) player.loseToDiscardpile(cards);
    },
                intro:{
                    mark:function(dialog,storage,player){
                        var cards=player.getExpansions('DIY_shefu');
                        if(player.isUnderControl(true)){
                            dialog.addAuto(cards);
                            dialog.addText(get.translation(storage[1]));
                        }
                        else{
                            return '共设伏了'+get.cnNumber(cards.length)+'张牌';
                        }
                    },
                    markcount:"expansion",
                    onunmark:function(storage,player){
            player.storage.DIY_shefu[0]=[];
            player.storage.DIY_shefu[1]=[];
        },
                },
                content:function(){
        'step 0'
        player.chooseButton([get.prompt('DIY_shefu'),'请选择要设的“伏”',[lib.inpile.map(function(i){
            return ['伏','',i];
        }),'vcard']],true).set('filterButton',function(button){
            var player=_status.event.player;
            if(player.storage.DIY_shefu[1]&&player.storage.DIY_shefu[1].contains(button.link[2])) return false;
            return true;
        }).set('ai',function(button){
            var rand=_status.event.rand;
            switch(button.link[2]){
                case 'sha':return 5+rand[1];
                case 'tao':return 4+rand[2];
                case 'lebu':return 3+rand[3];
                case 'shan':return 4.5+rand[4];
                case 'wuzhong':return 4+rand[5];
                case 'shunshou':return 3+rand[6];
                case 'nanman':return 2+rand[7];
                case 'wanjian':return 2+rand[8];
                default:return rand[0];
            }
        }).set('rand',[Math.random(),Math.random(),Math.random(),Math.random(),
        Math.random(),Math.random(),Math.random(),Math.random(),Math.random()]);
        'step 1'
        if(result.bool){
            event.cardname=result.links[0][2];
            player.logSkill('shefu');
            player.addToExpansion(cards,player,'give').gaintag.add('DIY_shefu');
            player.storage.DIY_shefu[0].push(cards);
            player.storage.DIY_shefu[1].push(event.cardname);
            if(player.isOnline2()){
                player.send(function(storage){
                    game.me.storage.DIY_shefu[1]=storage;
                },player.storage.DIY_shefu[1]);
            }
            player.syncStorage('DIY_shefu');
            player.markSkill('DIY_shefu');
        }
    },
                group:["DIY_shefu2"],
            },
            "DIY_shefu2":{
                trigger:{
                    global:["useCard"],
                },
                audio:"shefu",
                filter:function(event,player){
        if(event.player==player) return false;
        return player.storage.DIY_shefu[1]&&player.storage.DIY_shefu[1].contains(event.card.name)&&event.player.getHistory('lose',function(evt){
            return evt.getParent()==event&&evt.hs&&evt.hs.length==event.cards.length;
        }).length;
    },
                direct:true,
                content:function(){
        "step 0"
        var effect=0;
        if(trigger.card.name=='wuxie'||trigger.card.name=='shan'){
            if(get.attitude(player,trigger.player)<-1){
                effect=-1;
            }
        }
        else if(trigger.targets&&trigger.targets.length){
            for(var i=0;i<trigger.targets.length;i++){
                effect+=get.effect(trigger.targets[i],trigger.card,trigger.player,player);
            }
        }
        var index=player.storage.DIY_shefu[1].indexOf(trigger.card.name);
        if(index!=-1){
            var card=player.storage.DIY_shefu[0][index];
        }
        var str='设伏：是否获得'+get.translation(trigger.player)+'的'+get.translation(trigger.card)+'并对其使用'+get.translation(card)+'?';
        var next=player.chooseBool(str,function(){
            var player=_status.event.player;
            var trigger=_status.event.getTrigger();
            if(_status.event.effect<0){
                if(trigger.card.name=='sha'){
                    var target=trigger.targets[0];
                    if(target==player){
                        return !player.countCards('h','shan');
                    }
                    else{
                        return target.hp==1||(target.countCards('h')<=2&&target.hp<=2);
                    }
                }
                else{
                    return true;
                }
            }
            return false;
        });
        next.set('effect',effect);
        "step 1"
        if(result.bool){
            player.gain(trigger.cards.filterInD(),'log','gain2');
            player.logSkill('DIY_shefu',trigger.player);
            var index=player.storage.DIY_shefu[1].indexOf(trigger.card.name);
            if(index!=-1){
                var card=player.storage.DIY_shefu[0][index];
                player.useCard(card,trigger.player);
                player.storage.DIY_shefu[0].splice(index,1);
                player.storage.DIY_shefu[1].splice(index,1);
                if(player.storage.DIY_shefu[0].length==0){
                    player.unmarkSkill('DIY_shefu');
                }
                else{
                    player.syncStorage('DIY_shefu');
                    player.markSkill('DIY_shefu');
                    if(player.isOnline2()){
                        player.send(function(storage){
                            game.me.storage.DIY_shefu[1]=storage;
                        },player.storage.DIY_shefu[1]);
                    }
                }
            }
        }
    },
                ai:{
                    threaten:1.8,
                    expose:0.3,
                },
            },
            "DIY_benyu":{
                audio:"benyu",
                trigger:{
                    source:"damageSource",
                    player:"damageEnd",
                },
                content:function(){
        "step 0"
        player.drawTo(5);
        if(trigger.source!=player&&trigger.source==_status.currentPhase) trigger.source.addTempSkill('baiban');
        if(trigger.player!=player&&trigger.player==_status.currentPhase) trigger.player.addTempSkill('baiban');
    },
            },
            "DIY_renjie":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                unique:true,
                group:"DIY_renjie_2",
                notemp:true,
                filter:function(event){
        return event.num>0;
    },
                content:function(){
        player.addMark('DIY_renjie',trigger.num||1);
    },
                intro:{
                    "name2":"忍",
                    content:"mark",
                },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    combo:"DIY_baiyin",
                },
                subSkill:{
                    "2":{
                        audio:"DIY_renjie",
                        trigger:{
                            player:"loseAfter",
                        },
                        forced:true,
                        filter:function(event,player){
                            if(event.type!='discard'||!event.cards2) return false;
                            var evt=event.getParent('phaseDiscard');
                            return evt&&evt.name=='phaseDiscard'&&evt.player==player;
                        },
                        content:function(){
                            player.addMark('DIY_renjie',trigger.cards2.length);
                        },
                        sub:true,
                    },
                },
            },
            "DIY_baiyin":{
                derivation:["DIY_baiyin_guicai","DIY_baiyin_fangzhu","DIY_baiyin_zhiheng","DIY_baiyin_jizhi","DIY_baiyin_wansha"],
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                unique:true,
                limited:true,
                skillAnimation:true,
                animationColor:"orange",
                forceunique:true,
                filter:function(event,player){
        return player.countMark('DIY_renjie')>0;
    },
                prompt:function(event,player){
        var num=player.countMark('DIY_renjie');
        return get.prompt('DIY_baiyin')+'（体力上限：'+num+'）';
    },
                check:function(event,player){
        if(player.countMark('DIY_renjie')>player.maxHp) return true;
        if(player.hp<=2&&player.countMark('DIY_renjie')>=3) return true;
        if(player.countMark('DIY_renjie')<=5) return false;
        return false;
    },
                content:function(){
        'step 0'
        event.num=player.countMark('DIY_renjie');
        player.removeMark('DIY_renjie',event.num);
        player.removeSkill('DIY_renjie');
        player.awakenSkill('DIY_baiyin');
        'step 1'
        event.videoId=lib.status.videoId++;
        var func=function(card,id,bool){
            var list=[
                '〖鬼才〗：在任意角色的判定牌生效前，你可以打出一张牌代替之',
                '〖放逐〗：当你受到伤害后，你可令一名其他角色摸X张牌（X为你已损失的体力值），然后该角色将武将牌翻面。',
                '〖制衡〗：出牌阶段限一次，你可以弃置任意张牌并摸等量的牌，若你在发动〖制衡〗时弃置了所有手牌，则你多摸一张牌。',
                '〖集智〗：当你使用锦囊牌时，你可以摸一张牌。若此牌为基本牌，则你可以弃置之，然后令本回合手牌上限+1。',
                '〖完杀〗：锁定技。①你的回合内，不处于濒死状态的角色不能使用【桃】。②当有角色于你的回合内进入濒死状态时，你令其以外的所有其他角色的非锁定技失效直到此濒死状态结算结束。',
            ];
            var choiceList=ui.create.dialog('【拜印】：请选择要获得的'+get.cnNumber(event.num)+'个技能','forcebutton');
            choiceList.videoId=id;
            for(var i=0;i<list.length;i++){
                list[i]=list[i].replace(/XXX/g,card);
                var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
                if(i==5&&!bool) str+='<div style="opacity:0.5">';
                str+=list[i];
                if(i==5&&!bool) str+='</div>';
                str+='</div>';
                var next=choiceList.add(str);
                next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
                next.firstChild.link=i;
                for(var j in lib.element.button){
                    next[j]=lib.element.button[j];
                }
                choiceList.buttons.add(next.firstChild);
            }
            return choiceList;
        };
        if(player.isOnline2()){
            player.send(func,get.translation(trigger.player),event.videoId);
        }
        event.dialog=func(get.translation(trigger.player),event.videoId);
        if(player!=game.me||_status.auto){
            event.dialog.style.display='none';
        }
        var next=player.chooseButton(true,Math.min(5,event.num));
        next.set('dialog',event.videoId);
        next.set('ai',function(button){
            return button.link*Math.random();
        });
        "step 2"
        if(event.videoId!=undefined){
            if(player.isOnline2()){
                player.send('closeDialog',event.videoId);
            }
            event.dialog.close();
        }
        var map=[
            function(trigger,player,event){
                player.addSkill('DIY_baiyin_guicai');
                game.log(player,'获得了','#g【鬼才】');
            },
            function(trigger,player,event){
                player.addSkill('DIY_baiyin_fangzhu');
                game.log(player,'获得了','#g【放逐】');
            },
            function(trigger,player,event){
                player.addSkill('DIY_baiyin_zhiheng');
                game.log(player,'获得了','#g【制衡】');
            },
            function(trigger,player,event){
                player.addSkill('DIY_baiyin_jizhi');
                game.log(player,'获得了','#g【集智】');
            },
            function(trigger,player,event){
                player.addSkill('DIY_baiyin_wansha');
                game.log(player,'获得了','#g【完杀】');
            }
        ];
        result.links.sort();
        for(var i=0;i<result.links.length;i++){
            map[result.links[i]](trigger,player,event);
        }
        'step 3'
        var num=event.num-player.maxHp;
        if(num>0) player.gainMaxHp(num);
        else player.loseMaxHp(-num);
        'step 4'
        var num=event.num-player.hp;
        if(num>0) player.recover(num);
        else player.loseHp(-num);
        'srep 5'
        var num=event.num-player.countCards('h');
        if(num>0) player.drawTo(event.num);
        else player.chooseToDiscard('h',-num,true);
    },
                mark:true,
                intro:{
                    content:"limited",
                },
                init:function(player,skill){
        player.storage[skill]=false;
    },
            },
            "DIY_baiyin_jizhi":{
                audio:"ext:天牢令/image/audio:1",
                locked:false,
                trigger:{
                    player:"useCard",
                },
                frequent:true,
                filter:function(event){
        return (get.type(event.card,'trick')=='trick'&&event.card.isCard);
    },
                init:function(player){
        player.storage.DIY_baiyin_jizhi=0;
    },
                content:function(){
        'step 0'
        player.draw();
        'step 1'
        event.card=result[0];
        if(get.type(event.card)=='basic'){
            player.chooseBool('是否弃置'+get.translation(event.card)+'并令本回合手牌上限+1？').set('ai',function(evt,player){
                return _status.currentPhase==player&&player.needsToDiscard(-3)&&_status.event.value<6;
            }).set('value',get.value(event.card,player));
        }
        'step 2'
        if(result.bool){
            player.discard(event.card);
            player.storage.DIY_baiyin_jizhi++;
            if(_status.currentPhase==player){
                player.markSkill('DIY_baiyin_jizhi');
            }
        }
    },
                ai:{
                    threaten:1.4,
                    noautowuxie:true,
                },
                mod:{
                    maxHandcard:function(player,num){
            return num+player.storage.DIY_baiyin_jizhi;
        },
                },
                intro:{
                    content:"本回合手牌上限+#",
                },
                group:"DIY_baiyin_jizhi_clear",
                subSkill:{
                    clear:{
                        trigger:{
                            global:"phaseAfter",
                        },
                        silent:true,
                        content:function(){
                player.storage.DIY_baiyin_jizhi=0;
                player.unmarkSkill('DIY_baiyin_jizhi');
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                },
            },
            "DIY_baiyin_zhiheng":{
                audio:"ext:天牢令/image/audio:1",
                enable:"phaseUse",
                usable:1,
                position:"he",
                filterCard:function(card,player,event){
        event=event||_status.event;
        if(typeof event!='string') event=event.getParent().name;
        var mod=game.checkMod(card,player,event,'unchanged','cardDiscardable',player);
        if(mod!='unchanged') return mod;
        return true;
    },
                discard:false,
                lose:false,
                delay:false,
                selectCard:[1,Infinity],
                check:function(card){
        var player=_status.event.player;
        if(get.position(card)=='h'&&!player.countCards('h','du')&&(player.hp>2||!player.countCards('h',function(card){
            return get.value(card)>=8;
        }))){
            return 1;
        }
        return 6-get.value(card)
    },
                content:function(){
        'step 0'
        player.discard(cards);
        event.num=1;
        var hs=player.getCards('h');
        if(!hs.length) event.num=0;
        for(var i=0;i<hs.length;i++){
            if(!cards.contains(hs[i])){
                event.num=0;break;
            }
        }
        'step 1'
        player.draw(event.num+cards.length);
    },
                subSkill:{
                    draw:{
                        trigger:{
                            player:"loseEnd",
                        },
                        silent:true,
                        filter:function(event,player){
                if(event.getParent(2).skill!='rezhiheng'&&event.getParent(2).skill!='jilue_zhiheng'&&event.getParent(2).skill!='DIY_baiyin_zhiheng') return false;
                if(player.countCards('h')) return false;
                for(var i=0;i<event.cards.length;i++){
                    if(event.cards[i].original=='h') return true;
                }
                return false;
            },
                        content:function(){
                player.addTempSkill('DIY_baiyin_zhiheng_delay',trigger.getParent(2).skill+'After');
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    delay:{
                        sub:true,
                    },
                },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                    threaten:1.55,
                },
            },
            "DIY_baiyin_wansha":{
                audio:"ext:天牢令/image/audio:1",
                global:"DIY_baiyin_wansha_global",
                trigger:{
                    global:"dyingBegin",
                },
                forced:true,
                logTarget:"player",
                filter:function(event,player){
        return player==_status.currentPhase;
    },
                content:function(){
        game.countPlayer(function(current){
            if(current!=player&&current!=trigger.player) current.addSkillBlocker('DIY_baiyin_wansha_fengyin');
        });
        player.addTempSkill('DIY_baiyin_wansha_clear');
    },
                subSkill:{
                    global:{
                        mod:{
                            cardEnabled:function(card,player){
                    var source=_status.currentPhase;
                    if(card.name=='tao'&&source&&source!=player&&source.hasSkill('DIY_baiyin_wansha')&&!player.isDying()) return false;
                },
                            cardSavable:function(card,player){
                    var source=_status.currentPhase;
                    if(card.name=='tao'&&source&&source!=player&&source.hasSkill('DIY_baiyin_wansha')&&!player.isDying()) return false;
                },
                        },
                        sub:true,
                    },
                    fengyin:{
                        inherit:"fengyin",
                        sub:true,
                        init:function(player,skill){
                player.addSkillBlocker(skill);
            },
                        onremove:function(player,skill){
                player.removeSkillBlocker(skill);
            },
                        charlotte:true,
                        skillBlocker:function(skill,player){
                return !lib.skill[skill].charlotte&&!get.is.locked(skill,player);
            },
                        mark:true,
                        intro:{
                            content:function(storage,player,skill){
                    var list=player.getSkills(null,false,false).filter(function(i){
                        return lib.skill.fengyin.skillBlocker(i,player);
                    });
                    if(list.length) return '失效技能：'+get.translation(list);
                    return '无失效技能';
                },
                        },
                    },
                    clear:{
                        trigger:{
                            global:"dyingAfter",
                        },
                        forced:true,
                        charlotte:true,
                        popup:false,
                        filter:function(event,player){
                return !_status.dying.length;
            },
                        content:function(){
                player.removeSkill('DIY_baiyin_wansha_clear');
            },
                        onremove:function(){
                game.countPlayer2(function(current){
                    current.removeSkillBlocker('DIY_baiyin_wansha_fengyin');
                });
            },
                        sub:true,
                    },
                },
            },
            "DIY_lianpo":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseAfter",
                },
                frequent:true,
                filter:function(event,player){
        return player.getStat('kill')>0;
    },
                content:function(){
        player.insertPhase();
    },
            },
            "DIY_baiyin_guicai":{
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    global:"judge",
                },
                direct:true,
                filter:function(event,player){
        return player.countCards('hes')>0;
    },
                content:function(){
        "step 0"
        player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，'+get.prompt('reguicai'),'hes',function(card){
            var player=_status.event.player;
            var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
            if(mod2!='unchanged') return mod2;
            var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
            if(mod!='unchanged') return mod;
            return true;
        }).set('ai',function(card){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            var judging=_status.event.judging;
            var result=trigger.judge(card)-trigger.judge(judging);
            var attitude=get.attitude(player,trigger.player);
            if(attitude==0||result==0) return 0;
            if(attitude>0){
                return result-get.value(card)/2;
            }
            else{
                return -result-get.value(card)/2;
            }
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.bool){
            player.respond(result.cards,'DIY_baiyin_guicai','highlight','noOrdering');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            if(trigger.player.judging[0].clone){
                trigger.player.judging[0].clone.classList.remove('thrownhighlight');
                game.broadcast(function(card){
                    if(card.clone){
                        card.clone.classList.remove('thrownhighlight');
                    }
                },trigger.player.judging[0]);
                game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
            }
            game.cardsDiscard(trigger.player.judging[0]);
            trigger.player.judging[0]=result.cards[0];
            trigger.orderingCards.addArray(result.cards);
            game.log(trigger.player,'的判定牌改为',result.cards[0]);
            game.delay(2);
        }
    },
                ai:{
                    rejudge:true,
                    tag:{
                        rejudge:1,
                    },
                },
            },
            "DIY_baiyin_fangzhu":{
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    player:"damageEnd",
                },
                direct:true,
                preHidden:true,
                content:function(){
        "step 0"
        player.chooseTarget(get.prompt('fangzhu'),'令一名其他角色将武将牌翻面并摸'+get.cnNumber(player.getDamagedHp())+'张牌',function(card,player,target){
            return player!=target
        }).setHiddenSkill('fangzhu').ai=function(target){
            if(target.hasSkillTag('noturn')) return 0;
            var player=_status.event.player;
            if(get.attitude(_status.event.player,target)==0) return 0;
            if(get.attitude(_status.event.player,target)>0){
                if(target.classList.contains('turnedover')) return 1000-target.countCards('h');
                if(player.getDamagedHp()<3) return -1;
                return 100-target.countCards('h');
            }
            else{
                if(target.classList.contains('turnedover')) return -1;
                if(player.getDamagedHp()>=3) return -1;
                return 1+target.countCards('h');
            }
        }
        "step 1"
        if(result.bool){
            player.logSkill('DIY_baiyin_fangzhu',result.targets);
            result.targets[0].draw(player.getDamagedHp());
            result.targets[0].turnOver();
        }
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function(card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(target.hp<=1) return;
                    if(!target.hasFriend()) return;
                    var hastarget=false;
                    var turnfriend=false;
                    var players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(get.attitude(target,players[i])<0&&!players[i].isTurnedOver()){
                            hastarget=true;
                        }
                        if(get.attitude(target,players[i])>0&&players[i].isTurnedOver()){
                            hastarget=true;
                            turnfriend=true;
                        }
                    }
                    if(get.attitude(player,target)>0&&!hastarget) return;
                    if(turnfriend||target.hp==target.maxHp) return [0.5,1];
                    if(target.hp>1) return [1,0.5];
                }
            },
                    },
                },
            },
            "DIY_qingxi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardToPlayered",
                },
                filter:function(event,player){
        return event.card.name=='sha'||event.card.name=='juedou';
    },
                check:function(event,player){
        return get.attitude(player,event.target)<0;
    },
                logTarget:"target",
                content:function(){
        'step 0'
        var num=Math.max(1,4-get.distance(player,trigger.target));
        trigger.target.chooseToDiscard(num,'弃置'+get.cnNumber(num)+'张手牌',true).set('ai',function(card){
                if(get.type(card)=='basic'){
                    return 8-get.value(card);
                }
                else{
                    return 10-get.value(card);
                }
        });
        'step 1'
        var id=trigger.target.playerid;
        var map=trigger.customArgs;
        if(!map[id]) map[id]={};
        if(!map[id].extraDamage) map[id].extraDamage=0;
        map[id].extraDamage++;
        trigger.target.judge(function(card){
            if(get.color(card)=='red') return -1;
            return 0;
        }).judge2=function(result){
            return result.bool==false?true:false;
        };
        'step 2'
        if(result.color=='red') trigger.directHit.add(trigger.target);
    },
            },
            "DIY_qinguo":{
                audio:"qinguo_use",
                trigger:{
                    player:"loseAfter",
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
                },
                filter:function (event,player){
        var evt=event.getl(player);
        if(event.name=='equip'&&event.player==player) return true;
        return evt&&evt.es.length;
    },
                direct:true,
                content:function(){
        'step 1'
        player.chooseUseTarget({name:'sha'},get.prompt('xinfu_qinguo'),'视为使用一张【杀】',false).logSkill='xinfu_qinguo';
        'step 2'
        if(player.isHealthy()||player.countCards('e')==player.hp) player.recover();
        if(player.countCards('e')!=player.hp) player.draw();
    },
            },
            "DIY_hengwu":{
                audio:"ext:天牢令/image/audio:4",
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                content:function(){
        "step 0"
        var number=get.number(trigger.card);
        player.storage.DIY_hengwu2=number;
        player.addTempSkill('DIY_hengwu2');
        game.countPlayer(function(current){
            if(current!=player){
                player.line(current,'yellow');
                current.storage.DIY_hengwu3=number;
                current.addTempSkill('DIY_hengwu3');
            }
        });
    },
            },
            "DIY_shouli":{
                audio:"ext:天牢令/image/audio:4",
                trigger:{
                    player:["useCard1","respond"],
                },
                direct:true,
                filter:function(event,player){
        if(!player.storage.DIY_shouli_suit||!player.storage.DIY_shouli_suit.length) return true;
        var suit=get.suit(event.card);
        if(player.storage.DIY_shouli_suit.contains(suit))return false;
        return true;
    },
                content:function(){
        'step 0'
        player.addTempSkill('DIY_shouli_suit');
        if(!player.storage.DIY_shouli_suit) player.storage.DIY_shouli_suit=[];
        player.storage.DIY_shouli_suit.push(get.suit(trigger.card,false));
        player.logSkill("DIY_shouli");
        player.draw(4-player.storage.DIY_shouli_suit.length);
    },
                subSkill:{
                    suit:{
                        mark:true,
                        charlotte:true,
                        intro:{
                            name:"狩骊",
                            content:function(storage,player){
                                var str="本回合已使用或打出花色："+get.translation(player.storage.DIY_shouli_suit)+"<br>你的牌点数-"+get.translation(player.storage.DIY_shouli_suit.length)+"";
                                return str;
                            },
                        },
                        mod:{
                            number:function(card,number){
                                var player=get.owner(card);
                                if(!player) return number;
                                var length = player.storage.DIY_shouli_suit.length;
                                return number <= length ? 1 : number - length;
                            },
                        },
                        onremove:true,
                        sub:true,
                    },
                },
            },
            "DIY_hengwu2":{
                mod:{
                    cardUsable:function(card,player){
            if(get.number(card)<player.storage.DIY_hengwu2) return Infinity;
        },
                },
                charlotte:true,
                onremove:true,
                mark:true,
                marktext:"横婺",
                intro:{
                    name:"横婺",
                    content:function(storage,player){
            var num=player.storage.DIY_hengwu2;
            var str='你使用小于'+get.translation(num)+'点的牌无次数限制';
            return str;
        },
                },
            },
            "DIY_hengwu3":{
                mod:{
                    "cardEnabled2":function(card,player){
            if(get.number(card)>player.storage.DIY_hengwu3) return false;
        },
                },
                charlotte:true,
                onremove:true,
                mark:true,
                marktext:"横婺",
                intro:{
                    name:"横婺",
                    content:function(storage,player){
            var num=player.storage.DIY_hengwu3;
            var str='你不能使用或打出点数大于'+get.translation(num)+'的牌';
            return str;
        },
                },
            },
            "DIY_yanjiao":{
                audio:"ext:天牢令/image/audio:4",
                enable:"phaseUse",
                filterTarget:function(card,player,target){
        return target!=player;
    },
                filter:function(event,player){
        return player.getHistory('custom',function(evt){
            return evt.DIY_yanjiao==true;
        }).length<=player.countMark("DIY_shengshen");
    },
                content:function(){
        "step 0"
        player.getHistory('custom').push({DIY_yanjiao:true});
        player.storage.DIY_yanjiao_a=0;
        player.storage.DIY_yanjiao_b=0;
        player.storage.DIY_yanjiao_c=0;
        var num1=Math.floor(Math.random() * (9 - 1 + 1)) + 9;
        var num2=Math.floor(Math.random() * (9 - 1 + 1)) + 9;
        var num3=Math.floor(Math.random() * (9 - 1 + 1)) + 9;
        var num4=get.cnNumber(num1);
        var num5=get.cnNumber(num2);
        var num6=get.cnNumber(num3);
        if(num1<=num2&&num1<=num3){
            player.storage.DIY_yanjiao_a=num1;
            if(num2<=num3){
               player.storage.DIY_yanjiao_b=num2;
               player.storage.DIY_yanjiao_c=num3;
            }
            else{
                player.storage.DIY_yanjiao_b=num3;
                player.storage.DIY_yanjiao_c=num2;
            }
        }
        else{
            if(num2<=num3){
                player.storage.DIY_yanjiao_a=num2;
                if(num1<=num3){
                    player.storage.DIY_yanjiao_b=num1;
                    player.storage.DIY_yanjiao_c=num3;
                }
                else{
                    player.storage.DIY_yanjiao_b=num3;
                    player.storage.DIY_yanjiao_c=num1;
                }
            }
            else{
                player.storage.DIY_yanjiao_a=num3;
                if(num1<=num2){
                    player.storage.DIY_yanjiao_b=num1;
                    player.storage.DIY_yanjiao_c=num2;
                }
                else{
                    player.storage.DIY_yanjiao_b=num2;
                    player.storage.DIY_yanjiao_c=num1;
                }
            }
        }
        target.chooseControl('A','B','C','D').set('prompt','〖严教〗<br>'+get.translation(player)+'：今有长非一梃三端，其长分为'+toCnCapNumber(num4)+'寸、'+toCnCapNumber(num5)+'寸、'+toCnCapNumber(num6)+'寸，善子，此木以为何三角？').set("displayIndex", false).set('choiceList',[
            'A.锐角三角形',
            'B.直角三角形',
            'C.钝角三角形',
            'D.不成三角形',
        ]).set('ai',function(){
            var a=player.storage.DIY_yanjiao_a;
            var b=player.storage.DIY_yanjiao_b;
            var c=player.storage.DIY_yanjiao_c;
            if(a+b<=c) return 'D';
            if(a*a+b*b>c*c) return 'A';
            if(a*a+b*b==c*c) return 'B';
            if(a*a+b*b<c*c) return 'C';
            return 'D';
        });
        "step 1"
        if(result.control!="cancel2"){
            game.log(target,'选择了','#y'+result.control);
            var a=player.storage.DIY_yanjiao_a;
            var b=player.storage.DIY_yanjiao_b;
            var c=player.storage.DIY_yanjiao_c;
            if(a+b<=c&&result.control=='D') event.goto(3);
            if(a+b>c&&a*a+b*b>c*c&&result.control=='A') event.goto(3);
            if(a+b>c&&a*a+b*b==c*c&&result.control=='B') event.goto(3);
            if(a+b>c&&a*a+b*b<c*c&&result.control=='C') event.goto(3);
        }
        "step 2"
        game.log(target,'回答错误❌');
        target.popup('回答错误');
        target.damage('nocard');
        event.goto(6);
        "step 3"
        game.log(target,'回答正确✅');
        target.popup('回答正确');
        player.draw(4);
        "step 4"
        player.chooseCard('he',true,2,'选择交给'+get.translation(target)+'的两张牌');
        "step 5"
        if(result.bool&&result.cards&&result.cards.length) target.gain(result.cards,player,'giveAuto');
        "step 6"
    },
                ai:{
                    order:10,
                    result:{
                        player:1,
                        target:1.1,
                    },
                },
            },
            "DIY_shengshen":{
                audio:"ext:天牢令/image/audio:4",
                trigger:{
                    player:"damageEnd",
                },
                direct:true,
                filter:function(event,player){
        return event.source!=undefined&&event.num>0;
    },
                logTarget:"source",
                frequent:true,
                group:"DIY_shengshen_2",
                intro:{
                    content:"〖严教〗发动次数+$",
                },
                subSkill:{
                    "2":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        direct:true,
                        filter:function(event,player){
                            return player.countMark("DIY_shengshen")>0;
                        },
                        content:function(){
                            player.removeMark('DIY_shengshen',Infinity,false);
                        },
                        sub:true,
                    },
                },
                content:function(){
        "step 0"
        player.chooseBool('对'+get.translation(trigger.source)+'发动〖严教〗或点“取消”摸一张牌').set('ai',function(){
            if(get.attitude(player,event.source)>0) return true;
            return false;
        });
        "step 1"
        player.logSkill('DIY_shengshen');
        if(!result.bool){
            player.draw();
            player.addMark('DIY_shengshen',1,false);
            event.goto(8);
        }
        "step 2"
        player.getHistory('custom').push({DIY_yanjiao:true});
        player.storage.DIY_yanjiao_a=0;
        player.storage.DIY_yanjiao_b=0;
        player.storage.DIY_yanjiao_c=0;
        var num1=Math.floor(Math.random() * (9 - 1 + 1)) + 9;
        var num2=Math.floor(Math.random() * (9 - 1 + 1)) + 9;
        var num3=Math.floor(Math.random() * (9 - 1 + 1)) + 9;
        var num4=get.cnNumber(num1);
        var num5=get.cnNumber(num2);
        var num6=get.cnNumber(num3);
        if(num1<=num2&&num1<=num3){
            player.storage.DIY_yanjiao_a=num1;
            if(num2<=num3){
               player.storage.DIY_yanjiao_b=num2;
               player.storage.DIY_yanjiao_c=num3;
            }
            else{
                player.storage.DIY_yanjiao_b=num3;
                player.storage.DIY_yanjiao_c=num2;
            }
        }
        else{
            if(num2<=num3){
                player.storage.DIY_yanjiao_a=num2;
                if(num1<=num3){
                    player.storage.DIY_yanjiao_b=num1;
                    player.storage.DIY_yanjiao_c=num3;
                }
                else{
                    player.storage.DIY_yanjiao_b=num3;
                    player.storage.DIY_yanjiao_c=num1;
                }
            }
            else{
                player.storage.DIY_yanjiao_a=num3;
                if(num1<=num2){
                    player.storage.DIY_yanjiao_b=num1;
                    player.storage.DIY_yanjiao_c=num2;
                }
                else{
                    player.storage.DIY_yanjiao_b=num2;
                    player.storage.DIY_yanjiao_c=num1;
                }
            }
        }
        player.logSkill('DIY_yanjiao',trigger.source);
        trigger.source.chooseControl('A','B','C','D').set('prompt','〖严教〗<br>'+get.translation(player)+'：今有长非一梃三端，其长分为'+toCnCapNumber(num4)+'寸、'+toCnCapNumber(num5)+'寸、'+toCnCapNumber(num6)+'寸，善子，此木以为何三角？').set('choiceList',[
            '锐角三角形',
            '直角三角形',
            '钝角三角形',
            '不成三角形',
        ]).set('ai',function(){
            var a=player.storage.DIY_yanjiao_a;
            var b=player.storage.DIY_yanjiao_b;
            var c=player.storage.DIY_yanjiao_c;
            if(a+b<=c) return 'D';
            if(a*a+b*b>c*c) return 'A';
            if(a*a+b*b==c*c) return 'B';
            if(a*a+b*b<c*c) return 'C';
            return 'D';
        });
        "step 3"
        if(result.control!="cancel2"){
            game.log(trigger.source,'选择了','#y'+result.control);
            var a=player.storage.DIY_yanjiao_a;
            var b=player.storage.DIY_yanjiao_b;
            var c=player.storage.DIY_yanjiao_c;
            if(a+b<=c&&result.control=='D') event.goto(5);
            if(a+b>c&&a*a+b*b>c*c&&result.control=='A') event.goto(5);
            if(a+b>c&&a*a+b*b==c*c&&result.control=='B') event.goto(5);
            if(a+b>c&&a*a+b*b<c*c&&result.control=='C') event.goto(5);
        }
        "step 4"
        game.log(trigger.source,'回答错误❌');
        trigger.source.popup('回答错误');
        trigger.source.damage('nocard');
        event.goto(8);
        "step 5"
        game.log(trigger.source,'回答正确✅');
        trigger.source.popup('回答正确');
        player.draw(4);
        "step 6"
        player.chooseCard('he',true,2,'选择交给'+get.translation(trigger.source)+'的两张牌');
        "step 7"
        if(result.bool&&result.cards&&result.cards.length) trigger.source.gain(result.cards,player,'giveAuto');
        "step 8"
    },
                ai:{
                    "maixie_defend":true,
                    expose:0.4,
                },
            },
            "DIY_jiufa":{
                trigger:{
                    player:["phaseJudgeBefore","phaseDrawBefore","phaseDiscardBefore"],
                },
                group:["DIY_jiufa_use","DIY_jiufa_damage"],
                intro:{
                    content:"〖九伐〗可发动次数：$",
                },
                forced:true,
                audio:"ext:天牢令/image/audio:2",
                content:function(){
        trigger.cancel();
        if(event.triggername=='phaseJudgeBefore') game.log(player,'跳过了判定阶段');
        if(event.triggername=='phaseDrawBefore') game.log(player,'跳过了摸牌阶段');
        if(event.triggername=='phaseDiscardBefore') game.log(player,'跳过了弃牌阶段');
                },
                subSkill:{
                    use:{
                        audio:"DIY_jiufa",
                        forced:true,
                        trigger:{
                            player:"phaseUseEnd",
                        },
                        filter:function(event,player){
                    return player.getHistory('custom',function(evt){
                        return evt.DIY_jiufa_use==true;
                    }).length<player.countMark("DIY_jiufa");
                        },
                        content:function(){
                            player.getHistory('custom').push({DIY_jiufa_use:true});
                            var next=trigger.player.phaseUse();
                            event.next.remove(next);
                            trigger.getParent('phase').next.push(next);
                            game.log(player,'执行了一个出牌阶段');
                        },
                        sub:true,
                    },
                    damage:{
                        audio:"DIY_jiufa",
                        forced:true,
                        trigger:{
                            source:"damageSource",
                        },
                        filter:function(event,player){
                    return player==_status.currentPhase&&player.countMark("DIY_jiufa")<9;
                        },
                        content:function(){
                            player.addMark('DIY_jiufa',1,false);
                        },
                        sub:true,
                    },
                },
            },
            "DIY_tianren":{
                trigger:{
                    player:["phaseUseBefore"],
                },
                forced:true,
                discard:false,
                lose:false,
                delay:false,
                audio:"ext:天牢令/image/audio:2",
                content:function(){
        'step 0'
        str='天任：请选择一项';
        if(player.storage.DIY_tianren_choice==0){
          str+='，若你选择了选项一，你失去一点体力';
        }
        else{
            if(player.storage.DIY_tianren_choice==1){
                str+='，若你选择了选项二，你失去一点体力';
            }
        }
        if(player.hasSkill('DIY_tianren_2')){
            player.chooseControl('选项一','选项二').set('prompt',str).set('choiceList',[
            '将手牌调整至五张',
            '依次重铸五张牌',
        ]).set('ai',function(){
            if(player.storage.DIY_tianren_choice==0) return '选项二';
                return '选项一';
            });
        }
        else{
            player.chooseControl('选项一','选项二').set('prompt',str).set('choiceList',[
            '将手牌调整至四张',
            '依次重铸四张牌',
        ]).set('ai',function(){
            if(player.storage.DIY_tianren_choice==0) return '选项二';
                return '选项一';
            });
        }
        'step 1'
        if(result.control=='选项一'){
            if(player.hasSkill('DIY_tianren_2')){
                num1=5;
            }
            else{
                num1=4;
            }
            if(player.storage.DIY_tianren_choice==0){
                player.loseHp();
                player.removeSkill('DIY_tianren_2');
            }
            else{
                player.addSkill('DIY_tianren_2');
            }
            player.storage.DIY_tianren_choice=0;
            var num2=num1-player.countCards('h');
            if(num2>0) player.draw(num2);
            else player.chooseToDiscard('h',-num2,true);
        }
        else{
            if(player.hasSkill('DIY_tianren_2')){
                num1=5;
            }
            else{
                num1=4;
            }
            if(player.storage.DIY_tianren_choice==1){
                player.loseHp();
                player.removeSkill('DIY_tianren_2');
            }
            else{
                player.addSkill('DIY_tianren_2');
            }
            player.storage.DIY_tianren_choice=1;
            for(i=1;i<=num1;i++){
                player.chooseToDiscard('天任：请选择重铸的第'+get.cnNumber(i)+'张牌','he',1,true).set('ai',function(card){
            return 7-get.value(card);
        });
                player.draw();
            }
        }
                },
                subSkill:{
                    "2":{
                        intro:{
                            content:"下次发动〖天任〗选项数字+1",
                        },
                        sub:true,
                    },
                },
            },
            "DIY_paoxiao":{
                mod:{
                    aiOrder:function(player,card,num){
                        if(get.name(card)=='sha'&&(!player.storage.DIY_paoxiao||get.color(card)!=player.storage.DIY_paoxiao)) return num+10;
                    },
                    cardUsable:function (card,player,num){
                           if(card.name=='sha') return Infinity;
                    },
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["useCard","respond"],
                },
                direct:true,
                forced:true,
                filter:function(event,player){
                    if(get.name(event.card)!='sha') return false;
                    return true;
                },
                content:function(){
            if(player.storage.DIY_paoxiao){
                if(get.color(trigger.card)!=player.storage.DIY_paoxiao){
                    player.logSkill('DIY_paoxiao');
                    var cards=[];
                    get.cardPile(function(card){
                        if(get.color(card)!=get.color(trigger.card)) cards.push(card);
                    });
                    if(cards.length){
                        player.gain(cards.randomGet(),'gain2');
                    }
                    player.addSkill('DIY_paoxiao_sha');
                }
                else player.removeSkill('DIY_paoxiao_sha');
            }
            player.storage.DIY_paoxiao=get.color(trigger.card);        
            player.markSkill('DIY_paoxiao');
                },
                intro:{
                    mark:function(dialog,content,player){
                        if(player.storage.DIY_paoxiao){
                        if(['red','black'].contains(player.storage.DIY_paoxiao)) dialog.addText('上次杀颜色：'+get.translation(player.storage.DIY_paoxiao));
                        else dialog.addText('上次杀颜色：无颜色');
                        }
                    },
                },
                subSkill:{
                    sha:{
                        forced:true,
                        mod:{
                            targetInRange:function (card,player){
                  if(card.name=='sha') return true;
        },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_wusheng":{
                mod:{
                    cardUsable:function (card,player,num){
                           if(get.suit(card)=='heart'&&card.name=='sha') return Infinity;
                    },
                    targetInRange:function (card){
                        if(get.suit(card)=='diamond'&&card.name=='sha') return true;
                    },
                },
                enable:["chooseToRespond","chooseToUse"],
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
                    return event.filterCard({name:'sha',isCard:true},player,event)&&player.countCards('hes',function(card){
                    return get.color(card)=='red'||get.name(card)=='sha';
                    });
                },
                chooseButton:{
                    dialog:function(event,player){
                        var dialog=ui.create.dialog('武圣','hidden');
                        dialog.addText('请选择一个点数：');
                        var table=document.createElement('div');
                        table.classList.add('add-setting');
                        table.style.margin='0';
                        table.style.width='100%';
                        table.style.position='relative';
                        for(var i=1;i<14;i++){
                            var td=ui.create.div('.shadowed.reduce_radius.pointerdiv.tdnode');
                            var num=i;
                            if(num==1) num='A';
                            if(num==11) num='J';
                            if(num==12) num='Q';
                            if(num==13) num='K';
                            td.innerHTML='<span>'+num+'</span>';
                            td.link=i;
                            td.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
                            for(var j in lib.element.button){
                                td[j]=lib.element.button[j];
                            }
                            table.appendChild(td);
                            dialog.buttons.add(td);
                        }
                        dialog.content.appendChild(table);
                        dialog.addText('请选择一个花色：');
                        var table1=document.createElement('div');
                        table1.classList.add('add-setting');
                        table1.style.margin='0';
                        table1.style.width='100%';
                        table1.style.position='relative';
                        var suit=['spade','heart','club','diamond'];
                        for(var i=0;i<suit.length;i++){
                            var td=ui.create.div('.shadowed.reduce_radius.pointerdiv.tdnode');
                            td.innerHTML='<span>'+get.translation(suit[i])+'</span>';
                            td.link=suit[i];
                            td.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
                            for(var j in lib.element.button){
                                td[j]=lib.element.button[j];
                            }
                            table1.appendChild(td);
                            dialog.buttons.add(td);
                        }
                        dialog.content.appendChild(table1);
                        var basic=[];
                        basic.push(['基本','','sha']);
                        basic.push(['基本','','sha','fire']);
                        basic.push(['基本','','sha','thunder']);
                        basic.push(['基本','','sha','ice']);
                        basic.push(['基本','','sha','stab']);
                        dialog.addText('请选择一个属性：');
                        dialog.add([basic,'vcard']);
                        return dialog;
                    },
                    filter:function(button){
                        if(ui.selected.buttons.length){
                        for(var i=0;i<ui.selected.buttons.length;i++){
                    if(typeof button.link==typeof ui.selected.buttons[i].link) return false;
                        }}
                        return true;
                    },
                    select:3,
                    check:function(button){
                    //typeof 点数：number
                    //typeof 花色：string
                    //typeof vcard：object
                        var player=_status.event.player;
                        if(_status.event.getParent().type!='phase') return 10;
                        if(typeof button.link=='number'){
                            return 1+Math.random();
                            }
                            if(typeof button.link=='string'){
                            if(player.storage.DIY_paoxiao){
                            if(player.storage.DIY_paoxiao=='red'&&['heart','diamond'].contains(button.link)) return false;
                            if(player.storage.DIY_paoxiao=='black'&&['spade','club'].contains(button.link)) return false;
                            }
                            else{
                            if(['heart'].contains(button.link)) return 999;
                            }
                            return 1+Math.random();
                            }
                            //    return player.getUseValue(card);
                                return player.getUseValue({
                            name:button.link[2],
                            nature:button.link[3],
                        });
                    },
                    backup:function(links,player){
                    var number=links[0],suit=links[0],name=links[0][2],nature=links[0][3];
                        if(typeof links[1]=='number') number=links[1];
                        if(typeof links[1]=='string') suit=links[1];
                        if(typeof links[1]=='object'){ name=links[1][2];nature=links[1][3];}
                        if(typeof links[2]=='number') number=links[2];
                        if(typeof links[2]=='string') suit=links[2];
                        if(typeof links[2]=='object'){ name=links[2][2];nature=links[2][3];}
                        return {
                            audio:'DIY_wusheng',
                            filterCard:function(card,player){
                    return get.color(card)=='red'||get.name(card)=='sha';
                },
                            popname:true,
                            precontent:function(){
                                player.logSkill('DIY_wusheng');
                                },
                            position:'hes',
                            viewAs:{
                                suit:suit,
                                number:number,
                                name:name,
                                nature:nature,
                                isCard:true,
                            },
                            ai1:function(card){
                                return 7
                            },
                        }
                    },
                    prompt:function(links){
                    var number=0,suit=0,name=0,nature=0;
                        if(typeof links[1]=='number') number=1;
                        if(typeof links[1]=='string') suit=1;
                        if(typeof links[1]=='object'){ name=1;nature=1;}
                        if(typeof links[2]=='number') number=2;
                        if(typeof links[2]=='string') suit=2;
                        if(typeof links[2]=='object'){ name=2;nature=2;}
                        var num=links[number];
                            if(num==1) num='A';
                            if(num==11) num='J';
                            if(num==12) num='Q';
                            if(num==13) num='K';
                        return '将一张【杀】或红色牌当做'+(get.translation(links[nature][3])||'')+get.translation(links[name][2])+'【'+get.translation(links[suit])+num+'】使用或打出';
                    },
                },
                ai:{
                    respondSha:true,
                    skillTagFilter:function(player,tag,arg){
                        return player.countCards('hes',function(card){
                    return get.color(card)=='red'||get.name(card)=='sha';
                    });
                    },
                    order:12,
                    result:{
                        player:1,
                    },
                },
                group:"DIY_wusheng_sha",
                subSkill:{
                    sha:{
                        trigger:{
                            player:"useCardToPlayered",
                        },
                        direct:true,
                        filter:function(event,player){
                            return event.card.name=='sha'&&get.suit(event.card)=='heart';
                        },
                        content:function(){
                            trigger.addCount=false;
                            if(player.stat[player.stat.length-1].card.sha>0){
                                player.stat[player.stat.length-1].card.sha--;
                            }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_tianzuo":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"loseAfter",
                    global:"cardsDiscardAfter",
                },
                filter:function(event,player){
        if(event.name=='lose'){
            if(event.type!='discard') return false;
        }
        else{
            var evt=event.getParent();
            if(evt.name!='orderingDiscard'||!evt.relatedEvent||evt.relatedEvent.player!=player||!['useCard','respond'].contains(evt.relatedEvent.name)) return false;
        }
        return (event.cards2||event.cards).filterInD('d').length>0;
    },
                forced:true,
                content:function(){
        'step 0'
        var evt=trigger.getParent().relatedEvent;
        if((trigger.name=='discard'&&!trigger.delay)||evt&&evt.name=='respond') game.delayx();
        'step 1'
        event.cards=(trigger.cards2||trigger.cards).filterInD('d');
        player.gain(event.cards);
        game.delayx();
        'step 2'
        player.markAuto('DIY_lingce',event.cards);
        var list=[];
        for(i=1;i<ui.cardPile.childElementCount-1;i++){
            list.push(i);
        }
        player.lose(event.cards,ui.cardPile).insert_index=function(event,card){
            var num1=list.randomGet();
            if(get.isLuckyStar(player)&&ui.cardPile.childElementCount>10) num=[2,3,4,5,6,7,8].randomGet();;
            return ui.cardPile.childNodes[num1];
        };
        'step 3'
        game.updateRoundNumber();
        game.log(player,'把',get.cnNumber(event.cards.length),'张牌放在了牌堆里');
        game.delayx();
                },
                group:"DIY_tianzuo_gain",
                subSkill:{
                    gain:{
                        audio:"DIY_tianzuo",
                        trigger:{
                            global:"gainAfter",
                        },
                        forced:true,
                        filter:function(event,player){
                            var cards=event.cards;
                            for(i=0;i<cards.length;i++){
                                if(player.getStorage('DIY_lingce').contains(cards[i])) return true;
                            }
                            return false;
                        },
                        content:function(){
                            'step 0'
                            var cards=trigger.cards;
                            for(i=0;i<cards.length;i++){
                                if(player.getStorage('DIY_lingce').contains(cards[i])) player.unmarkAuto('DIY_lingce',[cards[i]]);
                            }
                            'step 1'
                            player.chooseTarget('令一名角色获得一张“智囊”或点取消视为对”'+get.translation(trigger.player)+'使用【奇正相生】',function(card,player,target){
                                if(target!=player&&target!=trigger.player) return false;
                                return true;
                            }).set('ai',function(target){
                                var att=get.attitude(_status.event.player,target);
                                if(_status.event.neg) return -att;
                                return att;
                            });
                            'step 2'
                            if(result.bool){
                                event.player=result.targets[0];
                                var list1=get.zhinangs();
                                if(player.storage.DIY_dinghan&&player.hasSkill('DIY_dinghan')) list2=player.getStorage('DIY_dinghan');
                                player.chooseButton(['灵策：请选择令'+get.translation(event.player)+'获得的智囊',[list1.concat(list2),'vcard']],true).set('ai',function(card){
                                    return (Math.random()+0.5)*get.value({name:card.link[2]},_status.event.player)
                                });
                            }
                            else{
                                player.useCard({name:'qizhengxiangsheng',isCard:true},trigger.player,false,'noai');
                                event.goto(4);
                            }
                            'step 3'
                            if(result.bool){
                                var card=get.cardPile2(function(card){
                                    return card.name==result.links[0][2];
                                });
                                if(card) event.player.gain(card,'gain2');
                            }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_lingce":{
                mark:true,
                marktext:"灵策",
                intro:{
                    name:"策",
                    content:"cards",
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseDrawBegin2",
                },
                frequent:true,
                preHidden:true,
                filter:function(event,player){
                    return !event.numFixed&&player.storage.DIY_lingce;
                },
                content:function(){
                    var storage=player.storage.DIY_lingce;
                    var list=[];
                    for(var i=0;i<storage.length;i++){
                        if(!list.contains(storage[i].name)){
                            list.push(storage[i].name);
                        }
                    }
                    var num=Math.min(3,list.length);
                    trigger.num+=num;
                },
                ai:{
                    threaten:1.5,
                },
                mod:{
                    maxHandcard:function(player,num){
                        var storage=player.storage.DIY_lingce;
                        var list=[];
                        for(var i=0;i<player.countMark('DIY_lingce');i++){
                            if(!list.contains(storage[i].name)){
                                list.push(storage[i].name);
                            }
                        }
                        if(list.length>3) return Math.max(1,num-Math.min(3,list.length-3));
                    },
                },
            },
            "DIY_dinghan":{
                enable:"phaseUse",
                direct:true,
                audio:"ext:天牢令/image/audio:2",
                filter:function(event,player){
                    return !player.hasSkill('DIY_dinghan_2');
                },
                content:function(){
        'step 0'
        if(!player.storage.DIY_dinghan) player.storage.DIY_dinghan=[];
        var dialog=[get.prompt('dinghan')];list1=get.zhinangs(),list2=player.getStorage('DIY_dinghan'),list3=lib.inpile.filter(function(i){
            return get.type2(i,false)=='trick'&&!list1.contains(i)&&!list2.contains(i);
        });
        if(list1.length){
            dialog.push('<div class="text center">智囊</div>');
            dialog.push([list1,'vcard']);
            dialog.push([list2,'vcard']);
        }
        if(list3.length){
            dialog.push('<div class="text center">非智囊</div>');
            dialog.push([list3,'vcard']);
        }
        player.chooseButton(dialog).set('filterButton',function(button){
            if(button.link[2]=='wuxie') return false;
            if(button.link[2]=='wuzhong') return false;
            if(button.link[2]=='guohe') return false;
            return true;
        }).set('ai',function(button){
            var player=_status.event.player,name=button.link[2];
            if(get.zhinangs().contains(name)){
                return -get.effect(player,{name:name},player,player);
            }
            else{
                return get.effect(player,{name:name},player,player)*(1+player.countCards('hs',name));
            }
        });
        'step 1'
        if(result.bool){
            player.logSkill('DIY_dinghan');
            player.addTempSkill('DIY_dinghan_2');
            var name=result.links[0][2];
            if(player.storage.DIY_dinghan.contains(name)){
                player.storage.DIY_dinghan.remove(name);
                game.log(player,'从智囊中移除了','#y'+get.translation(name));
            }
            else{
                player.storage.DIY_dinghan.push(name);
                game.log(player,'向智囊中添加了','#y'+get.translation(name));
            }
            game.delayx();
        }
    },
                subSkill:{
                    "2":{
                        sub:true,
                    },
                },
                ai:{
                    order:10,
                    result:{
                        player:1,
                    },
                },
            },
            "DIY_qianchong":{
                audio:"ext:天牢令/image/audio:2",
                enable:["chooseToUse","chooseToRespond"],
                hiddenCard:function(player,name){
                    if(lib.inpile.contains(name)&&(get.type(name)=='basic'||get.type(name)=='trick')) return true;
                },
                direct:true,
                filter:function(event,player){
                       if(game.countPlayer(function(current){
                           return current!=player&&current.countCards('h')>0&&current.hasSex('male');
                       })==0) return false;
                       if(event.responded||event.DIY_qianchong) return false;
                       for(var i of lib.inpile){
                           if(event.filterCard({name:i},player,event)) return true;
                       }
                       return false;
                   },
                delay:false,
                content:function(){
                       'step 0'
                       var evt=event.getParent(2);
                    evt.set('DIY_qianchong',true);
                    var list1=[],list2=[];
                       for(var i=0;i<lib.inpile.length;i++){
                           var type=get.type(lib.inpile[i]);
                           if(type=='basic'){
                               if(evt.filterCard({name:lib.inpile[i]},player,evt)) list1.push(['基本','',lib.inpile[i]]);
                        }
                        else if(type=='trick'){
                            if(evt.filterCard({name:lib.inpile[i]},player,evt)) list2.push(['锦囊','',lib.inpile[i]]);
                        }
                    }
                       player.chooseButton([get.prompt('DIY_qianchong'),'请选择要声明的牌',[list1.concat(list2),'vcard']]).set('filterButton',function(button){
                        return evt.filterCard({name:button.link[2]},player,evt);
                    });
                    'step 1'
                    var evt=event.getParent(2);
                    if(result.bool&&result.links&&result.links.length){
                        player.logSkill('DIY_qianchong');
                        player.storage.DIY_qianchong_num=0;
                        player.storage.DIY_qianchong=false;
                        player.showCards(game.createCard({
                            name:result.links[0][2],
                        }),get.translation(event.target)+'声明了'+get.translation(result.links[0][2]));
                        event.name=result.links[0][2];
                    }
                    else event.goto(7);
                    'step 2'
                    event.current=player.next;
                    'step 3'
                    if(!event.current.countCards('h')||!event.current.hasSex('male')) event.goto(5);
                    else event.current.chooseCard('交给'+get.translation(player)+'一张牌','he',true).set('ai',function(card){
                        var evt=_status.event.getParent();
                        if(get.attitude(_status.event.player,evt.player)>2){
                            if(card.name!=event.name) return 120;
                        }
                        return 100-get.value(card);
                    });
                    'step 4'
                    if(result.bool&&result.cards&&result.cards.length){
                        player.gain(result.cards,event.current,'giveAuto');
                        player.storage.DIY_qianchong_num++;
                        if(result.cards[0].name==event.name&&player.storage.DIY_qianchong!=true){
                            player.loseHp();
                            player.say("啊…要的就，就是这个");
                            player.storage.DIY_qianchong=true;
                        }
                    }
                    'step 5'
                    event.current=event.current.next;
                    if(event.current!=player) event.goto(3);
                    'step 6'
                    if(player.storage.DIY_qianchong_num>player.hp&&player.storage.DIY_qianchong!=true){
                        player.loseHp();
                        player.say("不行，太多了，这样下去……会，会坏掉了");
                    }
                    'step 7'
                    var evt=event.getParent(2);
                    evt.goto(0);
                },
                ai:{
                    effect:{
                        target:function(card,player,target,effect){
                            if(get.tag(card,'respondShan')) return 0.7;
                            if(get.tag(card,'respondSha')) return 0.7;
                           },
                    },
                    order:11,
                    respondShan:true,
                    respondSha:true,
                    result:{
                        player:1,
                    },
                },
            },
            "DIY_dulie":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardToPlayered",
                    target:"useCardToTarget",
                },
                derivation:"DIY_shenzhu",
                forced:true,
                logTarget:"target",
                filter:function(event,player){
        return event.card.name=='sha';
    },
                content:function(){
        'step 0'
        player.judge(function(result){
            if(get.suit(result)=='heart') return 2;
            return -1;
        }).judge2=function(result){
            return result.bool;
        };
        'step 1'
        if(result.bool){
            trigger.targets.remove(trigger.target);
			trigger.getParent().excluded.add(trigger.target);
        }
        else{
            player.addTempSkill('DIY_dulie_powei');
            player.addSkill('DIY_shenzhu');
        }
                },
                subSkill:{
                    powei:{
                        mark:true,
                        marktext:"笃烈",
                        intro:{
                            content:"本回合〖荡魔〗失效",
                        },
                        sub:true,
                    },
                },
                ai:{
                    effect:{
                        target:function(card,player,target,current,isLink){
                if(card.name=='sha'&&!isLink) return 0.5;
            },
                    },
                },
            },
            "DIY_dangmo":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCard2",
                },
                filter:function(event,player){
                    if(player.hasSkill('DIY_dulie_powei')) return false;
                    if(event.card.name!='sha') return false;
                    return game.hasPlayer(function(target){
                        if(event.targets.contains(target)) return false;
                        if(!lib.filter.filterTarget(event.card,player,target)) return false;
                        return true;
                    });
                },
                direct:true,
                content:function(){
                    'step 0'
                    player.chooseTarget(get.prompt2('DIY_dangmo'),[1,Infinity],function(card,player,target){
                        var cardx=_status.event.cardx;
                        if(!lib.filter.filterTarget(cardx,player,target)) return false;
                        var targets=_status.event.targets.slice(0).concat(ui.selected.targets);
                        if(targets.contains(target)) return false;
                        return true;
                    }).set('promptbar','none').set('cardx',trigger.card).set('targets',trigger.targets).set('ai',function(target){
                        var player=_status.event.player;
                        return get.effect(target,_status.event.cardx,player,player)
                    });
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_dangmo',result.targets);
                        if(!player.storage.DIY_dangmo_trigger) player.storage.DIY_dangmo_trigger=[];
                        player.storage.DIY_dangmo_trigger.add(trigger.card);
                        trigger.targets.addArray(result.targets);
                        player.addTempSkill('DIY_dangmo_trigger');
                    }
                },
            },
            "DIY_dangmo_audio":{
                audio:"DIY_dangmoi",
            },
            "DIY_dangmo_trigger":{
                trigger:{
                    player:"shaMiss",
                },
                silent:true,
                onremove:true,
                content:function(){
                    'step 0'
                    event.current=player.next;
                    'step 1'
                    if(!event.current.countCards('he')&&trigger.getParent().targets.contains(event.current)) event.goto(2);
                    else player.gainPlayerCard(event.current,'he',true);
                    'step 2'
                    event.current=event.current.next;
                    if(event.current!=player) event.goto(1);
                    'step 3'
                    player.logSkill("DIY_dangmo_audio");
                    if(player.storage[event.name].contains(trigger.card)) trigger.getParent().excluded.addArray(trigger.getParent().targets);
                },
                group:"DIY_dangmo_remove",
                forced:true,
                popup:false,
            },
            "DIY_dangmo_remove":{
                trigger:{
                    player:["useCardAfter","useCardCancelled"],
                },
                silent:true,
                filter:function(event,player){
                    return player.storage.DIY_dangmo_trigger&&player.storage.DIY_dangmo_trigger.contains(event.card);
                },
                content:function(){
                    player.storage.DIY_dangmo_trigger.remove(trigger.card);
                },
                forced:true,
                popup:false,
            },
            "DIY_shenzhu":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                position:"he",
                filterCard:true,
                filterTarget:function(card,player,target){
                    return target!=player;
                },
                filter:function(event,player){
                    return player.countCards('he')>0&&!player.hasSkill('DIY_shenzhu_sha');
                },
                content:function(){
                    player.useCard({name:'sha'},target,[card],'DIY_shenzhu').animate=false;
                },
                prompt:"将一张牌当无距离和次数限制的【杀】对一名其他角色使用",
                check:function(card){return 5-get.value(card)},
                group:"DIY_shenzhu_draw",
                ai:{
                    order:10,
                    result:{
                        player:1,
                        target:-1,
                    },
                },
                subSkill:{
                    sha:{
                        forced:true,
                        popup:false,
                        mark:true,
                        marktext:"神著",
                        intro:{
                            content:"〖神著〗失效",
                        },
                        trigger:{
                            player:"useCard",
                            source:"damageSource",
                        },
                        filter:function(event,player){
                            if(event.name=='damage') return true;
                            return event.card.name=='sha';
                        },
                        content:function(){
                            player.logSkill("DIY_shenzhu_audio");
                            player.removeSkill('DIY_shenzhu_sha');
                        },
                        sub:true,
                    },
                    draw:{
                        trigger:{
                            player:"shaAfter",
                        },
                        forced:true,
                        popup:false,
                        filter:function(event,player){
                            return event.parent.skill=='DIY_shenzhu';
                        },
                        content:function(){
                        'step 0'
                        player.chooseControl().set('choiceList',[
                            '摸一张牌，然后此技能失效直至你下一次使用【杀】或造成伤害；',
                            '摸三张牌，然后失去此技能。',
                        ]).set('ai',()=>_status.event.player.hasSha()?0:1);
                        'step 1'
                        if(result.index==0){
                            player.draw();
                            player.addSkill('DIY_shenzhu_sha');
                        }
                        else{
                            player.draw(3);
                            player.removeSkill('DIY_shenzhu');
                        }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_shenzhu_audio":{
                audio:"DIY_shenzhu",
            },
            "DIY_xionghuo":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                filterTarget:true,
                content:function(){
                    'step 0'
                    player.damage(target);
                    'step 1'
                    var list=[];
                    for(var name of lib.inpile){
                        var type=get.type(name);
                        if(type!='basic'&&type!='trick') continue;
                        var card={name:name,isCard:true};
                        /*var range=get.select(get.info(card).selectTarget);
                        if(range[0]!=1&&range[1]!=1) continue;*/
                        if(get.tag(card,'damage')>0&&player.hasUseTarget(card)){
                            list.push([type,'',name]);
                        }
                        if(name=='sha'){
                            for(var i of lib.inpile_nature){
                                card.nature=i;
                                if(player.hasUseTarget(card)) list.push([type,'',name,i]);
                            }
                        }
                    }
                    if(list.length){
                        target.chooseButton(['是否视为使用一张伤害牌？',[list,'vcard'],true]).set('ai',function(button){
                            return _status.event.player.getUseValue({name:button.link[2]});
                        });
                    }
                    else event.finish();
                    'step 2'
                    if(result.bool){
                        event.name=result.links[0][2];
                        event.nature=result.links[0][3];
                        player.chooseControl().set('prompt','凶镬：请选择一项').set('choiceList',[
                            '令'+get.translation(event.name)+'伤害+1',
                            '令'+get.translation(event.name)+'额外结算一次',
                            '背水：令'+get.translation(target)+'将手牌数调整至一',
                        ]).set('ai',function(){
                            return 2;
                        });
                    }
                    else event.finish();
                    'step 3'
                    if(result.index!=0){
                        target.addTempSkill("DIY_xionghuo_use");
                        target.storage.DIY_xionghuo_use=event.name;
                    }
                    if(result.index!=1){
                        target.addTempSkill("DIY_xionghuo_damage");
                        target.storage.DIY_xionghuo_damage=event.name;
                    }
                    if(result.index==2){
                        var num=target.countCards('h')-1;
                        if(num>0){
                            target.chooseToDiscard(num,true,'h');
                        }
                        else{
                            target.drawTo(1);
                        }
                    }
                    'step 4'
                    target.chooseUseTarget({name:event.name,nature:event.nature,isCard:true},true,false);
                },
                ai:{
                    order:8,
                    result:{
                        player:function(player){
                if(_status.event.dying) return get.attitude(player,_status.event.dying);
                return 1;
            },
                        target:function(player,target){
                if(target==player) return 10;
                if(target!=player) return 0;
            },
                    },
                },
                subSkill:{
                    damage:{
                        audio:"DIY_xionghuo",
                        trigger:{
                            player:"useCard",
                        },
                        forced:true,
                        filter:function(event,player){
                            var evt=event;
                            return evt.card.name==player.storage.DIY_xionghuo_damage;
                        },
                        content:function(){
                            if(!player.hasSkill('DIY_xionghuo_use')) player.removeSkill("DIY_xionghuo_damage");
                            trigger.baseDamage++;
                        },
                        sub:true,
                    },
                    use:{
                        audio:"DIY_xionghuo",
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        filter:function(event,player){
                            var evt=event;
                            if(!evt.targets) return false;
                            return evt.card.name==player.storage.DIY_xionghuo_use;
                        },
                        content:function(){
                            player.removeSkill("DIY_xionghuo_use");
                            var card=game.createCard(trigger.card.name);
                            player.useCard(card,trigger.targets);
                        },
                        sub:true,
                    },
                },
            },
            "DIY_shajue":{
                enable:["chooseToUse"],
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                locked:true,
                filter:function(event,player){
                    if(!event.filterCard({name:'sha'},player,event)&&event.type!='phase') return false;
                    return game.hasPlayer(function(current){
                        return current.countCards('h')==1||current.countCards('e')==1;
                    });
                },
                content:function(){
                'step 0'
                var str='〖杀绝〗：请选择一名手牌区或装备区牌数为1的角色：';
                player.chooseTarget(str,function(card,player,target){
                    if(target.countCards('h')!=1&&target.countCards('e')!=1) return false;
                    return true;
                }).ai=(target)=>{
                    var player=_status.event.player;
                    var att=get.attitude(player,target);
                    var h=target.getCards('h')[0];
                    var e=target.getCards('e')[0];
                    if(att<=0){
                        if(h&&!target.hasSkillTag('noh')) return 2;
                        if(e&&!target.hasSkillTag('noe')) return 2;
                    }
                    else{
                        if(h&&target.hasSkillTag('noh')) return 1;
                        if(e&&target.hasSkillTag('noe')) return 1;
                    }
                    return 1;
                };
                'step 1'
                if (result.bool) {
                    event.target=result.targets[0];
                    player.choosePlayerCard(event.target,'he').set('filterButton',function (button){
                        if(event.target.countCards('h')==1&&event.target.countCards('e')!=1) return event.target.getCards('h').contains(button.link);
                        if(event.target.countCards('e')==1&&event.target.countCards('h')!=1) return event.target.getCards('e').contains(button.link);
                        return true;
                    }).ai=get.buttonValue;
                }
                else{
                    _status.DIY_shajue_aiCanceled=true;
                    event.finish();
                    event.getParent(2).goto(0);
                }
                'step 2'
                if(result.bool&&result.cards&&result.cards.length){
                    event.cards=result.cards;
                    _status.DIY_shajue_aiCanceled=false;
                    player.logSkill('DIY_shajue',target);
                    player.gain(event.cards,'give','log');
                    player.addTempSkill('DIY_shajue_dying',{player:'shaAfter'});
                } 
                else{
                    _status.DIY_shajue_aiCanceled=true;
                    event.finish();
                    event.getParent(2).goto(0);
                }
                'step 3'
                var evt=event.getParent(2);
                var bool=true;
                for(var i of event.cards){
                if(game.checkMod(i,player,'unchanged','cardEnabled2',player)===false) bool=false;
                }
                if(bool){
                    var card=event.cards[0],
                    viewAs='sha';
                    if (evt.name=='chooseToUse') {
                    var bool2=true;
                    var cardx={
                        name:viewAs,
                        suit:event.cards[0].suit,
                        number:event.cards[0].number,
                        cards:event.cards,
                    };
                    if (viewAs=='sha'&&evt.type=='phase'){
                        bool2=game.hasPlayer(current=>{
                            return player.canUse(cardx,current,null);
                        });
                    }
                    game.broadcastAll(function(card){
                        lib.skill.DIY_shajue_backup2.viewAs=card;
                        lib.skill.DIY_shajue_backup2.filterCard=(card)=>card==lib.skill.DIY_shajue_backup2.viewAs.cards[0];
                        lib.skill.DIY_shajue_backup2.selectCard=-1;
                        lib.skill.DIY_shajue_backup2.prompt='选择'+get.translation(card)+'的目标';
                    },cardx);
                    if(evt.type=='phase'){
                        game.broadcastAll(function(card){
                        lib.skill.DIY_shajue_backup.viewAs=card;
                        lib.skill.DIY_shajue_backup.filterCard=(card)=>card==lib.skill.DIY_shajue_backup.viewAs.cards[0];
                        }, cardx);
                        var next=player.chooseToUse();
                        next.set('openskilldialog','【杀绝】选择'+get.translation(get.autoViewAs(cardx,event.cards))+'的目标');
                        next.set('filterCard',()=>true);
                        next.set('filterTarget',function(card,player,target){
                            return player.canUse('sha',target,false);
                        });
                        if (bool2) next.set('selectCard',-1);
                        next.set('_backupevent','DIY_shajue_backup');
                        next.set('custom',{
                            add:{},
                            replace:{window:function(){}}
                        });
                        next.backup('DIY_shajue_backup');
                    }
                    }
                } 
                else{
                    event.cancel();
                }
                evt.goto(0);
                },
                subSkill:{
                    backup:{
                        precontent:function(){
                            delete event.result.skill;
                        },
                        sub:true,
                    },
                    "backup2":{
                        precontent:function(){
                            delete event.result.skill;
                        },
                        filterCard:function(){ return false },
                        selectCard:-1,
                        silent:true,
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    dying:{
                        audio:"DIY_shajue",
                        trigger:{
                            global:"dying",
                        },
                        forced:true,
                        content:function(){
                            player.stat[player.stat.length-1].card.sha=0;
                            if(trigger.parent.name=='damage'&&get.itemtype(trigger.parent.cards)=='cards'&&get.position(trigger.parent.cards[0],true)=='o'){
                                player.gain(trigger.parent.cards,"gain2");
                            }
                        },
                        sub:true,
                    },
                },
                ai:{
                    respondSha:true,
                    order:function(){
                        var player=_status.event.player;
                        if(_status.event.type=='phase') return 11;
                        if(game.hasPlayer(function(current){
                            return current.countCards('h')==1||current.countCards('e')==1;
                        })) return get.order({name:'sha'})+0.4;
                        return get.order({name:'sha'})-0.4;
                    },
                    result:{
                        player:function(player){
                            if(_status.event.name=='chooseToUse'){
                                if(_status.event.type&&_status.event.type=='phase'){
                                    if(game.hasPlayer(current=>get.effect(current,{name:'sha'},player,player)>0&&player.inRange(current)&&get.attitude(player,current)<0)&&game.hasPlayer(function(current){
            return current.countCards('h')==1||current.countCards('e')==1;
        })) return 1;
                                }
                                else if(_status.event.type&&_status.event.type!='phase'&&player.hp<=2&&player.countCards('h',{name:'sha'})==0) return 1;
                                else if(_status.event.type&&_status.event.type!='phase'&&game.hasPlayer(function(current){
            return current.countCards('h')==1||current.countCards('e')==1;
        })) return 1;
                            }
                            return 0;
                        },
                    },
                },
            },
            "DIY_luoshen":{
                audio:"ext:天牢令/image/audio:2",
                locked:false,
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                frequent:true,
                content:function(){
        "step 0"
        player.addTempSkill('DIY_luoshen_add');
        event.cards=[];
        event.suits=[];
        "step 1"
        player.judge(function(card){
            var suit=get.suit(card);
            var list=event.suits;
            list.push(suit);
            if(list.contains('heart')&&list.contains('spade')&&list.contains('club')&&list.contains('diamond')) return 0;
            return 1;
        }).judge2=function(result){
            return result.bool?true:false;
        };
        "step 2"
        if(result.bool){
            player.gain(result.card,'gain2').gaintag.add('DIY_luoshen');
            if(get.color(result.card)=='red'&&player.hasSkill('DIY_qingguo')) player.turnOver();
            event.suits.push(result.suit);
            player.chooseBool('是否再次发动【洛神】？').set('frequentSkill','DIY_luoshen');
        }
        else{
            player.gain(result.card,'gain2').gaintag.add('DIY_luoshen');
            if(get.color(result.card)=='red'&&player.hasSkill('DIY_qingguo')) player.turnOver();
            event.finish();
        }
        "step 3"
        if(result.bool){
            event.goto(1);
        }
    },
                subSkill:{
                    add:{
                        mod:{
                            ignoredHandcard:function(card,player){
                    if(card.hasGaintag('DIY_luoshen')){
                        return true;
                    }
                },
                            cardDiscardable:function(card,player,name){
                    if(name=='phaseDiscard'&&card.hasGaintag('DIY_luoshen')){
                        return false;
                    }
                },
                        },
                        onremove:function(player){
                player.removeGaintag('DIY_luoshen');
            },
                        sub:true,
                    },
                },
            },
            "DIY_qingguo":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"turnOverAfter",
                },
                filter:function(event,player){
        if(event.name=='link') return event.player.isLinked();
        return true;
    },
                direct:true,
                content:function(){
        'step 0'
        player.chooseTarget('倾国：是否选择一名男性角色？',function(card,player,target){
            return target!=player&&target.hasSex('male')&&player.countCards('h')!=target.countCards('h');
        }).ai=function(target){
            var num=player.countCards('h')-target.countCards('h');
            return get.attitude(_status.event.player,target)*num;
        };
        'step 1'
        if(result.bool){
            event.target=result.targets[0];
            player.line(target,'thunder');
            player.logSkill('DIY_qingguo',event.target);
            player.chooseControl().set('prompt','倾国：请选择一项').set('choiceList',[
                '令'+get.translation(event.target)+'将手牌数调整至'+get.cnNumber(player.countCards('h'))+'张',
                '令你将手牌数调整至'+get.cnNumber(event.target.countCards('h'))+'张',
            ]).set('ai',function(){
                return 0;
            });
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.index==0){
            var num=player.countCards('h')-event.target.countCards('h');
            if(num>0) event.target.draw(num);
            else event.target.chooseToDiscard(-num,true,'h');
        }
        else{
            var num=player.countCards('h')-event.target.countCards('h');
            if(num<0) player.draw(-num);
            else player.chooseToDiscard(num,true,'h');
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "DIY_yilue":{
                mark:true,
                intro:{
                    mark:function(dialog,content,player){
            if(player!=game.me) return get.translation(player)+'观看牌堆中...';
            if(get.itemtype(_status.pileTop)!='card') return '牌堆顶无牌';
            var cards=[];
            var num=Math.min(player.countCards('h'),ui.cardPile.childElementCount);
            if(num==0) return '';
            for(var i=0;i<num;i++){
                var card=ui.cardPile.childNodes[i];
                if(card) cards.push(card);
                else break;
            }
            dialog.add(cards);
        },
                },
                mod:{
                    cardname:function(card,player,name){
            var hs=player.getCards('h');
            for(var j=0;j<hs.length;j++){
                if(j+1>ui.cardPile.childElementCount) break;
                if(get.type(ui.cardPile.childNodes[j])!='equip'){
                    var name=ui.cardPile.childNodes[j].name;
                    if(card==hs[j]) return name;
                }
            }
        },
                    cardnature:function(card,player){
            var hs=player.getCards('h');
            for(var j=0;j<hs.length;j++){
                if(j+1>ui.cardPile.childElementCount) break;
                if(get.type(ui.cardPile.childNodes[j])!='equip'){
                    var nature=ui.cardPile.childNodes[j].nature;
                    if(card==hs[j]) return nature;
                }
            }
        },
                },
            },
            "DIY_zhaoran":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function(event,player){
                    return player.countCards('h')>0;
                },
                check:function(event,player){
                    return true;
                },
                content:function(){
        player.showHandcards();
        player.addTempSkill('DIY_zhaoran_effect',{player:'phaseUseEnd'});
    },
                subSkill:{
                    effect:{
                        charlotte:true,
                        forced:true,
                        audio:"DIY_zhaoran",
                        trigger:{
                            player:"useCardAfter",
                        },
                        content:function(){
                            'step 0'
                            var evt=event.getParent('phaseUse');
                            var list=[],history=player.getHistory('useCard');
                            for(var i of history){
                                if(i.getParent('phaseUse')!=evt) continue;
                                var suit2=get.suit(i.card);
                                if(!lib.suit.contains(suit2)) continue;
                                list.add(suit2);
                            }
                            player.chooseToGuanxing(list.length);
                            'step 1'
                            var suit=get.suit(trigger.card);
                            var hs=player.getCards('h');
                            for(var j of hs){
                                if(get.suit(j)==suit) event.goto(3);
                            }
                            'step 2'
                            player.draw();
                        },
                        sub:true,
                    },
                },
            },
            "DIY_dili":{
                trigger:{
                    global:"gameDrawAfter",
                },
                forced:true,
                audio:"ext:天牢令/image/audio:2",
                group:"DIY_dili_equip",
                derivation:["DIY_baihongjian","DIY_zidianjian","DIY_bixiejian","DIY_liuxingjian","DIY_qingmingjian","DIY_bailijian"],
                content:function(){
        "step 0"
        var name=['DIY_baihongjian','DIY_liuxingjian','DIY_zidianjian','DIY_bixiejian','DIY_qingmingjian','DIY_bailijian'].randomGet();
        var card;
        if(!lib.inpile.contains(name)){
            card=game.createCard2(name,'spade',8);
            lib.inpile.push(name);
        }
        else card=get.cardPile(function(card){
            return card.name==name
        });
        player.chooseUseTarget(card,true,'nopopup');
                },
                subSkill:{
                    equip:{
                        audio:"DIY_dili",
                        forced:true,
                        trigger:{
                            player:"useCardToTargeted",
                        },
                        filter:function(event,player){
                            if(get.type(event.card)!='equip') return false;
                            if(get.subtype(event.card,false)!='equip1'||player!=event.target) return false;
                            var list=['DIY_baihongjian','DIY_liuxingjian','DIY_zidianjian','DIY_bixiejian','DIY_qingmingjian','DIY_bailijian'];
                            return !list.contains(event.card.name);
    },
                        content:function(){
                            'step 0'
                            var cards=trigger.cards.filterInD();
                            if(cards.length>0) game.cardsDiscard(cards);
                            'step 1'
                            var name=['DIY_baihongjian','DIY_liuxingjian','DIY_zidianjian','DIY_bixiejian','DIY_qingmingjian','DIY_bailijian'].randomGet();
                            var card;
                            if(!lib.inpile.contains(name)){
                                card=game.createCard2(name,'spade',8);
                                lib.inpile.push(name);
                            }
                            else card=get.cardPile(function(card){
                                return card.name==name
                            });
                            player.chooseUseTarget(card,true,'nopopup');
                            
                        },
                        sub:true,
                    },
                },
            },
            "DIY_baihongjian":{
                equipSkill:true,
                enable:["chooseToRespond","chooseToUse"],
                usable:1,
                viewAs:{
                    name:"sha",
                    isCard:true,
                },
                filterCard:function(){return false},
                viewAsFilter:function(player){
        return true;
    },
                selectCard:-1,
                mark:false,
                prompt:"视为使用或打出一张杀",
                ai:{
                    order:function(){
            var player=_status.event.player;
            if(!player.hasShan()&&!game.hasPlayer(function(current){
                return player.canUse('sha',current)&&current.hp==1&&get.effect(current,{name:'sha'},player,player)>0;
            })){
                return 0;
            }
            return 2.95;
        },
                    skillTagFilter:function(player,tag,arg){
            if(arg!='use') return false;
        },
                    respondSha:true,
                    yingbian:function(card,player,targets,viewer){
            if(get.attitude(viewer,player)<=0) return 0;
            var base=0,hit=false;
            if(get.cardtag(card,'yingbian_hit')){
                hit=true;
                if(targets.filter(function(target){
                    return target.hasShan()&&get.attitude(viewer,target)<0&&get.damageEffect(target,player,viewer,get.nature(card))>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_all')){
                if(game.hasPlayer(function(current){
                    return !targets.contains(current)&&lib.filter.targetEnabled2(card,player,current)&&get.effect(current,card,player,player)>0;
                })) base+=5;
            }
            if(get.cardtag(card,'yingbian_damage')){
                if(targets.filter(function(target){
                    return get.attitude(player,target)<0&&(hit||!target.mayHaveShan()||player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                    },true))&&!target.hasSkillTag('filterDamage',null,{
                        player:player,
                        card:card,
                        jiu:true,
                    })
                })) base+=5;
            }
            return base;
        },
                    canLink:function(player,target,card){
            if(!target.isLinked()&&!player.hasSkill('wutiesuolian_skill')) return false;
            if(target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                target:target,
                card:card,
            },true)) return false;
            if(player.hasSkill('jueqing')||player.hasSkill('gangzhi')||target.hasSkill('gangzhi')) return false;
            return true;
        },
                    basic:{
                        useful:[5,3,1],
                        value:[5,3,1],
                    },
                    result:{
                        target:function(player,target,card,isLink){
                var eff=function(){
                    if(!isLink&&player.hasSkill('jiu')){
                        if(!target.hasSkillTag('filterDamage',null,{
                            player:player,
                            card:card,
                            jiu:true,
                        })){
                            if(get.attitude(player,target)>0){
                                return -7;
                            }
                            else{
                                return -4;
                            }
                        }
                        return -0.5;
                    }
                    return -1.5;
                }();
                if(!isLink&&target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
                    target:target,
                    card:card,
                },true)) return eff/1.2;
                return eff;
            },
                    },
                    tag:{
                        respond:1,
                        respondSha:1,
                        damage:function(card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function(card){
                if(card.nature) return 1;
            },
                        fireDamage:function(card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function(card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function(card,nature){
                if(card.nature=='poison') return 1;
            },
                        respondShan:1,
                    },
                },
                sub:true,
            },
            "DIY_liuxingjian":{
                equipSkill:true,
                mod:{
                    targetInRange:function(card,player,target){
            if(card.name=='sha'&&!player.inRange(target)) return true;
        },
                },
                trigger:{
                    player:"useCardToPlayer",
                },
                forced:true,
                logTarget:"target",
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        if(event.card.DIY_liuxingjian) return false;
        if(player.countCards('h','sha')) return true;
        return false;
    },
                content:function(){
        var hs=player.getCards('h');
        cards=hs.filter(function(card){
            return hs.contains(card)&&get.name(card,player)=='sha'&&player.canUse({
                name:'sha',
                isCard:true,
                cards:[card],
            },trigger.target,false);
        });
        if(cards.length){
            var card=cards.randomRemove(1)[0];
            player.useCard(trigger.target,false,card).card.DIY_liuxingjian=true;
            event.redo();
        }
    },
            },
            "DIY_zidianjian":{
                equipSkill:true,
                trigger:{
                    source:"damageEnd",
                },
                direct:true,
                filter:function(event,player){
        return player.countCards('h');
    },
                logTarget:"player",
                content:function(){
        'step 0'
        player.chooseCardTarget({
            prompt:get.prompt2('DIY_zidianjian'),
            prompt2:'将一张牌当做【雷杀】对距离'+get.translation(trigger.player)+'一以内的角色使用。',
            position:'he',
            filterCard:function(card,player){
                return _status.event.player.getEquip('DIY_zidianjian')!=card;
            },
            filterTarget:function(card,player,target){
                return get.distance(target,trigger.player)<=1&&target!=player;
            },
            ai1:function(card){
                if(get.tag(card,'recover')&&!game.hasPlayer(function(current){
                    return get.attitude(current,player)>0&&!current.hasSkillTag('nogain');
                })) return 0;
                return 7-get.value(card);
            },
            ai2:function(target){
                var player=_status.event.player,att=get.attitude(player,target);
                return -att;
            },
        });
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            player.useCard({name:'sha',nature:'thunder'},target,[result.cards[0]],'DIY_zidianjian').animate=false;
        }
    },
            },
            "DIY_bixiejian":{
                equipSkill:true,
                trigger:{
                    target:"useCardToTargeted",
                },
                direct:true,
                filter:function(event,player){
        return event.card.name=='sha';
    },
                content:function(){
        'step 0'
        player.logSkill('DIY_bixiejian');
        'step 1'
        player.chooseToUse(function(card,player,event){
            if(get.name(card)!='sha') return false;
            return lib.filter.filterCard.apply(this,arguments);
        },'辟邪：对'+get.translation(trigger.player)+'使用一张【杀】令'+get.translation(trigger.card)+'对你无效，否则你不能响应此牌。').set('complexSelect',true).set('filterTarget',function(card,player,target){
            if(target!=_status.event.sourcex&&!ui.selected.targets.contains(_status.event.sourcex)) return false;
            return lib.filter.targetEnabled.apply(this,arguments);
        }).set('sourcex',trigger.player);
        'step 2'
        if(result.bool!=false){
            trigger.excluded.add(player);
        }
        else{
            trigger.directHit.add(player);
        }
    },
            },
            "DIY_qingmingjian":{
                equipSkill:true,
                trigger:{
                    player:"useCardToPlayered",
                },
                logTarget:"target",
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        return true;
    },
                content:function(){
        'step 0'
        var str='弃置一张牌';
        if(player.hp>0) str+='，或点「取消」失去一点体力并摸一张牌';
        str+='，然后令'+get.translation(trigger.card)+'不可响应';
        var next=player.chooseToDiscard(str,'he',function(card){
            return _status.event.player.getEquip('DIY_qingmingjian')!=card;
        }).set('ai',function(card){
            return 7-get.value(card);
        });
        if(player.hp<=0) next.set('forced',true);
        'step 1'
        if(!result.bool){
            player.draw();
            player.loseHp();
        }
        'srep 2'
        trigger.directHit.addArray(game.filterPlayer(function(current){
            return current!=player;
        }));
    },
            },
            "DIY_bailijian":{
                equipSkill:true,
                trigger:{
                    global:"useCardAfter",
                },
                usable:1,
                filter:function(event,player){
        return get.tag(event.card,'damage')>0&&!event.player.getHistory('sourceDamage',function(evt){
            return evt.card==event.card;
        }).length&&event.cards.filterInD().length>0;
    },
                content:function(){
        player.gain(trigger.cards.filterInD(),'gain2');
    },
            },
            "DIY_quyu":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                direct:true,
                filter:function(event,player){
                    return !player.hasSkill('DIY_quyu_phase');
                },
                content:function(){
        'step 0'
        player.chooseButton(['驱御：请选择要装备的宝剑',[lib.skill.DIY_dili.derivation.map(function(i){
            return ['','',i];
        }),'vcard']]).set('filterButton',function(button){
            if(player.getEquip(1)) return button.link[2]!=player.getEquip(1).name;
            return true;
        }).set('ai',function(button){
            return Math.random();
        });
        'step 1'
        if(result.bool){
            var card=game.createCard(result.links[0][2],'spade',8);
            player.$gain2(card);
            player.equip(card);
            player.logSkill('DIY_quyu');
            player.addTempSkill('DIY_quyu_phase');
            game.delay();
        }
    },
                group:"DIY_quyu_use",
                ai:{
                    order:6,
                    result:{
                        player:1,
                    },
                },
                subSkill:{
                    use:{
                        trigger:{
                            player:"TLAoLogSkillAfter",
                        },
                        direct:true,
                        filter:function(event,player){
                    var skill = event.skill;
                    var info = get.info(skill);
                    if(!info)return false;
                    if(!info.equipSkill)return false;
                    return true;
                        },
                        content:function(){
        'step 0'
        player.chooseButton(['驱御：请选择要装备的宝剑',[lib.skill.DIY_dili.derivation.map(function(i){
            return ['','',i];
        }),'vcard']]).set('filterButton',function(button){
            if(player.getEquip(1)) return button.link[2]!=player.getEquip(1).name;
            return true;
        }).set('ai',function(button){
            if(trigger.skill=='DIY_bixiejian'&&button.link[2]=='DIY_baihongjian') return 1;
            if(trigger.skill=='DIY_baihongjian'&&button.link[2]=='DIY_liuxingjian') return 1;
            if(trigger.skill=='DIY_liuxingjian'&&button.link[2]=='DIY_qingmingjian') return 1;
            if(trigger.skill=='DIY_qingmingjian'&&button.link[2]=='DIY_zidianjian') return 1;
            return Math.random();
        });
        'step 1'
        if(result.bool){
            var card=game.createCard(result.links[0][2],'spade',8);
            player.$gain2(card);
            player.equip(card);
            player.logSkill('DIY_quyu');
            game.delay();
        }
            },
                        sub:true,
                    },
                    phase:{
                        sub:true,
                    },
                },
            },
            "DIY_qingxian":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                direct:true,
                filter:function(event,player){
                    return !player.hasSkill('DIY_qingxian_phase');
                },
                content:function(){
        'step 0'
        var list=["DIY_qingxian_ji","DIY_qingxian_lie","DIY_qingxian_rou","DIY_qingxian_he","cancel2"];
        if(player.storage.DIY_qingxian) list.remove(player.storage.DIY_qingxian);
        player.chooseControl(list).set('prompt','清弦：请选择要切换的韵谱').set('ai',function(button){
            List=["DIY_qingxian_ji","DIY_qingxian_lie","DIY_qingxian_rou","DIY_qingxian_he"];
            if(player.storage.DIY_qingxian) List.remove(player.storage.DIY_qingxian);
            return List.randomGet();
        });
        'step 1'
        if(result.control!='cancel2'){
            if(player.storage.DIY_qingxian) player.removeSkill(player.storage.DIY_qingxian);
            game.delay();
            player.addSkill(result.control);
            player.storage.DIY_qingxian=result.control;
            player.logSkill('DIY_qingxian');
            game.log(player,"切换了<span style='font-family: yuanli'>清弦韵谱</span>");
            player.addTempSkill('DIY_qingxian_phase');
            player.addTempSkill('DIY_qingxian_used');
        }
    },
                derivation:["DIY_qingxian_ji","DIY_qingxian_lie","DIY_qingxian_rou","DIY_qingxian_he"],
                group:"DIY_qingxian_skill",
                subSkill:{
                    skill:{
                        audio:"DIY_qingxian",
                        trigger:{
                            player:["damageEnd","recoverEnd"],
                            global:"gameDrawAfter",
                        },
                        direct:true,
                        content:function(){
                            'step 0'
                            var list=["DIY_qingxian_ji","DIY_qingxian_lie","DIY_qingxian_rou","DIY_qingxian_he","cancel2"];
                            if(player.storage.DIY_qingxian) list.remove(player.storage.DIY_qingxian);
                            player.chooseControl(list).set('prompt','清弦：请选择要切换的韵谱').set('ai',function(button){
                                List=["DIY_qingxian_ji","DIY_qingxian_lie","DIY_qingxian_rou","DIY_qingxian_he"];
                                if(player.storage.DIY_qingxian) List.remove(player.storage.DIY_qingxian);
                                return List.randomGet();
                            });
                            'step 1'
                            if(result.control!='cancel2'){
                                if(player.storage.DIY_qingxian) player.removeSkill(player.storage.DIY_qingxian);
                                game.delay();
                                player.addSkill(result.control);
                                player.storage.DIY_qingxian=result.control;
                                player.logSkill('DIY_qingxian');
                                game.log(player,"切换了<span style='font-family: yuanli'>清弦韵谱</span>");
                                player.addTempSkill('DIY_qingxian_phase');
                                game.delay();
                            }
                        },
                        sub:true,
                    },
                    phase:{
                        trigger:{
                            global:"phaseEnd",
                        },
                        direct:true,
                        content:function(){
                            player.logSkill('DIY_qingxian');
                            player.useSkill(player.storage.DIY_qingxian);
                        },
                        sub:true,
                    },
                    used:{
                        sub:true,
                    },
                },
            },
            "DIY_qingxian_ji":{
                audio:"ext:天牢令/image/audio:1",
                mark:true,
                nopop:true,
                intro:{
                    content:"info",
                },
                trigger:{
                    player:"damageEnd",
                },
                filter:function(event,player){
                return event.source&&event.source.isIn()&&event.source!=player;
            },
                direct:true,
                content:function(){
                'step 0'
                player.chooseTarget(get.prompt2('DIY_qingxian_ji'),function(card,player,target){
                    return target!=player;
                }).set('ai',function(target){
                    return -get.attitude(player,target)/(1+target.hp);
                });
                'step 1'
                if(result.bool){
                    var target=result.targets[0];
                    player.logSkill('DIY_qingxian_ji',target);
                    target.loseHp();
                    var card=get.cardPile(function(card){
                        return get.type(card)=='equip'&&target.canUse(card,target);
                    });
                    if(card){
                        target.chooseUseTarget(card,true,'nothrow','nopopup',true);
                    }
                }
            },
                ai:{
                    "maixie_defend":true,
                },
            },
            "DIY_qingxian_lie":{
                audio:"ext:天牢令/image/audio:1",
                mark:true,
                nopop:true,
                intro:{
                    content:"info",
                },
                trigger:{
                    player:"recoverEnd",
                },
                direct:true,
                content:function(){
                'step 0'
                player.chooseTarget(get.prompt2('DIY_qingxian_lie'),function(card,player,target){
                    return target!=player;
                }).set('ai',function(target){
                    return -get.attitude(player,target)/(1+target.hp);
                });
                'step 1'
                if(result.bool){
                    var target=result.targets[0];
                    player.logSkill('DIY_qingxian_lie',target);
                    target.loseHp();
                    var card=get.cardPile(function(card){
                        return get.type(card)=='equip'&&target.canUse(card,target);
                    });
                    if(card){
                        target.chooseUseTarget(card,true,'nothrow','nopopup',true);
                    }
                }
            },
                sub:true,
            },
            "DIY_qingxian_rou":{
                audio:"ext:天牢令/image/audio:1",
                mark:true,
                nopop:true,
                intro:{
                    content:"info",
                },
                trigger:{
                    player:"damageEnd",
                },
                filter:function(event,player){
                return event.source&&event.source.isIn()&&event.source!=player;
            },
                direct:true,
                content:function(){
                'step 0'
                player.chooseTarget(get.prompt2('DIY_qingxian_rou'),function(card,player,target){
                    return target!=player;
                }).set('ai',function(target){
                    var att=get.attitude(_status.event.player,target);
                    if(target.isHealthy()&&target.countCards('he')){
                        return -att;
                    }
                    else{
                        return 10*att/(1+target.hp);
                    }
                });
                'step 1'
                if(result.bool){
                    var target=result.targets[0];
                    player.logSkill('DIY_qingxian_rou',target);
                    target.recover();
                    if(target.countCards('he',{type:'equip'})){
                        target.chooseToDiscard('he',true,'弃置一张装备牌',function(card){
                            return get.type(card)=='equip';
                        });
                    }
                }
            },
                ai:{
                    "maixie_defend":true,
                },
            },
            "DIY_qingxian_he":{
                audio:"ext:天牢令/image/audio:1",
                mark:true,
                nopop:true,
                intro:{
                    content:"info",
                },
                trigger:{
                    player:"recoverEnd",
                },
                direct:true,
                content:function(){
                'step 0'
                player.chooseTarget(get.prompt2('DIY_qingxian_he'),function(card,player,target){
                    return target!=player;
                }).set('ai',function(target){
                    var att=get.attitude(_status.event.player,target);
                    if(target.isHealthy()&&target.countCards('he')){
                        return -att;
                    }
                    else{
                        return 10*att/(1+target.hp);
                    }
                });
                'step 1'
                if(result.bool){
                    var target=result.targets[0];
                    player.logSkill('DIY_qingxian_he',target);
                    target.recover();
                    if(target.countCards('he',{type:'equip'})){
                        target.chooseToDiscard('he',true,'弃置一张装备牌',function(card){
                            return get.type(card)=='equip';
                        });
                    }
                }
            },
            },
            "DIY_xiangjian":{
                audio:"ext:天牢令/image/audio:2",
                forced:true,
                direct:true,
                trigger:{
                    player:"phaseBefore",
                },
                content:function(){
                    'step 0'
                    game.countPlayer(function(current){
                        if(current.hasSkill("DIY_xiangjian_effect")){
                            current.removeSkill('DIY_xiangjian_effect');
                        }
                    });
                    var list=['basic','trick','equip'];
                    if(player.hasSkill('DIY_xiangjian_type')) list=player.storage.DIY_xiangjian_type;
                    if(list.length>1){
                        player.chooseControl(list,true).set('ai',function(){
                            return list[1];
                        }).set('prompt',get.prompt('DIY_xiangjian')).set('prompt2','声明一种牌的类型，本回合你的手牌均视为此类型');
                    }
                    else event.goto(2);
                    'step 1'
                    if(result.control&&result.control!='cancel2'){
                        player.logSkill('DIY_xiangjian');
                        player.storage.DIY_xiangjian_type=result.control;
                        player.addTempSkill('DIY_xiangjian_type');
                        var str=get.translation(result.control)+'牌';
                        game.log(player,'声明了','#y'+str);
                        player.popup(str,'thunder');
                    }
                    'step 2'
                    player.chooseTarget(true,'选择一名角色，其无法使用基本牌指定目标且无法成为基本牌的目标直至你的下回合开始时').set('ai',function(target){
                        var att=get.attitude(_status.event.player,target);
                        if(target==_status.event.player) return 999;
                        return att;
                    });
                    'step 3'
                    if(result.bool){
                        player.line(result.targets,'green');
                        result.targets[0].addSkill('DIY_xiangjian_effect');
                    }
                },
                subSkill:{
                    type:{
                        onremove:true,
                        mark:true,
                        intro:{
                            content:"本回合你的牌均视为$牌",
                        },
                        direct:true,
                        trigger:{
                            player:"useCard2",
                        },
                        content:function(){
                            player.logSkill('DIY_xiangjian_audio');
                        },
                        mod:{
                            type:function(card,player,storgae){
                               return player.storage.DIY_xiangjian_type;
                           },
                        },
                        sub:true,
                    },
                    effect:{
                        mod:{
                            targetEnabled:function(card,player,target){
                               if(get.type(card,"trick",target)=='basic') return false;
                           },
                            playerEnabled:function(card,player,target){
                               if(player.hasSkill('DIY_xiangjian_type')){
                                   if(player.storage.DIY_xiangjian_type=='basic') return false;
                                   else return true;
                               }
                               if(get.type(card,"trick",target)=='basic') return false;
                           },
                        },
                        sub:true,
                    },
                },
            },
            "DIY_xiangjian_audio":{
                audio:"ext:天牢令/image/audio:1",
            },
            "DIY_yicheng":{
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                enable:"phaseUse",
                filter:function(event,player){
                    return game.hasPlayer(function(target){
            return target.countCards('he')>0&&!target.hasSkill('DIY_yicheng_li');
        });
                },
                filterTarget:function(card,player,target){
            return target.countCards('he')>0&&!target.hasSkill('DIY_yicheng_li');
        },
                content:function(){
                    'step 0'
                    player.choosePlayerCard(target,'he',1,get.prompt('DIY_yicheng',target)).set('forceAuto',true).ai=get.buttonValue;
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_yicheng',target);
                        target.addToExpansion(result.cards,'giveAuto',target).gaintag.add('DIY_yicheng_li');
                        target.addSkill('DIY_yicheng_li');
                    }
                },
                group:"DIY_yicheng_effect",
                ai:{
                    order:12,
                    result:{
                        target:function(player,target){
                            return get.attitude(_status.event.player,target);
                        },
                    },
                },
                subSkill:{
                    li:{
                        audio:"ext:天牢令/image/audio:2",
                        marktext:"篱",
                        intro:{
                            name:"篱",
                            markcount:"expansion",
                            mark:function(dialog,storage,player){
                                var cards=player.getExpansions('DIY_yicheng_li');
                                if(player.isUnderControl(true)) dialog.addAuto(cards);
                                else return '共有'+get.cnNumber(cards.length)+'张牌';
                            },
                            sub:true,
                        },
                        sub:true,
                    },
                    effect:{
                        audio:"ext:天牢令/image/audio:2",
                        trigger:{
                            global:"useCardToTargeted",
                        },
                        direct:true,
                        filter:function(event,player){
                            return get.type(event.card)!='equip'&&event.target.hasSkill('DIY_yicheng_li');
                        },
                        content:function(){
                            'step 0'
                            var list=get.typeCard("equip2");
                            list.remove('feichu_equip2');
                            player.chooseButton([get.prompt('DIY_yicheng'),'令'+get.translation(trigger.target)+'将“篱”弃置并视为使用一张你指定的防具牌',[list,'vcard']]).set('ai',function(button){
                                if(get.attitude(player,trigger.target)>=0){
                                    if(trigger.card.name=='sha'){
                                        if(button.link[2]=='qimengbagua') return 1000;
                                        if(get.color(trigger.card)=='black'&&button.link[2]=='renwang'){
                                            return 999;
                                        }
                                        else{
                                            if(get.color(trigger.card)=='red'&&trigger.card.nature!='fire'&&button.link[2]=='tengjia'){
                                                return 998;
                                            }
                                            else{
                                                if(button.link[2]=='bagua') return 997;
                                            }
                                        }
                                    }
                                    else{
                                        if(trigger.card.name=='nanman'||trigger.card.name=='wanjian'){
                                            if(button.link[2]=='tengjia') return 1000;
                                            else if(button.link[2]='heiguangkai') return 999;
                                        }
                                        return -1;
                                    }
                                }
                                else{
                                    if(trigger.card.name=='sha'&&trigger.card.nature=='fire'){
                                        if(button.link[2]=='tengjia') return 999;
                                    }
                                    else{
                                        if(trigger.card.name=='sha'&&button.link[2]=='serafuku') return 998;
                                        if(button.link[2]=='yingfengyi') return 997;
                                    }
                                }
                                return -1;
                            });
                            'step 1'
                            if(result.bool){
                                player.logSkill('DIY_yicheng_effect',trigger.target);
                                var cards=trigger.target.getExpansions('DIY_yicheng_li');
                                var card=game.createCard(result.links[0][2],cards[0].suit,cards[0].number);
                                trigger.target.loseToDiscardpile(cards);
                                trigger.target.removeSkill('DIY_yicheng_li');
                                trigger.target.$gain2(card);
                                trigger.target.equip(card);
                                trigger.target.storage.DIY_yicheng_li=card;
                                trigger.target.storage.DIY_yicheng_discard=trigger.card;
                                trigger.target.addSkill('DIY_yicheng_discard');
                                game.delay();
                            }
                        },
                        sub:true,
                    },
                    discard:{
                        trigger:{
                            global:"useCardAfter",
                        },
                        direct:true,
                        filter:function(event,player){
                            return event.card&&event.card==player.storage.DIY_yicheng_discard;
                        },
                        content:function(){
                            if(player.storage.DIY_yicheng_li){
                                if(player.getCards('he').contains(player.storage.DIY_yicheng_li)){
                                    game.log(player,'的',player.storage.DIY_yicheng_li,'已销毁');
                                    game.cardsGotoSpecial(player.storage.DIY_yicheng_li);
                                }
                            }
                        },
                        sub:true,
                    },
                },
            },
            "DIY_weijiang":{
                derivation:"DIY_gongjijuli",
                init:function(player){
        player.storage.DIY_weijiang1=2;
        player.storage.DIY_weijiang2=4;
    },
                mod:{
                    targetInRange:function(card,player,target,storage){
            if(card.name=='sha'){
                if(get.distance(player,target)==player.storage.DIY_weijiang1||get.distance(player,target)==player.storage.DIY_weijiang2) return true;
                else return false;
            }
        },
                },
                shaRelated:true,
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardToPlayered",
                },
                direct:true,
                forced:true,
                logTarget:"target",
                filter:function(event,player){
        if(event.card.name!='sha') return false;
        if(event.card.DIY_weijiang) return false;
        return event.targets.length==1;
    },
                content:function(){
        'step 0'
        var num=game.countPlayer(function(current){
            return !trigger.targets.contains(current)&&(get.distance(player,current)==player.storage.DIY_weijiang1||get.distance(player,current)==player.storage.DIY_weijiang2)&&get.distance(player,current)==get.distance(player,trigger.targets[0]);
        });
        if(num==0) event.goto(3);
        'step 1'
        player.chooseTarget(get.prompt('DIY_weijiang'),'为'+get.translation(trigger.card)+'增加一个目标',true,function(card,player,target){
            return !_status.event.sourcex.contains(target)&&(get.distance(player,target)==player.storage.DIY_weijiang1||get.distance(player,target)==player.storage.DIY_weijiang2)&&get.distance(player,target)==get.distance(player,_status.event.sourcex[0]);
        }).set('sourcex',trigger.targets).set('ai',function(target){
            var player=_status.event.player;
            return get.effect(target,_status.event.card,player,player);
        }).set('card',trigger.card).setHiddenSkill(event.name);
        'step 2'
        if(result.bool){
            if(!event.isMine()&&!event.isOnline()) game.delayx();
            player.logSkill('DIY_weijiang',result.targets[0]);
            trigger.targets.push(result.targets[0]);
            event.finish();
        }
        'step 3'
        player.logSkill('DIY_weijiang',trigger.targets);
        player.addTempSkill('DIY_weijiang_2','phaseUseAfter');
        player.storage.DIY_weijiang_2=trigger.card;
    },
                subSkill:{
                    "2":{
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        charlotte:true,
                        popup:false,
                        lastDo:true,
                        filter:function(event,player){
                            if(!event.targets.length) return false;
                            return event.card==player.storage.DIY_weijiang_2;
                        },
                        content:function(){
                            player.removeSkill('DIY_weijiang_2');
                            var card=game.createCard(trigger.card.name,trigger.card.suit,trigger.card.number,trigger.card.nature);
                            player.useCard(card,(trigger._targets||trigger.targets).slice(0)).card.DIY_weijiang=true;
                        },
                        onremove:function(player){
                            delete player.storage.DIY_weijiang_2;
                        },
                        sub:true,
                    },
                },
            },
            "DIY_gongjijuli":{
				nobracket:true,
            },
            "DIY_qili":{
                audio:"ext:天牢令/image/audio:2",
                init:function(player){
        player.storage.DIY_qili1=0;
        player.storage.DIY_qili2=0;
    },
                mod:{
                    globalFrom:function(from,to,distance){
            return distance+from.storage.DIY_qili1-from.storage.DIY_qili2;
        },
                    globalTo:function(from,to,distance){
            return distance+to.storage.DIY_qili1-to.storage.DIY_qili2;
        },
                },
                mark:true,
                intro:{
                    markcount:function(storage,player){
            return player.getHistory('useCard').length+player.getHistory('respond').length;
        },
                    content:function(storage,player){
            str='';
            if((player.storage.DIY_weijiang1&&player.storage.DIY_weijiang2)||player.storage.DIY_weijiang1==0||player.storage.DIY_weijiang2==0){
                str+='攻击距离：'+get.translation(player.storage.DIY_weijiang1)+'/'+get.translation(player.storage.DIY_weijiang2)+'<br>';
            }
            var num=player.storage.DIY_qili1-player.storage.DIY_qili2;
            if(num>0){
                str+='你参与计算的距离+'+get.translation(num)+'';
            }
            else{
                str+='你参与计算的距离-'+get.translation(-num)+'';
            }
            return str;
        },
                },
                trigger:{
                    player:["useCard","respond"],
                },
                direct:true,
                filter:function(event,player){
                    return player.getHistory('useCard').length+player.getHistory('respond').length==player.storage.DIY_weijiang1||player.getHistory('useCard').length+player.getHistory('respond').length==player.storage.DIY_weijiang2;
                },
                content:function(){
                    'step 0'
                    var list=['摸一张牌并令〖威弜〗中的数字-1','弃置一张牌并令〖威弜〗中的数字+1','摸一张牌并令你参与计算的距离+1','弃置一张牌并令你参与计算的距离-1'];
                    if(!player.countCards('he')){
                        list.remove('弃置一张牌并令〖威弜〗中的数字+1');
                        list.remove('弃置一张牌并令你参与计算的距离-1');
                    }
                    player.chooseControl('cancel2').set('choiceList',list).set('ai',function(){
                         return list.randomGet();
                    }).set('prompt',get.prompt2('DIY_qili'));
                    'step 1'
                    if(result.control!='cancel2'){
                        switch(result.index){
                            case 0:
                                player.draw();
                                if(player.storage.DIY_weijiang1&&player.storage.DIY_weijiang1>0){
                                    player.storage.DIY_weijiang1--;
                                }
                                if(player.storage.DIY_weijiang2&&player.storage.DIY_weijiang2>0){
                                    player.storage.DIY_weijiang2--;
                                }
                                break;
                            case 1:
                                player.chooseToDiscard('he',true);
                                if(player.storage.DIY_weijiang1||player.storage.DIY_weijiang1==0){
                                    player.storage.DIY_weijiang1++;
                                }
                                if(player.storage.DIY_weijiang2||player.storage.DIY_weijiang2==0){
                                    player.storage.DIY_weijiang2++;
                                }
                                break;
                            case 2:
                                player.draw();
                                player.storage.DIY_qili1++;
                                break;
                            case 3:
                                player.chooseToDiscard('he',true);
                                player.storage.DIY_qili2++;
                                break;
                        }
                        player.logSkill('DIY_qili');
                    }
                },
            },
            "DIY_jinglve":{
                audio:"ext:天牢令/image/audio:2",
                direct:true,
                enable:"phaseUse",
                filter:function(event,player){
                    return game.hasPlayer(function(current){
                        return current.countCards('h')>0&&!current.hasSkill('DIY_jinglve_choose');
                    });
                },
                line:false,
                init:function(player){
                    player.storage.DIY_jinglve=[];
                },
                filterTarget:function(card,player,target){
                    if(target.countCards('h')==0||target.hasSkill('DIY_jinglve_choose')) return false;
                    var hs=target.getCards('h');
                    for(var i=0;i<hs.length;i++){
                      if(!player.getStorage('DIY_jinglve').contains(hs[i])) return true;
                    }
                    return false;
                },
                content:function(){
                    'step 0'
                    player.chooseButton(['选择一张牌作为「死士」',target.getCards('h')],true).set('filterButton',function(button){
            if(player.getStorage('DIY_jinglve').contains(button.link)) return false;
            return true;
        }).set('ai',function(button){
                        var target=_status.event.getParent().target;
                        var card=button.link;
                        var val=target.getUseValue(card);
                        if(val>0) return val;
                        return get.value(card);
                    });
                    'step 1'
                    if(result.bool){
                        var card=result.links[0];
                        target.addTempSkill('DIY_jinglve_choose','phaseUseAfter');
                        player.storage.DIY_jinglve.add(result.links[0]);
                        player.markSkill('DIY_jinglve');
                    }
                },
                mark:true,
                intro:{
                    name:"死士",
                    mark:function(dialog,content,player){
            if(player!=game.me) return '';
            storage=player.storage.DIY_jinglve;
            if(!storage.length) return '';
            dialog.addText(get.cnNumber(player.getStorage('DIY_jinglve').length));
            dialog.addAuto(player.storage.DIY_jinglve);
        },
                    markcount:function(dialog,storage,player){
            if(player!=game.me) return '';
            storage=player.storage.DIY_jinglve;
            if(!storage.length) return '';
            var num=get.translation(storage.length);
            return num;
        },
                },
                group:"DIY_jinglve_effect",
                subSkill:{
                    effect:{
                        audio:"DIY_jinglve",
                        trigger:{
                            target:"useCardToTargeted",
                        },
                        prompt:function(event,player){
                            return '是否取消'+get.translation(event.cards)+'的所有目标并获得此牌';
                        },
                        filter:function(event,player){
                            if(event.player==player) return false;
                            var cards=event.cards;
                            for(i=0;i<cards.length;i++){
                                if(player.getStorage('DIY_jinglve').contains(cards[i])) return true;
                            }
                            return false;
                        },
                        content:function(){
                            'step 0'
                            trigger.all_excluded=true;
                            trigger.targets.length=0;
                            'step 1'
                            player.gain(trigger.cards,'gain2').gaintag.add('死士');
                            'step 2'
                            trigger.target.chooseUseTarget(trigger.cards);
                            'step 3'
                            player.removeGaintag('死士');
                        },
                        sub:true,
                    },
                    choose:{
                        sub:true,
                    },
                },
                ai:{
                    order:12,
                    result:{
                        target:function(player,target){
                            return get.attitude(_status.event.player,target);
                        },
                    },
                },
            },
            "DIY_chebian":{
                mark:true,
                intro:{
                    content:"limited",
                },
                init:function(player,skill){
                    player.storage[skill]=false;
                },
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                limited:true,
                skillAnimation:true,
                animationColor:"thunder",
                filter:function(event,player){
                    return player.storage.DIY_jinglve.length;
                },
                content:function(){
                    'step 0'
                    player.awakenSkill('DIY_chebian');
                    player.changeGroup("jin");
                    player.node.avatar.setBackgroundImage('extension/天牢令/JX_simashi_jin.jpg');
                    player.gainMaxHp();
                    event.cards=player.getStorage('DIY_jinglve');
                    player.showCards(event.cards);
                    'step 1'
                    player.recover(player.maxHp-player.hp);
                    player.gain(event.cards,'gain2').gaintag.add('死士');
                    for(var i=0;i<event.cards.length;i++){
                        player.chooseUseTarget(event.cards[i],'nodistance');
                    }
                    'step 2'
                    player.storage.DIY_jinglve=[];
                    player.removeGaintag('死士');
                },
            },
            "DIY_longyin":{
                audio:"ext:天牢令/image/audio:2",
                shaRelated:true,
                trigger:{
                    global:"useCard",
                },
                direct:true,
                filter:function(event,player){
                    return event.card.name=='sha'&&player.countCards('he')>0&&event.player.isPhaseUsing();
                },
                content:function(){
                    'step 0'
                    game.delayx();
                    var go=false;
                    if(get.attitude(player,trigger.player)>0){
                        go=true;
                        if(trigger.addCount===false||!trigger.player.isPhaseUsing()) go=false;
                    }
                    var next=player.chooseToDiscard(get.prompt('DIY_longyin'),'弃置一张牌，令'+get.translation(trigger.player)+'本次使用的【杀】不计入使用次数','he');
                    next.logSkill=['DIY_longyin',trigger.player];
                    next.set('ai',function(card){
                        if(_status.event.go){
                            if(get.color(card)=='red') return 9-get.value(card);
                            return 6-get.value(card);
                        }
                        return 0;
                    });
                    next.set('go',go);
                    'step 1'
                    if(result.bool){
                        if(trigger.addCount!==false){
                            trigger.addCount=false;
                            trigger.player.getStat().card.sha--;
                        }
                        if(get.color(trigger.card)=='red'||get.color(result.cards[0])=='red'){
                            if(player!=trigger.player){
                                player.gain(trigger.cards,'gain2');
                                trigger.player.gain(result.cards[0],'gain2');
                            }
                            else{
                                event.cards=[trigger.cards[0],result.cards[0]];
                                player.chooseCardButton(event.cards,'龙吟：请选择要获得的牌',true);
                            }
                        }
                        else{
                            event.finish();
                        }
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    if(result.bool){
                        player.gain(result.links[0],'gain2');
                    }
                },
                ai:{
                    expose:0.2,
                },
            },
            "DIY_guanwei":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseDiscardAfter",
                },
                filter:function (event,player){
                    if(!player.countCards('he')) return false;
                    for(var i=0;i<game.players.length;i++){
                        var history=game.players[i].getHistory('useCard').concat(game.players[i].getHistory('respond'));
                        if(history.length<2) return false;
                        var num=0;
                        var color=false;
                        for(var i=0;i<history.length;i++){
                            var color2=get.color(history[i].card);
                            if(!color2) continue;
                            if(color&&color!=color2) return false;
                            color=color2;
                            num++;
                        }
                        if(num>1) return true;
                    }
                    return false;
                },
                direct:true,
                content:function(){
            'step 0'
        player.chooseCardTarget({
            filterCard:true,
            filterTarget:function(card,player,target){
                var history=target.getHistory('useCard').concat(target.getHistory('respond'));
                var num=0;
                var color=false;
                for(var i=0;i<history.length;i++){
                    var color2=get.color(history[i].card);
                    if(!color2) continue;
                    if(color&&color!=color2) return false;
                    color=color2;
                    num++;
                }
                if(num>1) return true;
            },
            position:'he',
            prompt:get.prompt2('DIY_guanwei'),
            ai1:function(card){
                return 7-get.value(card);
            },
            ai2:function(target){
                return get.attitude(player,target);
            },
        });
            'step 1'
        if(result.bool){
            player.discard(result.cards);
            event.target=result.targets[0];
            player.logSkill('DIY_guanwei',result.targets[0]);
            player.line(result.targets[0],'green');
            result.targets[0].draw(2);
        }
        else{
            event.finish();
        }
            'step 2'
        var next=event.target.phaseUse();
        event.next.remove(next);
        trigger.getParent('phase').next.push(next);
                },
                group:'DIY_guanwei_ai',
                subSkill:{
                    ai:{
                        mod:{
                            aiOrder:function(player,card,num){
                                if(typeof card=='object'&&player==_status.currentPhase){
                                    var evt=lib.skill.DIY_guanwei_ai.getLastUsed(player);
                                    if(evt&&evt.card&&get.color(evt.card)!='none'&&get.color(evt.card)==get.color(card)){
                                        return num+10;
                                    }
                                }
                            },
                        },
                        getLastUsed:function(player,event){
                            var history=player.getHistory('useCard');
                            var index;
                            if(event) index=history.indexOf(event)-1;
                            else index=history.length-2;
                            if(index>=0) return history[index];
                            return false;
                        },
                        sub:true,
                    },
                },
            },
            "DIY_gongqing":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["damageBegin3","damageBegin4"],
                },
                forced:true,
                filter:function (event,player,name){
                    if(!event.source) return false;
                    if(name=='damageBegin3') return event.source.countCards('h')<player.countCards('h');
                    return event.num>0&&event.source.countCards('h')>player.countCards('h');
                },
                preHidden:true,
                content:function (){
                    trigger.num=event.triggername=='damageBegin4'?trigger.num-1:trigger.num+1;
                },
                ai:{
                    filterDamage:true,
                    skillTagFilter:function(player,tag,arg){
                        if(arg&&arg.player){
                            if(arg.player.hasSkillTag('jueqing',false,player)) return false;
                            if(arg.player.countCards('h')>player.countCards('h')) return true;
                        }
                        return false;
                    },
                },
            },
            "DIY_jianxiong":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"damage",
                },
                direct:true,
                init:function(player){
		if(!lib.config.compatiblemode) lib.config.compatiblemode=true;
        player.storage.DIY_jianxiong=[];
        player.storage.DIY_jianxiong_characters=[];
        player.storage.DIY_jianxiong_ai=[];
                },
                intro:{
                    content:"已记录技能：$",
                },
                content:function(){
                    'step 0'
                    player.chooseTarget(get.prompt2('DIY_jianxiong'),lib.filter.notMe,function(card,player,target){
                        var skills=target.getSkills();
                        var list=[];
                        for(var i=0;i<skills.length;i++){
                            var label=get.info(skills[i]);
                            var name=lib.translate[skills[i]];
                            var info=lib.translate[skills[i]+'_info'];
                            if(!info) continue;
                            if(!name) continue;
                            if(name=='酒') continue;
                            if(label.equipSkill) continue;
                            if(label.enable) continue;
                            if(!label.content) continue;
                            if(player.getStorage('DIY_jianxiong').contains(skills[i])) continue;
                            list.push(skills[i]);
                        }
                        return list.length;
                    }).set('ai',function(target){
                        var skills=target.getSkills();
                        var list=[];
                        for(var i=0;i<skills.length;i++){
                            var info = get.info(skills[i]);
                            if(info.enable) continue;
                            if(!info.content) continue;
                            if(player.getStorage('DIY_jianxiong').contains(skills[i])) continue;
                        }
                        if(!list.length){
                            if(!player.storage.DIY_jianxiong_characters.contains(target)){
                                return Math.random();
                            }
                            else{
                                return -1;
                            }
                        }
                        if(!player.storage.DIY_jianxiong_characters.contains(target)) return 0.5+Math.random();
                        return 1+Math.random();
                    });
                    'step 1'
                    if(result.bool){
                        event.target=result.targets[0];
                        player.logSkill('DIY_jianxiong',event.target);
                        player.storage.DIY_jianxiong_characters.push(event.target);
                        var skills=event.target.getSkills();
                        var list=[];
                        for(var i=0;i<skills.length;i++){
                            var label=get.info(skills[i]);
                            var name=lib.translate[skills[i]];
                            var info=lib.translate[skills[i]+'_info'];
                            if(!info) continue;
                            if(!name) continue;
                            if(name=='酒') continue;
                            if(label.equipSkill) continue;
                            if(label.enable) continue;
                            if(!label.content) continue;
                            if(player.getStorage('DIY_jianxiong').contains(skills[i])) continue;
                            list.push(skills[i]);
                        }
                        if(list.length){
                            player.chooseControl(list).set('dialog',[get.prompt('DIY_jianxiong'),'<div class="text center">请选择要记录的技能</div>']).set('ai',function(){
                                return 0;
                            });
                        }
                        else{
                            event.finish();
                        }
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    player.markAuto('DIY_jianxiong',[result.control]);
					game.log(player,'记录了','#g【'+get.translation(result.control)+'】');
                },
                group:"DIY_jianxiong_damage",
                subSkill:{
                    damage:{
                        trigger:{
                            global:"damageEnd",
                        },
                        direct:true,
                        filter:function(event,player,name){
                            if(player.storage.DIY_jianxiong.length==0) return false;
                            if(event.player==player) return true;
                            return player.storage.DIY_jianxiong_characters.contains(event.player);
                        },
                        content:function(){
                            'step 0'
                            event.num=trigger.num;
                            'step 1'
                            var skills=player.getStorage('DIY_jianxiong');
                            player.chooseControl(skills,'cancel').set('dialog',[get.prompt('DIY_jianxiong'),'<div class="text center">请选择要发动的技能</div>']).set('ai',function(){
                                for(i in skills){
                                    if(player.storage.DIY_jianxiong_ai.contains(i)) return 0.5+Math.random();
                                }
                                return skills.randomGet();
                            });
                            'step 2'
                            event.skill=result.control;
                            player.logSkill('DIY_jianxiong');
                            player.useSkill(result.control);
                            'step 3'
                            if(result.bool){
                                player.storage.DIY_jianxiong_ai.push(result.control);
                            }
                            event.num--;
                            'step 4'
                            if(event.num>0) event.goto(1);
                        },
                        sub:true,
                    },
                },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "DIY_yingzi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                filter:function(event,player){
                    return !event.numFixed;
                },
                frequent:true,
                content:function(){
                    'step 0'
                    trigger.changeToZero();
                    game.countPlayer(function(current){
                        if(current.hasSkill('DIY_yingzi_effect')){
                            current.removeSkill('DIY_yingzi_effect');
                        }
                    });
                    event.cards=get.cards(3);
                    game.cardsGotoOrdering(event.cards);
                    player.showCards(event.cards,'英姿');
                    player.chooseCardButton(event.cards,'英姿：请选择要交给一名角色的牌',true);
                    'step 1'
                    if(result.bool){
                        event.card=result.links[0];
                        event.cards.remove(event.card);
                    }
                    player.chooseTarget(get.prompt('DIY_yingzi'),true,'选择一名角色送出'+get.translation(event.card)).set('ai',function(target){
                        var att=get.attitude(_status.event.player,target);
                        if(_status.event.neg) return -att;
                        return att;
                    }).set('neg',get.value(event.card,player,'raw')<0);
                    'step 2'
                    if(result.bool){
                        player.line(result.targets,'green');
                        result.targets[0].gain(event.card,'gain2');
                        result.targets[0].addSkill('DIY_yingzi_effect');
                        player.gain(event.cards,'gain2');
                        player.addSkill('DIY_yingzi_effect');
                    }
                },
                subSkill:{
                    effect:{
                        direct:true,
                        mod:{
                            maxHandcardBase:function(player,num){
                                return player.maxHp;
                            },
                        },
                        intro:{
                            content:"你很帅",
                        },
                        charlotte:true,
                        forced:true,
                        trigger:{
                            player:"drawBegin",
                        },
                        content:function(){
                            trigger.num++;
                            game.countPlayer(function(current){
                                if(current.hasSkill("DIY_yingzi")){
                                    current.line(player,'yellow');
                                    current.logSkill('DIY_yingzi',player);
                                }
                            });
                        },
                        sub:true,
                    },
                },
            },
            "DIY_fanjian":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                filter:function(event,player){
                    return player.countCards('h')>0;
                },
                filterTarget:function(card,player,target){
                    return player!=target;
                },
                position:"he",
                filterCard:true,
                check:function(card){
                    return 8-get.value(card);
                },
                discard:false,
                lose:false,
                delay:false,
                content:function(){
                    target.gain(cards[0],player,'give');
                },
                group:"DIY_fanjian_effect",
                subSkill:{
                    effect:{
                        trigger:{
                            source:"gainAfter",
                        },
                        direct:true,
                        forced:true,
                        filter:function(event,player){
                            if(player==event.player) return false;
                            var evt=event.getl(player);
                            return evt&&evt.cards2&&evt.cards2.length>0;
                        },
                        logTarget:"player",
                        content:function(){
                            'step 0'
                            event.num=0;
                            'step 1'
                            trigger.player.storage.DIY_fanjian=trigger.cards[event.num];
                            player.logSkill('DIY_fanjian',trigger.player);
                            'step 2'
                            var suit=get.suit(trigger.player.storage.DIY_fanjian);
                            if(!trigger.player.countCards('h')) event._result={control:'refanjian_hp'};
                            else trigger.player.chooseControl('refanjian_card','refanjian_hp').ai=function(event,player){
                                var cards=player.getCards('he',{suit:get.suit(player.storage.DIY_fanjian)});
                                if(cards.length==1) return 0;
                                if(cards.length>=2){
                                    for(var i=0;i<cards.length;i++){
                                        if(get.tag(cards[i],'save')) return 1;
                                    }
                                }
                                if(player.hp==1) return 0;
                                for(var i=0;i<cards.length;i++){
                                    if(get.value(cards[i])>=8) return 1;
                                }
                                if(cards.length>2&&player.hp>2) return 1;
                                if(cards.length>3) return 1;
                                return 0;
                            }
                            'step 3'
                            if(result.control=='refanjian_card'){
                                trigger.player.showHandcards();
                            }
                            else{
                                trigger.player.loseHp();
                                event.goto(5);
                            }
                            'step 4'
                            var suit=get.suit(trigger.player.storage.DIY_fanjian);
                            trigger.player.discard(trigger.player.getCards('he',function(i){
                                return get.suit(i)==suit&&lib.filter.cardDiscardable(i,trigger.player,'DIY_fanjian');
                            }));
                            'step 5'
                            delete trigger.player.storage.DIY_fanjian;
                            event.num++;
                            'step 6'
                            if(event.num<trigger.cards.length) event.goto(1);
                        },
                        sub:true,
                    },
                },
            },
            "DIY_duanfa":{
                audio:"ext:天牢令/image/audio:2",
                enable:["chooseToUse","chooseToRespond"],
                init:function(player){
        player.storage.DIY_duanfa=0;
    },
                filter:function(event,player){
        if(!player.countCards('he',{color:'black'})&&!player.countCards('h',{name:'sha'})) return false;
        return player.storage.DIY_duanfa<player.maxHp&&(event.filterCard({name:'sha'},player,event)||event.filterCard({name:'shan'},player,event));
    },
                chooseButton:{
                    dialog:function(event,player){
            var list=[];for(var i of lib.inpile){
            if(get.type(i)!='basic') continue;
            if(i!='sha'&&i!='shan') continue;
            var card={name:i,isCard:true};
            if(event.filterCard(card,player,event)) list.push(['','',i]);
            if(i=='sha'){
                for(var j of lib.inpile_nature){
                    card.nature=j;
                    if(event.filterCard(card,player,event)) list.push(['','',i,j]);
                }
            }
        }
            return ui.create.dialog('断发',[list,'vcard'],'hidden');
        },
                    check:function(button){
            var player=_status.event.player;
            var card={name:button.link[2],nature:button.link[3]};
            if(card.name=='sha'){
                var eff=player.getUseValue(card);
                if(eff>0) return 2.9+eff/10;
                return 0;
            }
            else if(card.name=='shan'){
                return 4;
            }
            return 0;
        },
                    backup:function(links,player){
            return {
                filterCard:function(){return false},
                viewAs:{
                    name:links[0][2],
                    nature:links[0][3],
                    isCard:true,
                },
                selectCard:-1,
                popname:true,
                log:false,
                precontent:function(result,player){
                    'step 0'
                    var str='弃置一张黑色牌或【杀】';
                    player.chooseToDiscard(true,get.prompt('DIY_duanfa'),str,'he',function(card){
                        return get.color(card)=='black'||card.name=='sha';
                    }).set('ai',function(card){
                        return 7-get.value(card);
                    });
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_duanfa');
                        player.storage.DIY_duanfa++;
                        delete event.result.skill;
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    game.delayx();
                },
            }
        },
                    prompt:function(links,player){
            return '选择【'+get.translation(links[0][3]||'')+get.translation(links[0][2])+'】的目标';
        },
                },
                ai:{
                    order:function(){
            var player=_status.event.player;
            var event=_status.event;
            var nh=player.countCards('h');
            if(event.filterCard({name:'shan'},player,event)){
                return 4;
            }
            if(event.filterCard({name:'sha'},player,event)){
                return 4;
            }
            return 0;
        },
                    save:true,
                    respondSha:true,
                    respondShan:true,
                    skillTagFilter:function(player,tag,arg){
                if(!player.countCards('he',{color:'black'})&&!player.countCards('h',{name:'sha'})) return false;
                return true;
        },
                    result:{
                        player:1,
                    },
                },
                group:"DIY_duanfa_clear",
                subSkill:{
                    clear:{
                        trigger:{
                            global:"phaseEnd",
                        },
                        direct:true,
                        content:function(){
                            player.storage.DIY_duanfa=0;
                        },
                        sub:true,
                    },
                },
            },
            "DIY_youdi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                direct:true,
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('DIY_youdi'),'令一名其他角色弃置你一张牌',function(card,player,target){
            return player!=target;
        }).set('ai',function(target){
            var player=_status.event.player;
            if(player.countCards('h','sha')>player.countCards('h')/3&&player.countCards('h',{color:'red'})>player.countCards('h')/2) return 0;
            return -get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            game.delay();
            player.logSkill('DIY_youdi',result.targets);
            result.targets[0].discardPlayerCard(player,'h',true);
        }
        else{
            event.finish();
        }
    },
                group:'DIY_youdi_effect',
                subSkill:{
                    effect:{
                        trigger:{
                            player:"loseAfter",
                        },
                        direct:true,
                        filter:function(event,player){
                            if(event.type!='discard') return false;
                            for(var i=0;i<event.cards2.length;i++){
                                if((get.color(event.cards2[i],player)!='black'||event.cards2[i].name!='sha')&&get.position(event.cards2[i])=='d'){
                                    return true;
                                }
                            }
                        return false;
                        },
                        content:function(){
                            'step 0'
                            event.num=0;
                            var cards=[];
                            for(var i=0;i<trigger.cards2.length;i++){
                                if((get.color(trigger.cards2[i],player)!='black'||trigger.cards2[i].name!='sha')&&get.position(trigger.cards2[i])=='d'){
                                    cards.push(trigger.cards2[i]);
                                }
                            }
                            if(!cards.length){
                                event.finish();
                            }
                            else{
                                event.cards=cards;
                            }
                            'step 1'
                            player.logSkill('DIY_youdi');
                            if(get.color(event.cards[event.num])!='black') player.draw();
                            'step 2'
                            if(event.cards[event.num].name!='sha'){
                                player.chooseTarget(get.prompt('DIY_youdi'),'获得一名其他角色一张牌',function(card,player,target){
                                    return player!=target&&target.countCards('he')>0;
                                }).set('ai',function(target){
                                    if(target.countCards('he')==0) return 0.1;
                                    return -get.attitude(_status.event.player,target);
                                });
                            }
                            else{
                                event.goto(4);
                            }
                            'step 3'
                            if(result.bool){
                                player.gainPlayerCard('he',result.targets[0],true);
                            }
                            'step 4'
                            event.num++;
                            'step 5'
                            if(event.num<event.cards.length) event.goto(1);
                        },
                        sub:true,
                    },
                },
                ai:{
                    expose:0.3,
                    threaten:1.4,
                },
            },
            "DIY_yili":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                direct:true,
                filter:function(event,player){
                    var list=[];
                    game.getGlobalHistory('cardMove',function(evt){
                        if(evt.name=='lose'){
                            if(evt.position==ui.discardPile){
                                for(var i of evt.cards) list.add(i);
                            }
                        }
                        else{
                            if(evt.name=='cardsDiscard'){
                                for(var i of evt.cards) list.add(i);
                            }
                        }
                    });
                    return list.length&&!player.hasSkill('DIY_yili_used');
                },
                line:false,
                filterTarget:function(card,player,target){
                    return target!=player;
                },
                content:function(){
                    'step 0'
                    var list=[];
                    game.getGlobalHistory('cardMove',function(evt){
                        if(evt.name=='lose'){
                            if(evt.position==ui.discardPile){
                                for(var i of evt.cards) list.add(i);
                            }
                        }
                        else{
                            if(evt.name=='cardsDiscard'){
                                for(var i of evt.cards) list.add(i);
                            }
                        }
                    });
                    player.chooseCardButton(list,'遗礼：请选择要交给'+get.translation(target)+'的牌');
                    'step 1'
                    if(result.bool){
                        event.card=result.links[0];
                        player.line(result.targets,'green');
                        player.logSkill('DIY_yili',target);
                        target.gain(event.card,'gain2');
                        player.draw();
                        player.addTempSkill('DIY_yili_used');
                    }
                },
                subSkill:{
                    used:{
                        sub:true,
                    },
                },
            },
            "DIY_zhenglun":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"drawBegin",
                },
                direct:true,
                content:function(){
                    'step 0'
                    player.chooseTarget([1,player.maxHp],get.prompt2('DIY_zhenglun'),function(card,player,target){
                        return player!=target&&target.countCards('he');
                    }).set('ai',function(target){
                        var att=get.attitude(_status.event.player,target);
                        if(target.countCards('he')) return att;
                        return att/10;
                    });
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_zhenglun',result.targets);
                        event.targets=result.targets;
                        event.targets.sort(lib.sort.seat);
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    if(event.targets.length){
                        var target=event.targets.shift();
                        event.current=target;
                    }
                    else{
                        event.goto(6);
                    }
                    'step 3'
                    if(event.current&&event.current.countCards('he')){
                        event.current.chooseCard('重铸一张牌','he',true).set('ai',function(card){
                            var att=get.attitude(event.current,player);
                            var suits=[];
                            game.getGlobalHistory('cardMove',function(evt){
                                if(suits.length>=4) return;
                                if(evt.name=='lose'){
                                    if(evt.position==ui.discardPile){
                                        for(var i of evt.cards) suits.add(get.suit(i,false));
                                    }
                                }
                                else{
                                    if(evt.name=='cardsDiscard'){
                                        for(var i of evt.cards) suits.add(get.suit(i,false));
                                    }
                                }
                            });
                            if(suits.contains(get.suit(card))){
                                if(att<0){
                                    return 9-get.value(card);
                                }
                                else{
                                    return 6-get.value(card);
                                }
                            }
                            else{
                                if(att<0){
                                    return 6-get.value(card);
                                }
                                else{
                                    return 9-get.value(card);
                                }
                            }
                            return 6-get.value(card);
                        });
                    }
                    else{
                        event.goto(2);
                    }
                    'step 4'
                    if(result&&result.cards){
                        event.card=result.cards[0];
                        event.current.lose(result.cards,ui.discardPile,'visible');
                        event.current.$throw(result.cards,1000);
                        game.log(event.current,'将',result.cards,'置入弃牌堆');
                        event.current.draw();
                    }
                    else{
                        event.card=null;
                    }
                    'step 5'
                    if(event.current==game.me) game.delay(0.5);
                    event.goto(2);
                    'step 6'
                    var suits=[];
                    game.getGlobalHistory('cardMove',function(evt){
                        if(suits.length>=4) return;
                        if(evt.name=='lose'){
                            if(evt.position==ui.discardPile){
                                for(var i of evt.cards) suits.add(get.suit(i,false));
                            }
                        }
                        else{
                            if(evt.name=='cardsDiscard'){
                                for(var i of evt.cards) suits.add(get.suit(i,false));
                            }
                        }
                    });
                    trigger.num=suits.length;
                },
            },
            "DIY_zhiyi":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"phaseJieshuBegin",
                },
                frequent:true,
                filter:function(event,player){
                    var num=0;
                    player.getHistory('lose',function(evt){
                        if(evt.cards2) num+=evt.cards2.length;
                    });
                    return num>0;
                },
                content:function(){
                    'step 0'
                    event.num=0;
                    player.getHistory('lose',function(evt){
                        if(evt.cards2) event.num+=evt.cards2.length;
                    });
                    event.list=[];
                    'step 1'
                    var list=[];
                    game.getGlobalHistory('cardMove',function(evt){
                        if(evt.name=='lose'){
                            if(evt.position==ui.discardPile){
                                for(var i of evt.cards) list.add(i);
                            }
                        }
                        else{
                            if(evt.name=='cardsDiscard'){
                                for(var i of evt.cards) list.add(i);
                            }
                        }
                    });
                    if(list.length) player.chooseCardButton(list,'执义：选择要使用的牌，或点“取消”摸一张牌<br>（还有'+get.translation(event.num-1)+'次）').set('filterButton',function(button){
                        return !event.list.contains(button.link)&&_status.event.player.hasUseTarget({name:button.link.name});
                    }).set('ai',function(button){
                        if(_status.event.check){
                            return 20-get.value(button.link,_status.event.player);
                        }
                        return 1;
                    });
                    'step 2'
                    if(result.bool&&result.links.length){
                        player.chooseUseTarget(result.links[0]).logSkill='DIY_zhiyi';
                        event.list.add(result.links[0]);
                    }
                    else{
                        player.logSkill('DIY_zhiyi');
                        player.draw();
                    }
                    'step 3'
                    event.num--;
                    'step 4'
                    if(event.num>0){
                        player.chooseBool(get.prompt2('DIY_zhiyi')).set('frequentSkill','DIY_zhiyi');
                    }
                    else{
                        event.finish();
                    }
                    'step 5'
                    if(result.bool&&event.num>0){
                        event.goto(1);
                    }
                },
            },
            "DIY_chuhai":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                usable:1,
                mark:true,
                marktext:'乡害',
                intro:{
                    name:" ",
                    content:function(storage,player){
                        var num=3-player.countMark("DIY_chuhai");
                        str='【除害】剩余可用'+get.translation(num)+'次';
                        return str;
                    },
                    markcount:function(dialog,storage,player){
                        return '';
                    },
                },
                selectCard:function(card,player,target){
                    return [0,_status.event.player.countMark('DIY_chuhai')+1];
                },
                position:"he",
                filterCard:true,
                filterTarget:function(card,player,target){
                    if(player==target) return false;
                    if(ui.selected.cards.length){
                        if(ui.selected.cards.length<player.countMark('DIY_chuhai')+1) return false;
                    }
                    else{
                        return target.countCards('he')>=player.countMark('DIY_chuhai')+1;
                    }
                    return true;
                },
                filter:function(event,player){
                    return !player.storage.DIY_xianghai&&player.countMark('DIY_chuhai')<3;
                },
                check:function(card,player){
                    if(_status.event.player.countMark('DIY_chuhai')==2) return -1;
                    return 10-get.value(card);
                },
                onremove:true,
                content:function(){
                    'step 0'
                    player.getHistory('custom').push({DIY_chuhai:true});
                    if(cards.length>0){
                        target.damage('nocard');
                        player.addMark('DIY_chuhai',1,false);
                        event.finish();
                    }
                    else{
                        target.chooseToDiscard(player.countMark('DIY_chuhai')+1,true,'he');
                    }
                    'step 1'
                    if(result.bool){
                        player.damage('nocard',target);
                        player.addMark('DIY_chuhai',1,false);
                        if(player.hasSkill('DIY_xianghai')) player.useSkill('DIY_xianghai_chuhai',true);
                    }
                },
                ai:{
                    order:9,
                    result:{
                        target:function(player,target){
                            return -1;
                        },
                    },
                },
            },
            "DIY_chuhai_gai":{
                audio:"DIY_chuhai",
            },
            "DIY_chuhai_gai_skill":{
                audio:"DIY_chuhai",
                enable:"phaseUse",
                usable:1,
                selectCard:function(card,player,target){
                    return [0,1];
                },
                position:"he",
                filterCard:true,
                filterTarget:function(card,player,target){
                    if(player==target) return false;
                    if(!ui.selected.cards.length){
                        return target.countCards('he')>=1;
                    }
                    return true;
                },
                check:function(card,player){
                    return 10-get.value(card);
                },
                filter:function(event,player){
                    return player.getHistory('custom',function(evt){
                        return evt.DIY_chuhai==true;
                    }).length==0;
                },
                content:function(){
                    'step 0'
                    if(cards.length>0){
                        target.damage('nocard');
                        event.finish();
                    }
                    else{
                        target.chooseToDiscard(1,true,'he');
                    }
                    'step 1'
                    if(result.bool){
                        player.damage('nocard',target);
                    }
                },
                ai:{
                    order:9,
                    result:{
                        target:function(player,target){
                            return -1;
                        },
                    },
                },
            },
            "DIY_xianghai":{
                audio:"ext:天牢令/image/audio:2",
                global:'DIY_xianghai_card',
                trigger:{
                    global:"phaseDiscardBefore",
                },
                forced:true,
                filter:function(event,player){
                    return event.player!=player&&event.player.needsToDiscard();
                },
                derivation:['DIY_chuhai_gai','DIY_zhangming'],
                content:function(){},
                subSkill:{
                    card:{
                        forced:true,
                        mod:{
                            maxHandcardBase:function(player,num){
                                if(game.hasPlayer(function(current){
                                    return !current.hasSkill('DIY_xianghai');
                                })){
                                    if(!player.hasSkill('DIY_xianghai')) return num-1;
                                }
                            },
                        },
                    },
                    chuhai:{
                        audio:"ext:天牢令/image/audio:1",
                        trigger:{
                            player:'damage',
                        },
                        forced:true,
                        skillAnimation:true,
                        animationColor:"wood",
                        filter:function(event,player){
                            return event.getParent(2).name=='DIY_chuhai';
                        },
                        content:function(){
                            'step 0'
                            player.recover(player.maxHp-player.hp);
                            player.removeMark('DIY_chuhai',Infinity,false);
                            player.storage.DIY_xianghai=true;
                            player.removeSkill('DIY_xianghai');
                            player.removeSkill('DIY_chuhai');
                            player.addSkill('DIY_chuhai_gai_skill');
                            player.addSkill('DIY_zhangming');
                        },
                    },
                },
                ai:{
                    combo:"DIY_chuhai",
                },
            },
            "DIY_zhangming":{
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    player:'damageEnd',
                },
                forced:true,
                filter:function(event,player){
                    return game.hasPlayer(function(current){
                        return current.isMinHandcard(true)&&current!=player;
                    });
                },
                content:function(){
                    'step 0'
                    var targets=game.filterPlayer(function(current){
                        return current.isMinHandcard(true)&&current!=player;
                    });
                    targets[0].draw('visible');
                    'step 1'
                    var card=result[0];
                    var list=[],cards=[];
                    list.push(get.type2(card,false));
                    for(var i=0;i<ui.cardPile.childNodes.length;i++){
                        var type=get.type2(ui.cardPile.childNodes[i],false);
                        if(!list.contains(type)){
                            list.push(type);
                            cards.push(ui.cardPile.childNodes[i])
                        };
                    }
                    player.gain(cards,'gain2');
                },
                group:"DIY_zhangming_damage",
                subSkill:{
                    damage:{
                        audio:"DIY_zhangming",
                        forced:true,
                        trigger:{
                            source:"damageSource",
                        },
                        filter:function(event,player){
                            return game.hasPlayer(function(current){
                                return current.isMaxHandcard(true)&&current!=player;
                            });
                        },
                        content:function(){
                            var list=[],cards=[],targets=game.filterPlayer(function(current){
                                return current.isMaxHandcard(true)&&current!=player;
                            });
                            target=targets[0];
                            hs=target.getCards('he');
                            if(hs.length>0){
                                var card=hs.randomGet();
                                list.push(get.type2(card,false));
                                target.discard(card);
                                for(var i=0;i<ui.cardPile.childNodes.length;i++){
                                    var type=get.type2(ui.cardPile.childNodes[i],false);
                                    if(!list.contains(type)){
                                        list.push(type);
                                        cards.push(ui.cardPile.childNodes[i])
                                    };
                                }
                                player.gain(cards,'gain2');
                            }
                        },
                    },
                },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                },
            },
            "DIY_jingce":{
                audio:"ext:天牢令/image/audio:1",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                mod:{
                    aiOrder:function(player,card,num){
                        if(typeof card=='object'&&player.hasCard((card)=>card.hasGaintag('DIY_jingce'),'x')){
                            var cards=player.getExpansions('DIY_jingce');
                            if(get.suit(cards[0])==get.suit(card)){
                                return num+9;
                            }
                        }
                    },
                },
                direct:true,
                content:function(){
                    'step 0'
                    player.chooseTarget([1,Infinity],get.prompt('DIY_jingce')).set('ai',function(target){
                        return 999;
                    });
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_jingce');
                        event.targets=result.targets.sortBySeat();
                        event.cards=get.cards(event.targets.length);
                        player.showCards(event.cards);
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    if(event.targets.length){
                        var target=event.targets.shift();
                        event.current=target;
                    }
                    else{
                        event.goto(6);
                    }
                    'step 3'
                    if(event.current&&event.current.countCards('h')>0){
                        var hs=event.current.getCards('h');
                        var dialog=['精策：是否用一张手牌交换展示的一张牌','<div class="text center">你的手牌</div>',hs,'<div class="text center">展示的牌</div>',event.cards];
                        event.current.chooseButton(dialog,2).set('filterButton',function(button){
                            if(!ui.selected.buttons.length) return get.position(button.link)=='h';
                            if(ui.selected.buttons.length) return get.position(button.link)!=get.position(ui.selected.buttons[0].link);
                            return true;
                        }).set('cards1',hs).set('cards2',event.cards).set('ai',function(button){
                            var card=button.link,cards1=_status.event.cards1.slice(0);
                            var cards2=_status.event.cards2.slice(0);
                            var att=get.attitude(event.current,player);
                            if(!ui.selected.buttons.length){
                                if(!cards1.contains(card)) return 0;
                                cards1.remove(card);
                                return 10-get.value(card);
                            }
                            cards1.remove(ui.selected.buttons[0].link);
                            cards1.push(card);
                            return get.value(card)-get.value(ui.selected.buttons[0].link);
                        });
                    }
                    else{
                        event.goto(5);
                    }
                    'step 4'
                    if(result.bool){
                        var cards=result.links;
                        if(get.position(cards[0])!='h') cards.reverse();
                        event.cards.remove(cards[1]);
                        event.cards.push(cards[0]);
                        game.log(event.current,'用',cards[0],'替换了',cards[1]);
                        event.current.lose(cards[0],false);
                        event.current.$gain2(cards[1]);
                        event.current.gain(cards[1],false);
                    }
                    'step 5'
                    game.delay(0.05);
                    event.goto(2);
                    'step 6'
                    player.$gain2(event.cards);
                    if(event.cards.length==1) event._result={bool:true,links:event.cards};
                    else{
                        var dialog=['精策：请选择放置的顺序','<div class="text center">（先选的在下面，后选的在上面）</div>',event.cards];
                        player.chooseButton(dialog,true,event.cards.length).set('filterButton',function(button){
                            return event.cards.contains(button.link);
                        }).set('cards',event.cards);
                    }
                    'step 7'
                    game.cardsGotoSpecial(result.links);
                    game.log(player,'将',result.links,'依次置于武将牌上');
                    player.$gain2(result.links);
                    player.addToExpansion(result.links,false).gaintag.add('DIY_jingce');
                    game.delayx();
                },
                group:'DIY_jingce_use',
                subSkill:{
                    use:{
                        audio:'DIY_jingce',
                        trigger:{
                            player:['useCard','respond'],
                        },
                        forced:true,
                        filter:function(event,player){
                            return player.hasCard((card)=>card.hasGaintag('DIY_jingce'),'x');
                        },
                        content:function(){
                            'step 0'
                            event.cards=player.getExpansions('DIY_jingce');
                            player.showCards(event.cards[0]);
                            'step 1'
                            if(get.suit(trigger.card)==get.suit(event.cards[0])){
                                player.gain(event.cards[0],'gain2');
                                event.cards.remove(event.cards[0]);
                                event.finish();
                            }
                            else{
                                player.loseToDiscardpile(event.cards[0]);
                                event.cards.remove(event.cards[0]);
                            }
                            'step 2'
                            if(player.hasCard((card)=>card.hasGaintag('DIY_jingce'),'x')){
                                var next=player.chooseToMove();
                                next.set('list',[
                                    ['“策”（左上右下）',event.cards],
                                ]);
                                next.set('prompt','精策：点击“策”的顺序');
                                next.processAI=function(list){
                                    var cards=list[0],player=_status.event.player;
                                    var top=cards;
                                    return [top];
                                }
                            }
                            else{
                                event.finish();
                            }
                            'step 3'
                            var top=result.moved[0];
                            game.cardsGotoSpecial(top);
                            top.reverse();
                            for(var i=0;i<top.length;i++){
                                player.addToExpansion(top[i],false).gaintag.add('DIY_jingce');
                            }
                            player.$gain2(event.cards);
                        },
                    },
                },
                marktext:"策",
                intro:{
                    mark:function(dialog,storage,player){
                        var cards=player.getExpansions('DIY_jingce');
                        dialog.addText('最上方的“策”:<br>'+get.translation(cards[0]));
                        dialog.addAuto(cards);
                    },
                    markcount:"expansion",
                },
            },
            "DIY_langxi": {
                audio:"ext:天牢令/image/audio:4",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                direct:true,
                filter:function(event,player){
                    return game.hasPlayer(function(current){
                        return current!=player;
                    });
                },
                content:function(){
                "step 0"
                player.chooseTarget(get.prompt('DIY_langxi'),'请选择一名其他角色',function(card,player,target){
                    return target!=player;
                }).set('ai',function(target){
                    var player=_status.event.player;
                    return get.damageEffect(target,player,player);
                });
                "step 1"
                if(result.bool&&result.targets&&result.targets.length){
                    player.logSkill('DIY_langxi', result.targets);
                    if (event.isMine()) {
                        var bg = ui.create.div('', document.body);
                        bg.style.cssText = 'width:100%;height:100%;top:0;left:0;position:absolute;z-index:7'

                        var langXi = ui.create.div('.langxi', bg);
                        var bordx = [24, 41, 58, 75, 95.5];
                        var text = [1, 0, 2, 0, 1];
                        for (var i = 0; i < 4; i++) {
                            let bord = ui.create.div('.none', langXi);
                            bord.style.setProperty('--h', bordx[i] + '%');
                        };
                        for (var j = 0; j < 5; j++) {
                            let font = ui.create.div('.nonef', langXi);
                            if (j == 0) font.style.setProperty('--h', '11%');
                            else font.style.setProperty('--h', (bordx[j] - 9) + '%');
                            font.textContent = text[j];
                        }
                        var ball = ui.create.div('.ball', langXi), ballTime = null, direct = 15, str = 'win';
                        ballTime = setInterval(function () {
                            ball.style.left = (ball.offsetLeft + direct) + 'px'
                            if (ball.style.left.substring(0, ball.style.left.indexOf('p')) >= 571) direct = -15;
                            if (ball.style.left.substring(0, ball.style.left.indexOf('p')) <= -1) direct = 15;
                        }, 10);

                        setTimeout(function () {
                            bg.addEventListener(lib.config.touchscreen ? 'touchend' : 'click', function () {
                            clearInterval(ballTime);

                            var x = Math.abs(ball.style.left.substring(0, ball.style.left.indexOf('p')) - 285);
                            console.log(ball.style.left.substring(0, ball.style.left.indexOf('p')), x)
                            if (x <= 45) event.score = 2;
                            else if (x <= 155){
                                event.score = 0;
                                str = 'lose';
                            }
                            else {
                                event.score = 1;
                            }
                            game.playAudio('..', 'extension', '天牢令', str);
                            setTimeout(function () {
                                bg.remove();
                                game.resume();
                            }, 200)
                            })
                        }, 100)
                        game.pause();
                    } else {
                        event.score = [0, 1, 2].randomGet();
                        if(get.isLuckyStar(player)) num=2;
                    }
                } else event.finish();
                "step 2"
                var num = event.score;
                player.line(result.targets[0], 'green');
                result.targets[0].damage(num);
                },
                ai: {
                    expose: 0.25,
                    threaten: 1.7,
                },
            },
            "DIY_yisuan":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"useCardEnd",
                },
                check:function(event,player){
                    return get.value(event.cards)+player.maxHp*2-18>0;
                },
                filter:function(event,player){
                    return player.isPhaseUsing()&&get.type(event.card)=='trick'&&event.cards.filterInD().length>0;
                },
                content:function(){
                    player.loseMaxHp();
                    player.gain(trigger.cards.filterInD(),'gain2','log');
                },
            },
            "DIY_wurong":{
                audio:"ext:天牢令/image/audio:2",
                usable:1,
                enable:"phaseUse",
                filter:function(event,player){
                    return player.countCards('h')>0;
                },
                filterTarget:function(card,player,target){
                    if(target==player||target.countCards('he')<1) return false;
                    cards=target.getCards('he');
                    for(var i=0;i<cards.length;i++){
                        var name=get.name(cards[i]);
                        if(['sha','shan','tao','jiu','nanman','wanjian','taoyuan','wugu','guohe','shunshou','juedou','huogong','wuxie','tiesuo','wuzhong','jiedao','caochuan','jiejia','kaihua','zhulu_card'].contains(name)) return true;
                    }
                },
                content:function(){
                    'step 0'
                    target.chooseCard('h',true,'怃戎：请打出一张牌',function(card,player){
                        var name=get.name(card);
                        return ['sha','shan','tao','jiu','nanman','wanjian','taoyuan','wugu','guohe','shunshou','juedou','huogong','wuxie','tiesuo','wuzhong','jiedao','caochuan','jiejia','kaihua','zhulu_card'].contains(name);
                    }).set('ai',function(card){
                        return Math.random();
                    });
                    'step 1'
                    if(result.bool){
                        event.card1=result.cards[0];
                        game.log(target,'选择了',event.card1);
                        player.chooseCard('h',true,'怃戎：请打出一张牌',function(card,player){
                            var name=get.name(card);
                            return ['sha','shan','tao','jiu','nanman','wanjian','taoyuan','wugu','guohe','shunshou','juedou','huogong','wuxie','tiesuo','wuzhong','jiedao','caochuan','jiejia','kaihua','zhulu_card'].contains(name);
                        }).set('ai',function(card){
                            return Math.random();
                        });
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    if(result.bool){
                        event.card2=result.cards[0];
                        player.respond(event.card2).nopopup=true;
                        target.respond(event.card1).nopopup=true;
                    }
                    'step 3'
                    event.num=0;
                    if(event.card1.name=='sha') event.num=3;
                    if(event.card1.name=='shan') event.num=2;
                    if(event.card1.name=='wuxie') event.num=15;
                    if(['juedou','nanman','wanjian'].contains(event.card1.name)) event.num=3;
                    if(['huogong','jiedao'].contains(event.card1.name)) event.num=2;
                    if(['taoyuan','wugu','guohe','shunshou','tiesuo','wuzhong','jiejia','kaihua','zhulu_card'].contains(event.card1.name)) event.num=1;
                    if(event.card1.name=='caochuan') event.num=13;
                    'step 4'
                    if(event.card2.name=='shan'){
                        player.draw(event.num);
                        event.finish();
                    }
                    if(event.card2.name=='wuxie'&&event.card1.name!='wuxie'){
                        player.draw(event.num);
                        event.finish();
                    }
                    if(['tao','jiu'].contains(event.card2.name)){
                        event.goto(6);
                    }
                    if(event.card2.name=='sha'&&!['shan','caochuan'].contains(event.card1.name)){
                        event.goto(6);
                    }
                    if(['juedou','nanman'].contains(event.card2.name)&&!['sha','wuxie','caochuan'].contains(event.card1.name)){
                        event.goto(6);
                    }
                    if(['jiedao'].contains(event.card2.name)&&!['sha','wuxie'].contains(event.card1.name)){
                        event.goto(6);
                    }
                    if(['huogong'].contains(event.card2.name)&&!['wuxie','caochuan'].contains(event.card1.name)){
                        event.goto(6);
                    }
                    if(['wanjjan'].contains(event.card2.name)&&!['shan','wuxie','caochuan'].contains(event.card1.name)){
                        event.goto(6);
                    }
                    if(['taoyuan','wugu','guohe','shunshou','tiesuo','wuzhong','caochuan','jiejia','kaihua','zhulu_card'].contains(event.card2.name)&&event.card1.name!='wuxie'){
                        event.goto(6);
                    }
                    'step 5'
                    event.finish();
                    'step 6'
                    if(event.num==0) event.finish();
                    player.chooseBool('怃戎：是否对'+get.translation(target)+'执行'+get.translation(event.num)+'次'+get.translation(event.card2)+'的效果，或点“取消”摸'+get.translation(event.num)+'张牌').ai=function(event,player){
                        if(!lib.filter.targetEnabled(event.card2,player,target)) return false;
                        return get.effect(target,event.card2,player,player);
                    };
                    'step 7'
                    if(!result.bool){
                        player.draw(event.num);
                        event.finish();
                    }
                    'step 8'
                    if(!target.isIn()) event.finish();
                    var next=player.useCard(event.card2,target,false);
                    next.set('addCount',false);
                    next.set('DIY_wurong',true);
                    player.actionHistory[player.actionHistory.length-1].useCard.pop();
                    event.num--;
                    if(event.num>0) event.goto(8);
                },
                ai:{
                    order:6,
                    result:{
                        target:-1,
                    },
                },
            },
            "DIY_shizhi":{
                mod:{
                    cardname:function(card,player,name){
                        if(card.name=='shan'&&player.hp==1) return 'sha';
                    },
                },
                ai:{
                    skillTagFilter:function(player){
                        if(!player.countCards('h','shan')) return false;
                        if(player.hp!=1) return false;
                    },
                    respondSha:true,
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["useCard1","respond"],
                },
                firstDo:true,
                forced:true,
                filter:function(event,player){
                    if(player.hp!=1) return false;
                    return event.card.name=='sha'&&!event.skill&&
                    event.cards.length==1&&event.cards[0].name=='shan';
                },
                content:function(){},
                group:'DIY_shizhi_phaseUse',
                subSkill:{
                    phaseUse:{
                        audio:'DIY_shizhi',
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        forced:true,
                        filter:function(event,player){
                            return player.hp==1;
                        },
                        content:function(){
                            trigger.cancel();
                            var next=trigger.player.phaseUse();
                            event.next.remove(next);
                            trigger.getParent('phase').next.push(next);
                        },
                    },
                },
            },
            "DIY_longhun":{
                audio:"ext:天牢令/image/audio:2",
                charlotte:true,
                trigger:{
                    player:'useCardToTarget',
                },
                filter:function(event,player){
                    return !event.card.DIY_longhun&&event.targets.length==1;
                },
                direct:true,
                content:function(){
                    'step 0'
                    str='视为对'+get.translation(trigger.targets[0])+'使用另一种牌名的即时牌，';
                    if(['basic','trick'].contains(get.type(trigger.card))) str+='或视为对一名其他角色使用一张'+get.translation(trigger.card.name)+'，';
                    str+='然后从'+get.translation(trigger.card)+'的目标中移去'+get.translation(trigger.targets[0]);
                    player.chooseTarget(get.prompt('DIY_longhun'),str,function(card,player,target){
                        if(['basic','trick'].contains(get.type(trigger.card))) return true;
                        return trigger.targets.contains(target);
                    }).set('ai',function(target){
                        var player=_status.event.player;
                        if(trigger.card.name=='tao'||trigger.card.name=='wuzhong') return false;
                        if(trigger.target!=target) return target!=player;
                        return Math.random();
                    });
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_longhun',result.targets);
                        if(!trigger.targets.contains(result.targets[0])){
                            player.useCard(result.targets[0],{name:trigger.card.name}).card.DIY_longhun=true;
                            event.goto(3);
                        }
                        else{
                            var list=[];
                            for(var i=0;i<lib.inpile.length;i++){
                                var name=lib.inpile[i];
                                if(name==trigger.card.name) continue;
                                if(get.type(name)!='basic'&&get.type(name)!='trick') continue;
                                if(!lib.filter.targetEnabled({name:name},player,trigger.targets[0])) continue;
                                if(name=='sha'){
                                    list.push(['基本','','sha']);
                                    for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
                                }
                                else if(get.type(name)=='basic') list.push(['基本','',name]);
                                else if(get.type(name)=='trick') list.push(['锦囊','',name]);
                            }
                            player.chooseButton([get.prompt('DIY_longhun'),'请选择对'+get.translation(trigger.targets[0])+'使用的即时牌',[list,'vcard']],true).set('ai',function(button){
								var att=get.attitude(player,trigger.targets[0]);
								return get.effect(trigger.targets[0],button.link,player,player);
							});
                        }
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    if(result.bool){
                        player.useCard(trigger.targets[0],{name:result.links[0][2]}).card.DIY_longhun=true;
                    }
                    'step 3'
                    trigger.getParent().excluded.add(trigger.targets[0]);
                },
            },
            "DIY_juejing":{
                audio:"ext:天牢令/image/audio:2",
                charlotte:true,
                trigger:{
                    target:"useCardToTarget",
                },
                filter:function(event,player){
                    return !event.card.DIY_longhun&&event.targets.length==1;
                },
                direct:true,
                filter:function(event,player){
                    return event.player.hp>=player.hp&&event.player!=player;
                },
                content:function(){
                    'step 0'
                    player.storage.DIY_juejing=false;
                    player.chooseBool(get.prompt('DIY_juejing'),'视为对'+get.translation(trigger.player)+'使用一张【杀】，若此【杀】结算期间你造成了伤害，'+get.translation(trigger.card)+'对你无效').ai=function(event,player){
                        return true;
                    };
                    'step 1'
                    if(result.bool){
                        player.storage.DIY_juejing_card=trigger.card;
                        player.addTempSkill('DIY_juejing_damage');
                        player.useCard(trigger.player,{name:'sha'}).card.DIY_juejing=true;
                    }
                    'step 2'
                    if(player.storage.DIY_juejing) trigger.getParent().excluded.add(player);
                },
                group:"DIY_juejing_card",
                subSkill:{
                    damage:{
                        direct:true,
                        charlotte:true,
                        trigger:{
                            source:"damage",
                        },
                        content:function(){
                            player.storage.DIY_juejing=true;
                            player.logSkill('DIY_juejing');
                            game.log(player,'令',player.storage.DIY_juejing_card,'对其无效');
                        },
                    },
                    card:{
                        direct:true,
                        charlotte:true,
                        trigger:{
                            player:'useCardEnd',
                        },
                        filter:function(event,player){
                            return event.card.DIY_juejing;
                        },
                        content:function(){
                            player.removeSkill('DIY_juejing_damage');
                            player.chooseToDiscard(true,'he');
                        },
                        sub:true,
                    },
                },
            },
            "DIY_leiji":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    global:"judgeAfter",
                },
                direct:true,
                filter:function(event,player){
                    return !['spade','club'].contains(event.result.suit);
                },
                content:function(){
                    'step 0'
                    player.chooseTarget(get.prompt2('DIY_leiji')).ai=function(target){
                        if(target.hasSkill('hongyan')) return 0;
                        return -get.damageEffect(target,_status.event.player,_status.event.player,'thunder');
                    };
                    'step 1'
                    if(result.bool){
                        player.logSkill('DIY_leiji');
                        var target=result.targets[0];
                        target.judge(function(card){
                            var suit=get.suit(card);
                            if(suit=='spade') return -4;
                            if(suit=='club') return -2;
                            return 0;
                        }).judge2=function(result){
                            return result.bool==false?true:false;
                        };
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    if(['spade','club'].contains(result.suit)){
                        event.num=result.suit=='club'?1:2;
                        player.chooseTarget('雷击：是否对一名角色造成'+event.num+'点雷电伤害？',lib.filter.notMe).ai=function(target){
                            var player=_status.event.player;
                            return get.damageEffect(target,player,player,'thunder');
                        };
                    }
                    else{
                        event.finish();
                    }
                    'step 3'
                    if(result.bool&&result.targets&&result.targets.length){
                        if(!event.logged) player.logSkill('DIY_leiji',result.targets);
                        else player.line(result.targets,'thunder');
                        result.targets[0].damage(event.num,'thunder');
                    }
                },
            },
            "DIY_guidao":{
                ai:{
                    respondShan:true,
                    effect:{
                        target:1,
                    },
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["chooseToRespondBegin","chooseToUseBegin"],
                },
                filter:function(event,player){
        if(event.responded) return false;
        if(!event.filterCard||!event.filterCard({name:'shan'},player,event)) return false;
        if(event.name=='chooseToRespond'&&!lib.filter.cardRespondable({name:'shan'},player,event)) return false;
        return true;
                },
                check:function(event,player){
                    if(event&&(event.ai||event.ai1)){
                        var ai=event.ai||event.ai1;
                        var tmp=_status.event;
                        _status.event=event;
                        var result=ai({name:'shan'},_status.event.player,event);
                        _status.event=tmp;
                        return result>0;
                    }
                    return true;
                },
                content:function(){
                    "step 0"
                    player.line(_status.currentPhase,'yellow');
                    _status.currentPhase.judge('DIY_guidao',function(card){
                        if(get.color(card)=='red') return 1.5;
                        return -0.5;
                    }).judge2=function(result){
                       return result.bool;
                    };
                    "step 1"
                    if(result.judge>0){
                        trigger.untrigger();
                        trigger.set('responded',true);
                        trigger.result={bool:true,card:{name:'shan',isCard:true}}
                    }
                },
                group:['DIY_guidao_sha','DIY_guidao_use'],
                subSkill:{
                    use:{
                        filter:function(event,player){
                            return !event.DIY_guidao_use&&(event.type!='phase'||!player.hasSkill('DIY_guidao_used'));
                        },
                        enable:["chooseToUse","chooseToRespond"],
                        viewAs:{
                            name:"sha",
                        },
                        direct:true,
                        filterCard:function(){return false},
                        selectCard:-1,
                        ai:{
                            order:function(){
                                return get.order({name:'sha'})+0.3;
                            },
                            respondSha:true,
                        },
                    },
                    sha:{
                        audio:"DIY_guidao",
                        trigger:{
                            player:["useCardBegin","respondBegin"],
                        },
                        filter:function(event,player){
                            return event.skill=='DIY_guidao_use';
                        },
                        forced:true,
                        content:function(){
                            "step 0"
                            delete trigger.skill;
                            trigger.getParent().set('DIY_guidao_use',true);
                            "step 1"
                            player.line(_status.currentPhase,'yellow');
                            _status.currentPhase.judge('DIY_guidao',function(card){
                                if(get.color(card)=='red') return 1.5;
                                return -0.5;
                            }).judge2=function(result){
                                return result.bool;
                            };
                            "step 2"
                            if(result.judge>0){
                            }
                            else{
                                player.addTempSkill('DIY_guidao_used');
                                trigger.cancel();
                                trigger.getParent().goto(0);
                            }
                        },
                        sub:true,
                    },
                    used:{
                        trigger:{
                            player:["useCard2","respond"],
                        },
                        direct:true,
                        forced:true,
                        content:function(){
                            player.removeSkill('DIY_guidao_used');
                        },
                        sub:true,
                    },
                },
            },
            "DIY_kuangcai":{
                mod:{
                    aiOrder:function(player,card,num){
                        if(get.name(card)=='tao') return num+10;
                        if(get.tag(card,'damage')) return num+9
                    },
                    cardUsable:function(card,player,num){
                        return Infinity;
                    },
                    targetInRange:function(card,player){
                        return true;
                    },
                },
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:["useCardAfter","respondAfter"],
                },
                forced:true,
                filter:function(event,player){
                    return player.countCards('h');
                },
                content:function(){
                    'step 0'
                    var hs=player.getCards('h');
                    if(hs.length){
                        player.discard(hs);
                    }
                    'step 1'
                    var suits=[];
                    game.getGlobalHistory('cardMove',function(evt){
                        if(suits.length>=4) return;
                        if(evt.name=='lose'){
                            if(evt.position==ui.discardPile){
                                for(var i of evt.cards) suits.add(get.suit(i,false));
                            }
                        }
                        else{
                            if(evt.name=='cardsDiscard'){
                                for(var i of evt.cards) suits.add(get.suit(i,false));
                            }
                        }
                    });
                    if(suits.length) player.draw(suits.length);
                },
            },
            "DIY_kurou":{
                audio:"ext:天牢令/image/audio:2",
                mod:{
                    aiOrder:function(player,card,num){
                        if(get.name(card)=='tao') return num+999;
                    },
                },
                enable:"phaseUse",
                content:function(){
                    'step 0'
                    var cards=get.cards(2);
                    game.cardsGotoOrdering(cards);
                    player.showCards(cards,'苦肉');
                    var cardsx=[];
                    for(var i=0;i<cards.length;i++){
                        if(cards[i].name=='tao'||cards[i].name=='jiu'){
                            cardsx.push(cards[i]);
                        }
                    }
                    event.cards=cards;
                    player.chooseBool(get.prompt('DIY_kurou'),"是否获得"+get.translation(cards)+"，然后失去一点体力？").ai=function(){
                        if(cardsx.length>0) return true;
                        if(player.hp>1) return true;
                    };
                    'step 1'
                    if(result.bool){
                        player.gain(event.cards,'gain2');
                        player.loseHp();
                    }
                },
                ai:{
                    order:function(){
                        var player=_status.event.player;
                        var cards=player.getCards('h');
                        if(player.countCards('h','sha')>5&&player.countCards('h','zhuge')) return -1;
                        if(player.hp<2) return 4;
                        return 8;
                    },
                    result:{
                        player:function(player){
                            return 1;
                        },
                    },
                },
            },
            "DIY_shengan_jieying":{
                audio:"ext:天牢令/image/audio:2",
                enable:"phaseUse",
                filter:function(event,player){
                    return player.countCards('h','sha')>0;
                },
                filterTarget:function(card,player,target){
                    return target!=player&&player.inRange(target);
                },
                filterCard:{
                    name:"sha",
                },
                discard:false,
                content:function(){
                    player.useCard(cards,target).card.DIY_shengan_jieying=true;
                },
                group:'DIY_shengan_jieying_effect',
                subSkill:{
                    effect:{
                        trigger:{
                            player:"useCardToTargeted",
                        },
                        direct:true,
                        filter:function(event,player){
                            return event.card&&event.card.DIY_shengan_jieying&&event.target.hp>0&&event.target.countCards('hej')>0;
                        },
                        content:function(){
                            'step 0'
                            var next=player.choosePlayerCard(trigger.target,'he',[1,Math.min(trigger.target.hp,trigger.target.countCards('hej'))],'劫营：是否将'+get.translation(trigger.card)+'改为获得'+get.translation(trigger.target)+'至多'+get.translation(trigger.target.hp)+'张牌');
                            next.set('ai',function(button){
                                if(!_status.event.goon) return 0;
                                var val=get.value(button.link);
                                if(button.link==_status.event.target.getEquip(2)) return 2*(val+3);
                                return val;
                            });
                            next.set('goon',get.attitude(player,trigger.target)<=0);
                            next.set('forceAuto',true);
                            'step 1'
                            if(result.bool){
                                player.logSkill('DIY_shengan_jieying',trigger.target);
                                trigger.getParent().excluded.add(trigger.target);
                                player.gain(result.cards,trigger.target);
                            }
                        },
                        sub:true,
                    },
                },
                ai:{
                    order:function(){
                        return get.order({name:'sha'})+0.3;
                    },
                    result:{
                        target:function(player,target,card){
                            return -1-target.countCards('he');
                        },
                    },
                },
            },
            "DIY_poxi":{
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                audio:"ext:天牢令/image/audio:2",
                frequent:true,
                content:function(){
                    player.loseHp();
                    var card=get.cardPile(function(card){
                        return card.name=='sha';
                    });
                    if(card) player.gain(card,'gain2');
                    player.addSkill('DIY_poxi_effect');
                },
                subSkill:{
                    effect:{
                        mod:{
                            attackRangeBase:function(){
                                return Infinity;
                            },
                        },
                        trigger:{
                            player:"useCardAfter",
                        },
                        audio:'DIY_poxi',
                        forced:true,
                        charlotte:true,
                        filter:function(event,player){
                            return get.tag(event.card,'damage')>0&&!event.player.getHistory('sourceDamage',function(evt){
                                return evt.card==event.card;
                            }).length&&event.cards.filterInD().length>0&&event.card.name=='sha';
                        },
                        content:function(){
                            player.gain(trigger.cards.filterInD(),'gain2');
                        },
                        sub:true,
                    },
                },
            },
            "DIY_xiaojun":{
                audio:"ext:天牢令/image/audio:2",
                trigger:{
                    player:"loseEnd",
                },
                forced:true,
                filter:function(event,player){
                    if(event.type=='use') return false;
                    for(var i=0;i<event.cards.length;i++){
                        if(get.type(event.cards[i])=='equip'&&get.subtype(event.cards[i])!="equip1") return true;
                    }
                    return false;
                },
                content:function(){
                    'step 0'
                    event.count=1;
                    event.cards=[];
                    if(trigger.name=='lose'){
                        event.count=0;
                        for(var i=0;i<trigger.cards.length;i++){
                            if(get.type(trigger.cards[i])=='equip'&&get.subtype(trigger.cards[i])!='equip1'){
                                event.count++;
                                event.cards.push(trigger.cards[i]);
                            }
                        }
                    }
                    'step 1'
                    player.disableEquip(get.subtype(event.cards[event.count-1]));
                    'step 2'
                    var card=get.cardPile2(function(card){
                        return get.type(card)=='equip'&&player.canUse(card,player);
                    });
                    if(card){
                        player.chooseUseTarget(card,true);
                    }
                    event.count--;
                    'step 3'
                    if(event.count){
                        player.logSkill('DIY_xiaojun');
                        event.goto(1);
                    }
                },
                group:['DIY_xiaojun_equip','DIY_xiaojun_equip1'],
                subSkill:{
                    equip:{
                        trigger:{
                            player:"equipAfter",
                        },
                        filter:function(event,player){
                            return get.type(event.card)=='equip'&&get.subtype(event.card)!='equip1';
                        },
                        content:function (){
                            'step 0'
                            player.disableEquip(get.subtype(trigger.card));
                            'step 1'
                            var card=get.cardPile2(function(card){
                                return get.type(card)=='equip'&&player.canUse(card,player);
                            });
                            if(card){
                                player.chooseUseTarget(card,true);
                            }
                        },
                        forced:true,
                    },
                    equip1:{
                        trigger:{
                            player:"equipBegin",
                        },
                        forced:true,
                        silent:true,
                        filter:function(event,player){
                            return get.subtype(event.card)=="equip1"&&player.countDisabled();
                        },
                        content:function (){
                            "step 0"
                            trigger.untrigger();
                            trigger.finish();
                            player.$equip(trigger.card);
                            game.addVideo('equip',player,get.cardInfo(trigger.card));
                            game.log(player,'装备了',trigger.card);
                            "step 1"
                            var info=get.info(trigger.card);
                            if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
                                var next=game.createEvent('equip_'+trigger.card.name);
                                next.setContent(info.onEquip);
                                next.player=player;
                                next.trigger.card=trigger.card;
                                game.delayx();
                            }
                            delete player.equiping;
                            "step 2"
                            if(player.countCards('e',{subtype:"equip1"})>player.countDisabled()+1){
                                player.chooseButton(['选择一张武器牌弃置', player.getCards('e',{subtype:"equip1"})],1,true);
                            }
                            "step 3"
                            if(result.bool){player.discard(result.links)}
                            "step 4"
                            if(player.countCards('e',{subtype:"equip1"})>player.countDisabled()+1) event.goto(2)
                        },
                        popup:false,
                        sub:true,
                    },
                },
            },
            "DIY_wangong":{
                audio:"ext:天牢令/image/audio:2",
                enable:'phaseUse',
                filter:function(event,player){
        return player.countCards('hej',{subtype:"equip1"});
    },
                content:function(){
                    'step 0'
                    player.addTempSkill('DIY_wangong_base');
                    cards=player.getCards('hej',{subtype:'equip1'});
                    for(var i=0;i<cards.length;i++){
                        var hs=[];
                        hs.push(cards[i]);
                        player.chooseUseTarget(get.prompt('DIY_wangong'),'将'+get.translation(cards[i])+'当做【杀】使用','sha',hs,true,'nodistance').logSkill='DIY_wangong';
                    }
                    'step 1'
                    player.addTempSkill('DIY_wangong_base');
                },
                subSkill:{
                    base:{
                        trigger:{
                            player:"useCard1",
                        },
                        forced:true,
                        filter:function(event,player){
                            return event.card.name=='sha'&&get.type(event.cards[0])=='equip'&&get.subtype(event.cards[0])=='equip1';
                        },
                        content:function(){
                            var info=get.info(trigger.cards[0]);
                            if(info&&info.distance&&typeof info.distance.attackFrom=='number'){
                                trigger.baseDamage=1-info.distance.attackFrom;
                            }
                            if(trigger.baseDamage<1){
                                trigger.baseDamage=1;
                            }
                        },
                        sub:true,
                    },
                },
            },
			"DIY_tianze":{
				audio:"ext:天牢令/image/audio:2",
				forced:true,
				usable:1,
				trigger:{
					global:"loseAfter",
				},
				filter:function(event,player){
                    for(var i=0;i<event.cards.length;i++){
                        if(get.color(event.cards[i])=='black'&&get.type(event.cards[i],false)!='delay') return true;
                    }
                    return false;
                },
				content:function(){
					'step 0'
					trigger.player.judge('shandian',function(card){
                		var suit=get.suit(card);
						var number=get.number(card);
                		if(suit=='spade'&&number>1&&number<10) return -5;
                		return 0;
            		}).judge2=function(result){
                		return result.bool==false?true:false;
            		};
					'step 1'
					if(result.bool==false){
						let next=trigger.player.damage(3,'thunder');
						next.source = undefined;
						const card = game.createCard({name: "shandian"});
						next.card = card;
						next.cards = [card];
					}
				},
			},
			"DIY_difa":{
				audio:"ext:天牢令/image/audio:2",
				trigger:{
        			global:"judge",
    			},
				direct:true,
				content:function(){
					'step 0'
					event.cards=[];
					event.cards.push(get.cards()[0]);
					event.cards.push(get.bottomCards()[0]);
					player.chooseCardButton(event.cards,'地法：打出一张牌替换'+get.translation(trigger.player)+'的'+get.translation(trigger.judgestr)+'判定牌').ai=function(button){
            			if(get.attitude(player,trigger.player)>0){
                			return 1+trigger.judge(button.link);
            			}
            			if(get.attitude(player,trigger.player)<0){
                			return 1-trigger.judge(button.link);
            			}
            			return get.color(button.link)=='red';
        			};
					'step 1'
					if(result.bool){
						player.logSkill('DIY_difa',trigger.player);
						event.card=result.links[0];
						player.$throw(event.card);
						if(event.cards[0]==event.card){
							ui.cardPile.appendChild(event.cards[1]);
            				game.updateRoundNumber();
						}
						else{
							ui.cardPile.insertBefore(event.cards[0],ui.cardPile.firstChild);
							game.updateRoundNumber();
						}
						trigger.player.judging[0]=event.card;
            			trigger.orderingCards.addArray(event.card);
						game.log(trigger.player,'的判定牌被',player,'改为',event.card);
						game.cardsDiscard(trigger.player.judging[0]);
					}
					else{
						event.finish();
					}
					'step 2'
					if(get.color(event.card)=='red'){
						event.cards=get.bottomCards(3);
						game.log(player,'亮出了',event.cards);
						game.cardsGotoOrdering(event.cards);
        				event.videoId=lib.status.videoId++;
        				game.broadcastAll(function(player,id,cards){
            				var str;
            				if(player==game.me&&!_status.auto){
                				str='地法：获取类别各不相同的牌';
            				}
            				else{
                				str='地法';
            				}
            				var dialog=ui.create.dialog(str,cards);
            				dialog.videoId=id;
        				},player,event.videoId,event.cards);
        				event.time=get.utc();
        				game.addVideo('showCards',player,['地法',get.cardsInfo(event.cards)]);
        				game.addVideo('delay',null,2);
					}
					else{
						event.finish();
					}
					'step 3'
					var next=player.chooseButton([0,5],true);
        			next.set('dialog',event.videoId);
        			next.set('filterButton',function(button){
            			for(var i=0;i<ui.selected.buttons.length;i++){
                			if(get.type(ui.selected.buttons[i].link)==get.type(button.link)) return false;
            			}
            			return true;
        			});
        			next.set('ai',function(button){
            			return get.value(button.link,_status.event.player);
        			});
					'step 4'
					if(result.bool&&result.links){
            			event.cards2=result.links;
        			}
        			else{
            			event.finish();
        			}
        			var time=1000-(get.utc()-event.time);
        			if(time>0){
            			game.delay(0,time);
        			}
					'step 5'
					game.broadcastAll('closeDialog',event.videoId);
        			var cards2=event.cards2;
        			player.gain(cards2,'log','gain2');
				},
			},
			"DIY_dujin":{
				audio:"ext:天牢令/image/audio:2",
				trigger:{
        			player:"useCardAfter",
    			},
    			forced:true,
    			filter:function(event,player){
        			if(event.parent.name=='DIY_dujin') return false;
        			if(!event.targets||!event.card) return false;
        			var type=get.type(event.card);
        			if(type!='basic'&&type!='trick') return false;
					if(event.targets.length!=1) return false;
					if(event.targets[0]==player) return false;
        			var card=game.createCard(event.card.name,event.card.suit,event.card.number,event.card.nature);
					for(var i=0;i<event.targets.length;i++){
						if(event.targets[i].isAlive()&&player.canUse({name:event.card.name},event.targets[i],false,false)) return true;
					}
        			return false;
    			},
				content:function(){
        			var card=game.createCard(trigger.card.name,trigger.card.suit,trigger.card.number,trigger.card.nature);
        			var next=player.useCard(card,trigger.targets,false,'noai');
					next.set('addCount',false);
					next.set('animate',false);
					next.set('audio', false);
					next.set('nopopup',true);
					player.actionHistory[player.actionHistory.length-1].useCard.pop();
    			},
				group:"DIY_dujin_global",
				subSkill:{
					global:{
						audio:"DIY_dujin",
						trigger:{
        					global:"useCardAfter",
    					},
    					forced:true,
    					filter:function(event,player){
							if(event.player==player) return false;
        					if(event.parent.name=='DIY_dujin_global') return false;
        					if(!event.targets||!event.card) return false;
        					var type=get.type(event.card);
        					if(type!='basic'&&type!='trick') return false;
							if(event.targets.length!=1) return false;
							if(event.targets[0]!=player) return false;
        					var card=game.createCard(event.card.name,event.card.suit,event.card.number);
            				if(!event.targets[0].isAlive()) return false;
            				if(!event.player.canUse({name:event.card.name},event.targets[0],false,false)){
                				return false;
            				}
        					return true;
    					},
						content:function(){
        					var card=game.createCard(trigger.card.name,trigger.card.suit,trigger.card.number,trigger.card.nature);
        					var next=trigger.player.useCard(card,trigger.targets,false,'noai');
							next.set('addCount',false);
							next.set('animate',false);
							next.set('audio', false);
					        next.set('nopopup',true);
							trigger.player.actionHistory[trigger.player.actionHistory.length-1].useCard.pop();
    					},
					},
				},
			},
			"DIY_anguo":{
				audio:"ext:天牢令/image/audio:2",
				group:["DIY_anguo_hp","DIY_anguo_hs","DIY_anguo_es"],
				subSkill:{
					hp:{
						popup:false,
						trigger:{
							global:"changeHp",
						},
						usable:1,
						filter:function(event,player){
							return event.player.isMinHp();
						},
						check:function(event,player){
        					return get.attitude(player,event.player)>0;
    					},
						prompt:function(event,player){
                    		return '安国：是否令'+get.translation(event.player)+'回复1点体力？';
                		},
						content:function(){
							player.logSkill('DIY_anguo',trigger.player);
							trigger.player.recover();
						},
						sub:true,
					},
					hs:{
						popup:false,
						trigger:{
							global:["loseAfter","gainAfter"],
						},
						usable:1,
						filter:function(event,player){
							if(!event.player.isMinHandcard()) return false;
							for(var i=0;i<event.cards.length;i++){
            					if(event.cards[i].original=='h') return true;
        					}
							return false;
						},
						check:function(event,player){
        					return get.attitude(player,event.player)>0;
    					},
						prompt:function(event,player){
                    		return '安国：是否令'+get.translation(event.player)+'摸一张牌？';
                		},
						content:function(){
							player.logSkill('DIY_anguo',trigger.player);
							trigger.player.draw();
						},
						sub:true,
					},
					es:{
						popup:false,
						trigger:{
							global:["equipAfter","loseAfter","gainAfter"],
						},
						usable:1,
						filter:function(event,player){
							if(!event.player.isMinEquip()) return false;
							if(event.name=='equip') return true;
							for(var i=0;i<event.cards.length;i++){
            					if(event.cards[i].original=='e') return true;
        					}
							return false;
						},
						check:function(event,player){
        					return get.attitude(player,event.player)>0;
    					},
						prompt:function(event,player){
                    		return '安国：是否令'+get.translation(event.player)+'随机使用一张装备牌？';
                		},
						content:function(){
							var equip=get.cardPile(function(card){
            					return get.type(card)=='equip'&&trigger.player.hasUseTarget(card);
        					});
							player.logSkill('DIY_anguo',trigger.player);
							trigger.player.chooseUseTarget(equip,true);
						},
						sub:true,
					},
				},
			},
			"DIY_zhuifeng":{
				audio:"ext:天牢令/image/audio:3",
				trigger:{
					player:["loseAfter","loseHpAfter","damageEnd"],
                    global:["equipAfter","addJudgeAfter","gainAfter","loseAsyncAfter","addToExpansionAfter"],
				},
				mark:true,
                intro:{
                    content:function(storage,player){
                        var num=player.getHistory('custom',function(evt){
                            return evt.DIY_zhuifeng==true;
                        }).length;
                        if(num==0){
                            str='本回合未发动过〖椎锋〗';
                        }
                        else{
                            str='本回合已未发动过'+get.translation(num)+'次〖椎锋〗';
                        }
                        return str;
                    },
                },
				direct:true,
				filter:function(event,player){
					var num=player.getHistory('custom',function(evt){
                    	return evt.DIY_zhuifeng==true;
                	}).length;
					if(event.name=='loseHp'&&event.player==player) return event.num>num;
					if(event.name=='damage'&&event.player==player) return event.num>num;
					var evt=event.getl(player);
        			return evt&&evt.cards2&&evt.cards2.length>num;
    			},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('DIY_zhuifeng'),'是否视为使用一张决斗？',function(card,player,target){
                		return lib.filter.targetEnabled({name:'juedou'},player,target);
            		}).set('ai',function(target){
                		return get.effect(target,{name:'juedou'},_status.event.player);
            		});
					'step 1'
					if(result.bool){
						player.getHistory('custom').push({DIY_zhuifeng:true});
						player.addMark('DIY_zhuifeng',1,false);
						player.logSkill('DIY_zhuifeng',result.targets);
						player.useCard({name:'juedou'},result.targets);
					}
				},
				group:"DIY_zhuifeng_mark",
				subSkill:{
					mark:{
						trigger:{
        					global:"phaseEnd",
    					},
    					silent:true,
    					filter:function(event,player){
        					return player.countMark("DIY_zhuifeng")>0;
    					},
    					content:function(){
        					player.removeMark('DIY_zhuifeng',Infinity,false);
    					},
    					forced:true,
    					popup:false,
					},
				},
			},
			"DIY_chongjian":{
				audio:"ext:天牢令/image/audio:3",
				trigger:{
					player:"useCardToPlayered",
				},
				direct:true,
				filter:function(event,player){
					if(!player.countDiscardableCards(player,'he')) return false;
        			if(event.getParent().triggeredTargets3.length>1) return false;
        			if(get.tag(event.card,'damage')) return true;
        			return false;
    			},
				content:function(){
					'step 0'
					var next=player.chooseCard(get.prompt2('DIY_chongjian'),'he',[1,player.countCards('he')]);
        			next.ai=function(card){
            			if(ui.selected.cards.length>player.getHistory('custom',function(evt){
                    		return evt.DIY_zhuifeng==true;
                		}).length) return 0;
            			return 6-get.value(card);
        			};
					'step 1'
					if(result.bool){
						player.logSkill('DIY_chongjian',trigger.targets);
            			event.num=result.cards.length;
						event.cards=result.cards;
        			}
					else{
						event.finish();
					}
					'step 2'
					for(var i=0;i<trigger.targets.length;i++){
						var target=trigger.targets[i];
						if(target.countDiscardableCards(player,'he')>0) player.discardPlayerCard('冲坚：你可以弃置'+get.translation(target)+'至多'+get.cnNumber(event.num)+'张牌',target,'he',[0,event.num]);
					}
					'step 3'
					player.discard(event.cards);
					trigger.getParent().baseDamage++;
				},
			},
			"DIY_pindi":{
				audio:"ext:天牢令/image/audio:2",
    			enable:"phaseUse",
    			filter:function(event,player){
        			return player.countCards('he')>=(player.getStat('skill').DIY_pindi||0);
    			},
				filterTarget:function(card,player,target){
        			if(player.storage.DIY_pindi_target&&
            			player.storage.DIY_pindi_target.contains(target)){
            			return false;
        			}
        			return true;
    			},
    			selectCard:function(){
        			return (_status.event.player.getStat('skill').DIY_pindi||0);
    			},
    			prompt:function(){
        			return '弃置'+get.cnNumber(_status.event.player.getStat('skill').DIY_pindi||0)+'张牌并令一名角色摸/弃置'+get.cnNumber(_status.event.player.getStat('skill').DIY_pindi+1||1)+'张牌';
    			},
    			check:function(card){
        			var num=_status.event.player.getStat('skill').DIY_pindi||0;
        			return 6+num-get.value(card);
    			},
    			filterCard:true,
    			position:"he",
    			content:function(){
        			'step 0'
					if(!player.storage.DIY_pindi_target){
            			player.storage.DIY_pindi_target=[];
        			}
					player.storage.DIY_pindi_target.push(target);
					event.num=player.getStat('skill').DIY_pindi;
					var evt=_status.event.getParent('phase');
        			if(evt&&evt.name=='phase'&&!evt.DIY_pindi){
            			var next=game.createEvent('rerende_clear');
            			_status.event.next.remove(next);
            			evt.after.push(next);
            			evt.DIY_pindi=true;
            			next.player=player;
            			next.setContent(lib.skill.DIY_pindi_clear.content);
        			}
        			player.syncStorage();
					if(target.countCards('he')==0) event._result={index:0};
					else{
						player.chooseControlList([
						    '令'+get.translation(target)+'摸'+get.cnNumber(event.num)+'张牌',
							'令'+get.translation(target)+'弃置'+get.cnNumber(event.num)+'张牌'
					    ],function(){
                		    return _status.event.choice;
            		    }).set('choice',get.attitude(player,target)>0?0:1);
    			    }
					'step 1'
        			if(result.index==0){
            			target.draw(event.num);
        			}
        			else{
            			target.chooseToDiscard(event.num,'he',true);
        			}
				},
				subSkill:{
					clear:{
						trigger:{
                			player:"phaseAfter",
            			},
            			silent:true,
            			content:function(){
                			delete player.storage.DIY_pindi_target;
            			},
            			sub:true,
            			forced:true,
            			popup:false,
					},
				},
				ai:{
					order:8,
					result:{
            			target:function(player,target){
                			var att=get.attitude(player,target);
                			var num=(player.getStat('skill').DIY_pindi||0)+1;
                			if(att<=0&&target.countCards('he')<num) return 0;
                			return att*num;
            			},
        			},
				},
			},
			"DIY_faen":{
				audio:"ext:天牢令/image/audio:2",
				trigger:{
                    global:["dying","loseAfter"],
                },
				filter:function(event,player){
		if(event.name=='dying') return true;
		if(event.player.countCards('h')) return false;
        return event.hs&&event.hs.length>0&&event.player.isAlive();
    },
				check:function(event,player){
        return get.attitude(player,event.player)>0;
    },
	            content:function(){
        player.line(trigger.player,'green');
        trigger.player.draw();
    },
			},
			"DIY_shangyi":{
				audio:"ext:天牢令/image/audio:2",
				enable:"phaseUse",
    			usable:1,
    			filter:function(event,player){
        			return player.countCards('he')>0&&game.hasPlayer((current)=>lib.skill.DIY_shangyi.filterTarget(null,player,current));
    			},
    			filterTarget:function(card,player,target){
        			return target!=player&&target.countCards('h')>0;
    			},
    			content:function(){
					'step 0'
        			target.viewHandcards(player);
					player.viewHandcards(target);
					'step 1'
					var list=[];
        			if(player.countCards('h',{color:'red'})) list.push('红色');
        			if(player.countCards('h',{color:'black'})) list.push('黑色');
					list.push('cancel2');
        			player.chooseControl(list).set('prompt','尚义:你可以用一种颜色的手牌交换'+get.translation(target)+'区域内任意张不同颜色的牌').set('ai',function(){
						var player=_status.event.player;
						if(player.countCards('h',{color:'red'})==1&&player.countCards('h',{color:'black'})>1) return '红色';
            			if(player.countCards('h',{color:'black'})) return '黑色';
						return 'cancel2';
        			});
					'step 2'
					if(result.control!='cancel2'){
					    event.control=result.control;
        			    if(event.control=='红色'){
            			    event.cards1=player.getCards('h',{color:'red'});
							event.color='black';
							event.cards2=target.getCards('hej',{color:'black'});
        			    }
        			    else{
            			    event.cards1=player.getCards('h',{color:'black'});
							event.color='red';
							event.cards2=target.getCards('hej',{color:'red'});
        			    }
					}
					else{
						event.finish();
					}
					'step 3'
					player.chooseCardButton('【尚义】：用'+get.translation(event.cards1)+'交换'+get.translation(target)+'区域内任意张'+get.translation(event.color)+'牌',event.cards2,[0,Infinity]).set('ai',function(button){
            			return get.value(button.link);
        			});
					'step 4'
					if(result.bool){
						game.log(player,'用',get.cnNumber(event.cards1.length),'张',event.control,'牌交换了',target,'的',get.cnNumber(result.links.length),'张',get.translation(event.color),'牌');
						player.gain(result.links);
						player.$gain2(result.links);
						target.gain(event.cards1);
						target.$gain2(event.cards1);
					}
				},
				ai:{
        			order:6,
        			result:{
            			player:0.5,
            			target:function(player,target){
                			if(target.hasSkillTag('noh')) return 0;
                			return -1;
            			},
        			},
    			},
			},
			"DIY_xiangyu":{
				audio:"ext:天牢令/image/audio:2",
				mod:{
					attackRange:function(player,num){
						var num2=0;
						var previous=player.getPrevious();
						var next=player.getNext();
						if(previous.hp<=player.hp&&next.hp<=player.hp) num2++;
						if(previous.countCards('h')<player.countCards('h')&&next.countCards('h')<player.countCards('h')) num2++;
						if(previous.countCards('ej')<player.countCards('ej')&&next.countCards('ej')<player.countCards('ej')) num2++;
                        return num+num2;
                    },
				},
				trigger:{
        			player:"useCardToPlayered",
    			},
    			forced:true,
    			filter:function(event,player){
        			return event.card.name=='sha'&&!event.getParent().directHit.contains(event.target);
    			},
    			logTarget:"target",
    			content:function(){
					var num=0;
					var previous=player.getPrevious();
					var next=player.getNext();
					if(previous.hp<=player.hp&&next.hp<=player.hp) num++;
					if(previous.countCards('h')<player.countCards('h')&&next.countCards('h')<player.countCards('h')) num++;
					if(previous.countCards('ej')<player.countCards('ej')&&next.countCards('ej')<player.countCards('ej')) num++;
        			var id=trigger.target.playerid;
        			var map=trigger.getParent().customArgs;
        			if(!map[id]) map[id]={};
        			if(typeof map[id].shanRequired=='number'){
            			map[id].shanRequired+=num;
        			}
        			else{
            			map[id].shanRequired=num+1;
        			}
					game.log(trigger.target,'需要额外使用',get.cnNumber(num),'张','#y【闪】','来抵消',player,'使用的',trigger.card);
    			},
    			ai:{
        			"directHit_ai":true,
        			skillTagFilter:function(player,tag,arg){
            			if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
        			},
    			},
			},
			"DIY_fuhai":{
				audio:"ext:天牢令/image/audio:2",
				enable:"phaseUse",
				filter:function(event,player){
					var previous=player.getPrevious();
					var next=player.getNext();
					if(previous.getHistory('custom',function(evt){
            			return evt.DIY_fuhai_target==true;
        			}).length>1&&next.getHistory('custom',function(evt){
            			return evt.DIY_fuhai_target==true;
        			}).length>1) return false;
        			return player.countCards('h')>0&&player.canCompare(previous)&&player.canCompare(next);
    			},
				multitarget:true,
    			multiline:true,
				content:function(){
					'step 0'
					event.background=ui.background.style.backgroundImage;
					event.targets=game.filterPlayer(function(current){
						if(!player.canCompare(current)) return false;
						if(current.getHistory('custom',function(evt){
            				return evt.DIY_fuhai_target==true;
        				}).length>1) return false;
                		return current==player.getPrevious()||current==player.getNext();
            		});
					player.getHistory('custom').push({DIY_fuhai:true});
					for(var i=0;i<event.targets.length;i++){
						event.targets[i].getHistory('custom').push({DIY_fuhai_target:true});
					}
					'step 1'
					player.line(event.targets,'green');
					ui.background.setBackgroundImage('extension/天牢令/fuhai.gif');
					ui.background.setBackgroundImage(ui.background.style.backgroundImage);
        			player.chooseToCompare(event.targets).callback=lib.skill.DIY_fuhai.callback;
					'step 2'
					event.num1=player.storage.DIY_fuhai_number;
					event.num2=event.targets[0].storage.DIY_fuhai_number;
					if(event.targets.length>1){
						event.num3=event.targets[1].storage.DIY_fuhai_number;
					}
					else{
						event.num3=999;
					}
					'step 3'
					if(event.num1<event.num2&&event.num1<event.num3){
						player.popup('潮落','orange');
						for(var i=0;i<event.targets.length;i++){
						        event.targets[i].popup('潮起','green');
					        }
						player.draw(player.getHistory('custom',function(evt){
            				return evt.DIY_fuhai==true;
        				}).length);
						ui.background.style.backgroundImage=event.background;
						event.finish();
					}
					else{
						if(event.num2<event.num3){
							player.popup('潮起','wood');
							player.line(event.targets[0],'green');
							event.targets[0].popup('潮落','orange');
							game.broadcastAll(function(target1,target2){
            					game.swapSeat(target1,target2);
        					},player,event.targets[0]);
							player.gain(event.targets[0].storage.DIY_fuhai_card,'gain2','log');
							ui.background.style.backgroundImage=event.background;
							event.finish();
						}
						if(event.num2>event.num3){
							player.popup('潮起','wood');
							player.line(event.targets[1],'green');
							event.targets[1].popup('潮落','orange');
							game.broadcastAll(function(target1,target2){
            					game.swapSeat(target1,target2);
        					},player,event.targets[1]);
							player.gain(event.targets[1].storage.DIY_fuhai_card,'gain2','log');
							ui.background.style.backgroundImage=event.background;
							event.finish();
						}
						if(event.num2==event.num3){
							player.popup('潮起','wood');
							player.line(event.targets,'green');
							for(var i=0;i<event.targets.length;i++){
						        event.targets[i].popup('潮落','orange');
					        }
							player.chooseTarget('浮海：请选择要交换座位的角色',true,function(card,player,target){
                				return event.targets.contains(target);
            				}).set('ai',function(target){
                				return Math.random();
            				});
						}
					}
					'step 4'
					if(result.bool){
						game.broadcastAll(function(target1,target2){
            				game.swapSeat(target1,target2);
        				},player,result.targets[0]);
						if(result.targets[0]==event.targets[0]){
							player.gain(event.targets[0].storage.DIY_fuhai_card,'gain2','log');
						}
						else{
							player.gain(event.targets[1].storage.DIY_fuhai_card,'gain2','log');
						}
					}
					ui.background.style.backgroundImage=event.background;
    			},
				callback:function(){
					player.storage.DIY_fuhai_number=event.num1;
					player.storage.DIY_fuhai_card=event.card1;
					target.storage.DIY_fuhai_number=event.num2;
					target.storage.DIY_fuhai_card=event.card2;
				},
				group:"DIY_fuhai_compare",
				subSkill:{
					compare:{
						audio:"DIY_fuhai",
						trigger:{
        					player:"compare",
        					target:"compare",
    					},
    					filter:function(event,player){
        					return event.num1==event.num2;
    					},
    					direct:true,
						content:function(){
							player.logSkill('DIY_fuhai_compare');
							if(trigger.player!=player){
								if(trigger.num1<13){
									trigger.num1++;
									game.log(trigger.player,'的拼点牌点数+1');
								}
								else{
									trigger.num2--;
									game.log(player,'的拼点牌点数-1');
								}
							}
							else{
								if(trigger.num2<13){
									trigger.num2++;
									game.log(trigger.target,'的拼点牌点数+1');
								}
								else{
									trigger.num1--;
									game.log(trigger.player,'的拼点牌点数-1');
								}
							}
						},
					},
				},
				ai:{
        		    order:7,
				},
			},
			"DIY_yinghun":{
				audio:"ext:天牢令/image/audio:2",
				trigger:{
					player:["damageEnd","phaseZhunbeiBegin"],
					global:"roundStart",
				},
				round:1,
				forceDie:true,
				direct:true,
    			preHidden:true,
				filter:function(event,player){
					if(event.name=='damage'||event.name=='phaseZhunbei') return player.maxHp>0;
        			return game.roundNumber>1&&player.maxHp>0;
    			},
    			content:function(){
					'step 0'
					var str='你可以<u>失去1点体力</u>并令一名其他角色执行一项:<br>①摸一张牌并弃置X张牌;②摸X张牌并弃置一张牌。（X为你的已损体力值）';
					if(!player.isAlive()){
						str='你可以<u>减1点体力上限</u>并令一名其他角色执行一项:<br>①摸一张牌并弃置X张牌;②摸X张牌并弃置一张牌。（X为你的已损体力值）';
					}
        			player.chooseTarget(get.prompt('DIY_yinghun'),str,function(card,player,target){
            			return player!=target;
        			}).set('ai',function(target){
            			var player=_status.event.player;
            			if(player.getDamagedHp()==1&&target.countCards('he')==0){
                			return 0;
            			}
            			if(get.attitude(_status.event.player,target)>0){
                			return 10+get.attitude(_status.event.player,target);
            			}
            			if(player.getDamagedHp()==1){
                			return -1;
            			}
            			return 1;
        			}).setHiddenSkill(event.name);
					'step 1'
					if(result.bool){
						event.num=player.getDamagedHp();
						if(player.isAlive()){
							player.loseHp();
							event.num++;
						}
						else{
							player.maxHp--;
							player.update();
							event.num--;
						}
            			player.logSkill(event.name,result.targets);
            			event.target=result.targets[0];
            			if(event.num==1){
                			event.directcontrol=true;
            			}
            			else{
                			var str1='摸'+get.cnNumber(event.num,true)+'弃一';
                			var str2='摸一弃'+get.cnNumber(event.num,true);
                			player.chooseControl(str1,str2,function(event,player){
                    			return _status.event.choice;
                			}).set('prompt','英魂：请选择一项').set("displayIndex", false).set('choiceList',[
                    			'令'+get.translation(event.target)+'摸'+get.cnNumber(event.num,true)+'弃一',
                    			'令'+get.translation(event.target)+'摸一弃'+get.cnNumber(event.num,true),
                            ]).set('choice',get.attitude(player,event.target)>0?str1:str2);
                			event.str=str1;
            			}
        			}
        			else{
            			event.finish();
        			}
					'step 2'
					if(event.directcontrol||result.control==event.str){
            			event.target.draw(event.num);
            			event.target.chooseToDiscard(true,'he');
        			}
        			else{
            			event.target.draw();
            			event.target.chooseToDiscard(event.num,true,'he');
        			}
				},
				ai:{
        			threaten:function(player,target){
						if(target.isAlive()){
            			    if(target.getDamagedHp()==0) return 0.5;
            			    if(target.getDamagedHp()==1) return 1;
            			    if(target.getDamagedHp()==2) return 1.5;
            			    return 2;
						}
        			},
    			},
			},
        },
        dynamicTranslate:{
            "DIY_yizan_info":function(player){
                if(!player.storage.DIY_yizan) return '你可以将一张基本牌当做任意一张基本牌打出或使用。';
                return '你可以将一张牌当做任意一张基本牌打出或使用。';
            },
            "DIY_bazhen_info":function(player){
                if(player.isEmpty(2)) return '锁定技，你视为装备着【八卦阵】。';
                return '锁定技，你视为装备着【先天八卦阵】。';
            },
            "DIY_chuhai":function(player){
                if(player.storage.DIY_xianghai) return '出牌阶段限一次，你可以弃置一张牌并对一名其他角色造成1点伤害或令一名其他角色弃置一张牌并对你造成1点伤害。';
                return '剩余可用3次。出牌阶段限一次，你可以弃X张牌并对一名其他角色造成一点伤害或令一名其他角色弃X张牌并对你造成一点伤害（X为此技能发动次数+1）。';
            },
        },
        translate:{
            "DIY_jijun":"集军",
            "DIY_jijun_info":"锁定技，①当你使用牌指定唯一目标时，你可以进行判定；②你将你的判定牌置于武将牌上称为“方”。",
            "DIY_fangtong":"方统",
            "DIY_fangtong_info":"结束阶段，你可以弃置总点数之和为36的一张牌与任意张「方」，并对一名其他角色造成3点雷电伤害。",
            "DIY_guanchao":"观潮",
            "DIY_guanchao_info":"当你使用牌时，若你此阶段使用过的所有牌的点数为递增/递减，你摸一张牌。",
            "DIY_guanchao_dizeng":"观潮",
            "DIY_guanchao_dizeng_info":"",
            "DIY_guanchao_dijian":"观潮",
            "DIY_guanchao_dijian_info":"",
            "DIY_xunxian":"逊贤",
            "DIY_xunxian_info":"每回合每种牌名限一次，当你使用或打出的牌结算完成后，你可以将此牌对应的所有实体牌交给一名其他角色,若此时不是你的回合，你摸一张牌。",
            "DIY_funan":"复难",
            "DIY_funan_info":"其他角色使用或打出牌响应你使用的牌时，你获得其使用或打出的牌。",
            "DIY_xunjie":"训诫",
            "DIY_xunjie_info":"结束阶段，你可令一名其他角色摸等同于场上方块牌数的牌，然后弃置X张牌（X为此前该技能发动过的次数）。若有角色因此法弃置了所有牌，则你发动〖训诫〗时，你摸一张牌（可叠加）。",
            "DIY_jianyan":"荐言",
            "DIY_jianyan_info":"出牌阶段每种类别限一次，你可以声明一种牌的类别或颜色，并亮出牌库中第一张符合你声明的牌，然后你令一名角色获得此牌。",
            "DIY_zhuhai":"诛害",
            "DIY_zhuhai_info":"一名其他角色的结束阶段开始时，若其于此回合内使用过指定其他角色为目标的牌，你可以视为对其使用一张【杀】。",
            "DIY_qianya":"谦雅",
            "DIY_qianya_info":"当你成为锦囊牌的目标时，你可以展示X张牌，并将其交给一名角色（X为此牌目标数且至多为3）。",
            "DIY_shuomeng":"说盟",
            "DIY_shuomeng_info":"①出牌阶段开始/结束时，你可以与一名角色拼点。<br>②锁定技，当你拼点赢时，视为你使用【无中生有】；当你拼点没赢时，视为拼点发起人对你使用【过河拆桥】。",
            "DIY_shuomeng2":"说盟",
            "DIY_shuomeng2_info":"",
            "DIY_zhenyong":"征荣",
            "DIY_zhenyong_info":"当你使用一张非装备牌指定目标后，你进行判定，若结果不为黑色，你可以将其中一名其他角色的一张牌置于你的武将牌上，称为「荣」。",
            "DIY_hongju":"鸿举",
            "DIY_hongju_info":"觉醒技，准备阶段，若你武将牌上「荣」的数量不小于3。你可以用任意数量的手牌交换等量的「荣」。你减1点体力上限并修改〖征荣〗然后获得〖清侧〗。",
            "DIY_qingce":"清侧",
            "DIY_qingce_info":"出牌阶段开始时，若你武将牌上有「荣」，你可以用任意数量的手牌交换等量的「荣」并将所有手牌至于武将牌上，然后从牌堆或弃牌堆中随机获得X(X为「荣」的数量且不大于8)张牌名各不相同且副类别不同的牌。若如此做，结束阶段，你弃置所有牌并获得因〖清侧〗置于武将牌上的牌且本回合出牌阶段，你可以用任意数量的手牌交换等量的「荣」。",
            "DIY_qingce2":"",
            "DIY_qingce2_info":"",
            "DIY_qingce3":"",
            "DIY_qingce3_info":"",
            "DIY_qingce4":"清侧",
            "DIY_qingce4_info":"",
            "DIY_yuanhu":"援护",
            "DIY_yuanhu_info":"出牌阶段，你可以弃置一张手牌并令一名角色装备一张牌，然后根据此装备牌的类型执行以下对应效果。<br>武器牌：你弃置场上一张牌；<br>防具牌：该角色摸一张牌；<br>坐骑牌：该角色回复1点体力；<br>宝物牌：该角色手牌上限+1至其下回合结束。",
            "DIY_yuanhu_equip5":"根据你因〖援护〗的get.suit(cards)，target[0]使用一张：",
            "DIY_yuanhu_equip5_info":"<br>♠→武器牌；<br>♥→防具牌；<br>♦→坐骑牌；<br>♣→宝物牌。",
            "DIY_yuanhu2":"援护",
            "DIY_yuanhu2_info":"",
            "DIY_bizhuan":"辟撰",
            "DIY_bizhuan_info":"当你使用黑色牌后，或你成为其他角色使用黑色牌的目标后，你可以将牌堆顶的一张牌置于武将牌上，称为“书”；你每有一张“书” ，手牌上限+1",
            "DIY_tongbo":"通博",
            "DIY_tongbo_info":"摸牌阶段摸牌后，你可以用任意张牌替换等量的“书”，然后若你的“书”包含四种花色，你将所有“书”交给一名角色",
            "DIY_jieying":"节应",
            "DIY_jieying_info":"回合开始时，若场上没有拥有“节”标记的角色，你获得1个“节”标记；结束阶段，你可以将你的一个“节”标记交给一名角色；有“节”标记的角色使用【杀】或普通锦囊牌无距离限制且可多指定一个目标，且当其造成伤害后，若其没有〖节应〗，其无法再使用牌直到回合结束。有“节”的其他角色回合结束时，其移去“节”标记，然后你获得其所有手牌。",
            "DIY_weipo":"危迫",
            "DIY_weipo_info":"锁定技，其他角色使用【杀】或普通锦囊牌指定你为目标后，若你的手牌数小于X，则你将手牌摸至X张，并记录摸牌事件结算后的手牌数Y。此牌结算结束后，若你的手牌数小于Y，则你将一张手牌交给此牌的使用者。（X为你的体力上限且至多为5） ",
            "DIY_jieying_mark":"节应",
            "DIY_jieying_mark_info":"",
            "DIY_jieying_mark2":"节应",
            "DIY_jieying_mark2_info":"",
            "DIY_jieying_mark3":"节应",
            "DIY_jieying_mark3_info":"",
            "DIY_juzhan":"拒战",
            "DIY_juzhan_info":"①当你成为其他角色【杀】/伤害性锦囊的目标后，你可以与其各摸一张牌，然后其本回合内不能再对你使用牌。<br>②当你使用【杀】/伤害性锦囊指定一名角色为目标后，你可以获得其一张牌，然后你本回合内不能再对其使用牌。",
            "DIY_yaoming":"邀名",
            "DIY_yaoming_info":"每回合限一次，当你造成或受到伤害后，你摸X张牌然后执行第X项：①. 你摸一张牌；②. 弃置一名其他角色一张牌；③.令一名其他角色失去一点体力；④.令一名其他角色横置；⑤.令一名其他角色翻面。（X为你本轮造成/受到伤害次数且至多为5）",
            "DIY_shuangren":"双刃",
            "DIY_shuangren_info":"①出牌阶段开始/结束时，你可以与一名角色拼点。<br>②锁定技，当你拼点赢时，你视为对任意一名角色使用一张【杀】（不计入次数限制）；当你拼点输时，你视为对任意一名角色使用一张【决斗】。",
            "DIY_shuangren_sha":"双刃",
            "DIY_shuangren_sha_info":"",
            "DIY_zhenwei":"镇卫",
            "DIY_zhenwei_info":"转化技，当一名角色成为【杀】或锦囊牌的目标时（使用者不是你），若此牌的目标角色数为1，你可以弃置一张牌，然后①摸一张牌，将牌转移给你；②令此牌无效。",
            "DIY_jianxiang":"荐降",
            "DIY_jianxiang_info":"当场上手牌数为最值的一名角色成为牌的目标时，你可以令其摸一张牌。",
            "DIY_shenshi":"审时",
            "DIY_shenshi_info":"转换技，阳：你可以将一张牌当作上一张使用的基本牌使用；阴：你可以将一张牌当作上一张使用的普通锦囊牌使用。",
            "DIY_jixu":"击虚",
            "DIY_jixu_info":"出牌阶段限一次，你可令至少一名其他角色各猜测你的手牌区里是否有【杀】。系统公布这些角色各自的选择和猜测结果。若你的手牌区里：<br>有【杀】，你本回合使用【杀】的上限+X，且当你于此阶段内使用【杀】/普通锦囊牌选择目标后，你可令所有选择“否”的角色也成为此【杀】/普通锦囊牌的目标；<br>没有【杀】，你视为对所有选择“是”的角色使用一张【杀】。<br>然后你摸X张牌（X为猜错的角色数）。若没有猜错的角色，你结束此阶段并跳过弃牌阶段。",
            "DIY_jixu_sha":"击虚",
            "DIY_jixu_sha_info":"",
            "DIY_duorui":"夺锐",
            "DIY_duorui_info":"当你使用一张基本牌或普通锦囊牌指定目标后，若目标中有角色没有被〖夺锐〗，你可以进行一次判定，若结果点数对应的集合A∩B=[8,10]为空集，你可以获得一名未被〖夺锐〗的目标的一个技能（限定技除外）且其此技能失效直到你的下回合开始。",
            "DIY_duorui2":"夺锐",
            "DIY_duorui2_info":"",
            "DIY_duorui_baiban":"夺锐",
            "DIY_duorui_baiban_info":"",
            "DIY_zhiti":"止啼",
            "DIY_zhiti_info":"锁定技，已受伤其他角色的手牌上限-1。若场上已受伤的角色数：不小于1，你的手牌上限+1；不小于3，你于摸牌阶段开始时令额定摸牌数+1；不小于5，当你受到伤害时，你废除一名角色的一个随机装备栏。",
            "DIY_zhiti2":"止啼",
            "DIY_zhiti2_info":"",
            "DIY_wanglie":"往烈",
            "DIY_wanglie_info":"出牌阶段，你使用的第一张牌无距离限制；当你于回合内使用【杀】或普通锦囊牌指定目标时，你可以获得其一张牌，然后令此牌不能被响应，若此牌不是你本回合使用的第一张牌，本回合内你不能再使用牌。",
            "DIY_wanglie_use":"往烈",
            "DIY_wanglie_use_info":"",
            "DIY_baobian":"豹变",
            "DIY_baobian_info":"①锁定技，游戏开始时/当你的体力值发生改变时，若你的“豹变”牌<5，则你更改势力并将一张相同势力角色武将牌置于你的武将牌上称为“豹变”牌然后你获得此武将牌上的所有技能；②出牌阶段限X次，你可以弃置一张“豹变”牌并失去其上所有技能然后发动一次〖豹变①〗（X为你的“豹变”牌数）。",
            "DIY_baobian2":"豹变",
            "DIY_baobian2_info":"",
            "DIY_hongyuan":"弘援",
            "DIY_hongyuan_info":"①摸牌阶段开始时，若你没有“援”标记，你可以获得两枚“援”标记。若如此做，你的摸牌数-1。②其他角色的摸牌阶段开始时，若你有“援”标记，你可以移除一枚“援”标记并令其额外摸牌数+2。③准备阶段，你移去所有“援”标记并摸等量的牌。",
            "DIY_huanshi":"缓释",
            "DIY_huanshi_info":"在任意角色的判定牌生效前，你可以选择一项：1、打出一张手牌代替之。2、亮出牌堆顶的一张牌代替之。",
            "DIY_mingzhe":"明哲",
            "DIY_mingzhe_info":"当你失去一张红色牌后，你可以获得一张黑色牌。",
            "DIY_yinbing":"引兵",
            "DIY_yinbing_info":"弃牌阶段开始时，你可以摸X张牌并将至少X张牌置于武将牌上（X为全场存活人数）。每当你受到【杀】或【决斗】的伤害时，你移去一张「引兵」牌，若如此做你令此伤害的数值减为1并摸两张牌。",
            "DIY_juedi":"绝地",
            "DIY_juedi_info":"锁定技，准备阶段，若你的武将牌上有「引兵」牌，你选择一项：①移去「引兵」牌，回复1点体力并将手牌补至全场最多；②将「引兵」牌交给一名其他角色，其回复1点体力并摸等量的牌。",
            "DIY_shelie":"涉猎",
            "DIY_shelie_info":"锁定技，你跳过你的摸牌阶段，并改为依次获得指定一种类型的牌（最多四次），然后从牌堆中摸取之。",
            "DIY_gongxin":"攻心",
            "DIY_gongxin_info":"出牌阶段限一次，你可以选择一种花色，然后观看一名其他角色的手牌并展示其中所有的与你选择花色相同的牌，然后若展示的牌数：小于一，你将手牌数摸至与其相同；为一，你弃置之并对其造成一点伤害；大于一，你获得其中一张红桃牌。",
            "DIY_botu":"博图",
            "DIY_botu_info":"每轮限一次，回合结束时，若你本回合内进入过弃牌堆中的牌包含四种花色，则你可以进行一个额外回合。",
            "DIY_botu_suit":"",
            "DIY_botu_suit_info":"",
            "DIY_wuhun":"武魂",
            "DIY_wuhun_info":"锁定技，当你受到伤害后，伤害来源获得X个“梦魇”标记（X为伤害点数）,若你未发动〖追魂〗，你摸一张牌。",
            "DIY_wushen":"武神",
            "DIY_wushen_info":"锁定技，你的红桃手牌均视为【杀】；锁定技，你使用红桃【杀】无距离和次数限制且不可被响应。",
            "DIY_wuhun_dying":"追魂",
            "DIY_wuhun_dying_info":"锁定技，当你进入濒死状态时，你摸X张牌（X为场上有“梦魇”标记角色数），将体力值回复至体力上限，然后开始使命。",
            "DIY_wuhun_hun":"追魂",
            "DIY_wuhun_hun_info":"使命技，①当你即将对一名角色造成伤害时，若其有“梦魇”标记，你移去其一枚“梦魇”标记并令此伤害+1；②当你进入濒死状态时，若场上有“梦魇”标记角色数>0，你将体力值回复至1；③使命：当你杀死一名角色时，若其有“梦魇”标记，你令有“梦魇”标记的角色死亡并于本回合结束时死亡；④失败：当一名角色进入濒死状态时，若其有“梦魇”标记且伤害来源不为你，你死亡。",
            "DIY_zhuihun_dying":"追魂",
            "DIY_zhuihun_dying_info":"",
            "DIY_zhuihun":"追魂",
            "DIY_zhuihun_info":"",
            "DIY_zhuihun_false":"追魂",
            "DIY_zhuihun_false_info":"",
            "DIY_baonu":"狂暴",
            "DIY_baonu_info":"锁定技，游戏开始时，你获得2枚“暴怒”标记；锁定技，当你造成/受到1点伤害后，你获得1枚“暴怒”标记。",
            "DIY_wumou":"无谋",
            "DIY_wumou_info":"锁定技，当你使用普通锦囊牌后，本回合你的普通锦囊牌均视为【杀】且不计入次数上限。",
            "DIY_wuqian":"无前",
            "DIY_wuqian_info":"出牌阶段，你可以摸一张牌弃置1枚“暴怒”标记并选择一名本回合内未选择过的其他角色，你获得技能〖无双〗和〖神戟〗并令其防具无效直到回合结束。",
            "DIY_shenfen":"神愤",
            "DIY_shenfen_info":"出牌阶段限一次，你可以弃置X枚“暴怒”标记并选择所有其他角色，对这些角色各造成1点伤害。然后这些角色先各弃置其装备区里的牌，再各弃置全部手牌。（X为存活人数-1）",
            "DIY_shenji":"神戟",
            "DIY_shenji_info":"锁定技，你使用【杀】指定的目标数上限+2，次数上限+2且无距离限制。",
            "DIY_wushuang":"无双",
            "DIY_wushuang_info":"锁定技，当你使用【杀】或【决斗】指定目标后，你令此牌需要依次使用或打出两张【闪】或【杀】响应。当你使用【杀】造成伤害时，本回合你使用【杀】次数上限+1。",
            "DIY_wushuang1":"无双",
            "DIY_wushuang1_info":"",
            "DIY_wushuang2":"无双",
            "DIY_wushuang2_info":"",
            "DIY_wushuang_sha":"无双",
            "DIY_wushuang_sha_info":"",
            "DIY_wushuang_sha2":"无双",
            "DIY_wushuang_sha2_info":"",
            "DIY_wumou2":"无谋",
            "DIY_wumou2_info":"",
            "DIY_zhuihun_finish":"追魂",
            "DIY_zhuihun_finish_info":"",
            "DIY_zhuihun_finish2":"追魂",
            "DIY_zhuihun_finish2_info":"",
            "DIY_qixing":"七星",
            "DIY_qixing_info":"使命技，①准备阶段/结束阶段/当你受到伤害时，若你满足一个特定条件，你点亮一颗“星”加一点体力上限并回复一点体力然后摸三张牌;②你的手牌上限+X（X为已点亮“星”数）；③使命:当你点亮7颗“星”时，你变身「祭风卧龙」;④失败:当你进入濒死状态时，你移去所有“星”并摸等量的牌然后回复至等量体力。",
            "DIY_xiangxing":"禳星",
            "DIY_xiangxing_info":"锁定技，游戏开始时，你获得7枚「星」；每当你累计扣减7点体力，你失去一枚「星」，并造成7点雷属性伤害，随机分配给其他角色；当你失去全部「星」后，你的体力上限变为3。",
            "DIY_yueyin":"月隐",
            "DIY_yueyin_info":"锁定技，你的每一枚「星」对应的一个特定条件，当你失去「星」时，若满足此条件，则不造成伤害。",
            "DIY_fengqi":"风起",
            "DIY_fengqi_info":"准备阶段和结束阶段，你可以视为使用任意一张普通锦囊牌。",
            "DIY_gaiming":"改命",
            "DIY_gaiming_info":"锁定技，在你的判定牌生效前，你观看牌堆顶的7张牌并选择一张作为判定结果，此结果不可更改。",
            "DIY_qixing_dying":"七星",
            "DIY_qixing_dying_info":"",
            "DIY_sanwen":"散文",
            "DIY_sanwen_info":"当你使用或打出一张非装备牌时，若你打出过相同牌名的牌，你可以摸一张牌。",
            "DIY_qiai":"七哀",
            "DIY_qiai_info":"每轮限一次，当一名其他角色受到伤害时，你可以与其交换手牌，然后若你的手牌数>其的手牌数，其回复一点体力；你的手牌数<其的手牌数，其摸一张牌。",
            "DIY_denglou":"登楼",
            "DIY_denglou_info":"每轮限一次，当你失去最后的手牌时，你可以观看牌堆顶的4X张牌，依次使用其中的所有基本牌（不能使用则弃置），然后获得其余的牌（X为你此次失去的手牌数且最多为4）。",
            "DIY_qiai_mark":"七哀",
            "DIY_qiai_mark_info":"",
            "DIY_guolun":"过论",
            "DIY_guolun_info":"出牌阶段，你可以展示一名未有“论”的其他角色的一张手牌，然后展示你的一张牌。你与其交换这两张牌，然后若你展示的牌点数较小，你摸一张牌其获得一枚“论”直到回合结束；若其展示的牌数小，其摸一张牌。",
            "DIY_songsang":"送丧",
            "DIY_songsang_info":"限定技，当一名角色进入濒死状态时，你可以加一点体力上限并回复一点体力。",
            "DIY_zhanji":"展骥",
            "DIY_zhanji_info":"锁定技，当你不因〖自书〗/〖展骥〗而获得牌时，你摸一张牌。",
            "DIY_guolun_mark":"过论",
            "DIY_guolun_mark_info":"",
            "DIY_qiaoshi":"樵拾",
            "DIY_qiaoshi_info":"一名其他角色的出牌阶段开始时，你可以摸一张牌，并令其获得一张【杀】。",
            "DIY_yanyu":"燕语",
            "DIY_yanyu_info":"①摸牌阶段开始时，你可以改为获得两张【杀】，若如此做，本回合的出牌阶段，你可以重铸任意张【杀】并于回合结束摸等量的牌（至多摸三）；②当你使用或打出一张【杀】时，你可以令一名角色获得一张【杀】。",
            "DIY_yanyu_phaseUse":"燕语",
            "DIY_yanyu_phaseUse_info":"",
            "DIY_yanyu_sha":"燕语",
            "DIY_yanyu_sha_info":"",
            "DIY_yanyu_draw":"燕语",
            "DIY_yanyu_draw_info":"",
            "DIY_yanyu_man":"燕语",
            "DIY_yanyu_man_info":"",
            "DIY_xunxun":"恂恂",
            "DIY_xunxun_info":"摸牌阶段开始时，你可以观看牌堆顶的X张牌，然后将其中的两张牌置于牌堆顶，并将其余的牌以任意顺序置于牌堆底。（X为场上存活人数且至少为4）",
            "DIY_wangxi":"忘隙",
            "DIY_wangxi_info":"每当你对其他角色造成1点伤害后，或受到其他角色造成的1点伤害后，你可以与其中手牌较少的一名角色各摸一张牌。",
            "DIY_jili":"寄篱",
            "DIY_jili_info":"锁定技，当一名其他角色成为基本牌或普通锦囊牌的目标时，若你既不是此牌的使用者也不是目标，你也成为此牌的目标。",
            "DIY_zhidao":"雉盗",
            "DIY_zhidao_info":"锁定技，当你成为其他角色使用牌的目标时，你随机获得其区域内一张牌。",
            "DIY_jili_audio":"",
            "DIY_jili_audio_info":"",
            "DIY_shensu":"神速",
            "DIY_shensu_info":"①你可以跳过你的判定阶段/摸牌阶段/出牌阶段/弃牌阶段，若你以此法跳过了判定/弃牌阶段，你横置/翻面；②每当你跳过一个阶段时，若你为全场手牌/体力最少，你摸一张牌/回复一点体力，然后你可以视为使用一张不计入次数限制且无距离限制的【杀】。",
            "DIY_shebian":"设变",
            "DIY_shebian_info":"①当一名角色武将牌的状态发生改变时，你可以移动场上一张牌；②当你受到伤害时，你可以将你的武将牌翻至正面。",
            "DIY_shensu_sha":"神速",
            "DIY_shensu_sha_info":"",
            "DIY_shensu1":"神速",
            "DIY_shensu1_info":"",
            "DIY_shensu4":"神速",
            "DIY_shensu4_info":"",
            "DIY_shensu2":"神速",
            "DIY_shensu2_info":"",
            "DIY_shensu3":"神速",
            "DIY_shensu3_info":"",
            "DIY_shebian_over":"设变",
            "DIY_shebian_over_info":"",
            "DIY_qirang":"祈禳",
            "DIY_qirang_info":"①当有装备牌进入你的装备区时，你可获得牌堆中的一张锦囊牌。②当有装备牌离开你的装备区时，你可获得牌堆中的一张基本牌。③当你使用因“祈禳”而获得的锦囊牌选择目标后，可为此牌增加一个目标。",
            "DIY_yuhua":"羽化",
            "DIY_yuhua_info":"锁定技，你的非基本牌不计入手牌上限。你可以获得其他角色进入弃牌堆的装备牌。",
            "DIY_qirang2":"祈禳",
            "DIY_qirang2_info":"",
            "DIY_fenxun":"奋迅",
            "DIY_fenxun_info":"出牌阶段，你可以弃置X张牌并选择一名未选择过的其他角色，直至你的下回合开始，其计算距离时视为处于你的位置（X为本回合此技能发动次数）。",
            "DIY_duanbing":"短兵",
            "DIY_duanbing_info":"锁定技，装备区不小于你的其他角色不能使用或打出牌响应你使用的牌。当你使用【杀】指定距离1以内的目标时，你可以令其防具失效。",
            "DIY_shenliu_jieying":"结营",
            "DIY_shenliu_jieying_info":"锁定技，①所有角色均处于横置状态。②回合结束时，你与一名其他角色获得一枚“营”标记；③有“营”的角色摸牌数/手牌上限+2，且受到火焰伤害时弃置一枚“营”标记。",
            "DIY_longnu":"龙怒",
            "DIY_longnu_info":"转换技，阴：出牌阶段开始时，你摸一张牌，然后你获得如下效果直至回合结束：你的红色手牌均视为火杀且无距离和次数限制。阳：出牌阶段开始时，你摸一张牌，然后你获得如下效果直至回合结束：你的锦囊牌均视为雷杀且无距离和次数选择。",
            "DIY_polu":"破橹",
            "DIY_polu_info":"锁定技，回合开始时，若【霹雳车】未加入游戏或在牌堆/弃牌堆内，则你使用之；当你受到1点伤害后，你摸两张牌并使用牌堆中的一张随机武器牌。",
            "DIY_choulue":"筹略",
            "DIY_choulue_info":"出牌阶段开始时，你令一名其他角色交给你一张牌，若其如此做，视为你使用上一张对你过造成伤害且不为延时锦囊牌的牌。",
            "DIY_piliche":"霹雳车",
            "DIY_piliche_info":"当你对其他角色造成伤害时，你可以随机执行以下任意项：<br>①弃置其装备区内的所有牌；<br>②弃置其手牌区内的所有牌；<br>③令其翻面。",
            "DIY_guying":"固营",
            "DIY_guying_info":"锁定技，①每回合限X次，当你于回合外因使用/打出/弃置而失去牌后，若牌数为1，则你获得一枚“固”并获得本次失去的牌和当前回合角色一张牌，若为装备牌，则你使用之。你的手牌上限加“固”的数量直至你的回合结束（X为你的体力值）；②你无法被横置。③你不会被劫营/袭营，你的“营”标记不会失去；你的回合内有〖连营〗的角色的技能无效。",
            "DIY_guying_drlt_jieying":"固营",
            "DIY_guying_drlt_jieying_info":"",
            "DIY_buqu":"不屈",
            "DIY_buqu_info":"锁定技，当你扣减体力时，若你的体力值小于1且你的“创”小于13，你将体力恢复至一点并获得一个“创”，若你有“创”，你摸牌阶段的摸牌数和手牌上限等于“创”的数量。",
            "DIY_fenji":"奋激",
            "DIY_fenji_info":"①当一名角色失去手牌时，若其手牌数小于其的体力值，你可以失去1点体力，然后令该角色摸两张牌。<br>②当一名其他角色即将受到致命伤害时，你可以失去1点体力防止之。",
            "DIY_fenji2":"奋激",
            "DIY_fenji2_info":"",
            "DIY_gongjian":"攻坚",
            "DIY_gongjian_info":"每回合限一次，当一名角色成为【杀】的目标时，若你对其使用过【杀】，你可以弃置其两张牌，然后获得以此法弃置的【杀】。",
            "DIY_kuimang":"溃蟒",
            "DIY_kuimang_info":"锁定技，当一名角色受到伤害时，若你对其发动过〖攻坚〗，你摸一张牌。",
            "DIY_gongjian_mark":"攻坚",
            "DIY_gongjian_mark_info":"",
            "DIY_biantian":"变天",
            "DIY_biantian_info":"锁定技，每名角色的回合开始时，你进行判定，并根据结果触发相应天气效果。",
            "DIY_zhuiji":"追击",
            "DIY_zhuiji_info":"锁定技，你至上一名你使用【杀】的目标的距离为1。当你使用一张【杀】时，你可以额外指定一名你使用上一张【杀】的目标。",
            "DIY_shichou":"誓仇",
            "DIY_shichou_info":"锁定技，每回合你使用的第一张【杀】不计入次数且无距离限制。此【杀】结算结束后，若此【杀】未造成伤害，你收回此【杀】。",
            "DIY_tieqi":"铁骑",
            "DIY_tieqi_info":"①出牌阶段限X次,你可以弃置一张牌并选择一名其他角色，其本回合非锁定技失效，若其在你的攻击范围内，你视为对其使用一张无距离限制且不计入次数的【杀】，反之你弃置其一张牌。（X为场上势力数）②当你使用【杀】指定一名角色后，你可以展示其两张牌，若这些牌颜色不同，此【杀】不可响应，反之你获得这些牌。",
            "DIY_machaocaidan":"",
            "DIY_machaocaidan_info":"",
            "DIY_kunfen":"困奋",
            "DIY_kunfen_info":"锁定技，一名角色的结束阶段开始时，你失去1点体力，然后摸两张牌。",
            "DIY_fengliang":"逢亮",
            "DIY_fengliang_info":"觉醒技，当你进入濒死状态时，你加1点体力上限，将体力值回复至体力上限，将势力改为“蜀”并获得技能〖挑衅〗和〖志继〗，然后失去〖困奋〗。",
            "DIY_tiaoxin":"挑衅",
            "DIY_tiaoxin_info":"①出牌阶段限一次，你可以选择一名攻击范围内包含你的角色。然后除非该角色对你使用一张【杀】且此【杀】对你造成伤害，否则你弃置其一张牌，然后将此技能于此出牌阶段内修改为出牌阶段限两次；②一名其他角色的结束阶段，若其本回合未使用或打出过【杀】，你可以对其发动一次〖挑衅①〗。",
            "DIY_zhiji":"志继",
            "DIY_zhiji_info":"觉醒技，一名角色的结束阶段，若你没有手牌或体力值为1，你回复1点体力或摸两张牌，然后加1点体力上限，并获得技能〖观星〗。",
            "DIY_guanxing":"观星",
            "DIY_guanxing_info":"当一名角色触发该技能的filter时，你执行此技能的content。",
            "DIY_jiangchi":"将驰",
            "DIY_jiangchi_info":" 每当你受到伤害后，你可以获得对你造成伤害的牌并摸四张牌，然后你翻面并弃置一张手牌，若你以此法弃置的是装备牌，则你改为使用之；若不为装备牌，你将此牌置于武将牌上。其他角色的出牌阶段开始时，你可以观看其手牌并移去武将牌上的一张牌，然后该角色于此阶段内不能使用或打出与此牌颜色相同的牌。此阶段结束时，若其未于此阶段内使用过：【杀】，视为你对其使用一张【杀】；锦囊牌，你摸两张牌；【杀】和锦囊牌，你回复一点体力。若你以此法对其造成了伤害且其判定区没有牌，你可将其手牌或装备区的一张牌置于其判定区。若此牌不是延时锦囊牌，那么红色牌视为【乐不思蜀】，黑色牌视为【兵粮寸断】。",
            "DIY_jiangchi_push":"将驰",
            "DIY_jiangchi_push_info":"",
            "DIY_jiangchi2":"将驰",
            "DIY_jiangchi2_info":"",
            "DIY_jiangchi3":"将驰",
            "DIY_jiangchi3_info":"",
            "DIY_jiangchi_chaofeng":"嘲讽",
            "DIY_jiangchi_chaofeng_info":"<style>#不想看技能还玩三国杀？{animation:changeS 20s linear 4s infinite;}@keyframes changeS{ 0% {color:#FF0000;}7%{color:#FF7F00;}14%{color: #FFFF00;}21%{color:#00FF00;}28% {color:#00FFFF;}35%{color: #0000FF;}42%{color: #8B00FF;}49%{color: #0000FF;}58%{color: #8B00FF;}65%{color: #0000FF;}72% {color:#00FFFF;}79%{color:#00FF00;}86%{color: #FFFF00;}93%{color:#FF7F00;}100% {color:#FF0000;}}</style><body><div id='不想看技能还玩三国杀？'><b>不想看技能还玩三国杀？</b></div></body>",
            "DIY_luanji":"乱击",
            "DIY_luanji_info":"技能详见曾经移动版的bug界袁绍。",
            "DIY_luanji_draw":"乱击",
            "DIY_luanji_draw_info":"",
            "DIY_xueyi":"血裔",
            "DIY_xueyi_info":"主公技，锁定技，场上每有一名其他角色存活，你的手牌上限便+2。",
            "DIY_qiangxi":"强袭",
            "DIY_qiangxi_info":"出牌阶段，你可以选择一项：1. 失去一点体力并对一名其他角色造成一点伤害；2. 弃置一张武器牌并对一名其他角色造成一点伤害。若该角色因此法进入濒死状态且存活，本回合〖强袭〗失效。",
            "DIY_qiangxi3":"强袭",
            "DIY_qiangxi3_info":"",
            "DIY_qiangxi2":"强袭",
            "DIY_qiangxi2_info":"",
            "DIY_zhanhuo":"绽火",
            "DIY_zhanhuo_info":"当你对一名角色造成一次火焰伤害后，你可选择一名其距离为1的另外一名角色，你进行一次判定：若判定结果为红色，你对其造成1点火焰伤害。",
            "DIY_cuike":"摧克",
            "DIY_cuike_info":"锁定技，你即将造成的伤害均视为火焰伤害。",
            "DIY_junlue":"军略",
            "DIY_junlue_info":"当其他角色使用带有「伤害」这一标签的牌指定你为唯一目标时，你可以与其进行“谋弈””：<br>立即出战：对其造成1点伤害。<br>坚守不战：令此牌无效。",
            "DIY_qianxi":"潜袭",
            "DIY_qianxi_info":"①当你对一名角色造成伤害时，你可以防止此伤害，并令其减1点体力上限；②准备阶段，你可以摸一张牌，然后弃置一张牌并选择一名其他角色，其减一点体力上限且不能使用或打出与你弃置的牌颜色相同的手牌直到回合结束。",
            "DIY_reqianxi":"潜袭",
            "DIY_reqianxi_info":"",
            "DIY_reqianxi2":"潜袭",
            "DIY_reqianxi2_info":"",
            "DIY_guijin":"归晋",
            "DIY_guijin_info":"<br><span style='font-family: yuanli'>赢……<br></span>",
            "DIY_guijin_audio":"",
            "DIY_guijin_audio_info":"",
            "DIY_jizhi":"集智",
            "DIY_jizhi_info":"当一名角色使用非转化的普通锦囊牌时，你可以摸一张牌。",
            "DIY_qicai":"奇才",
            "DIY_qicai_info":"锁定技，你使用锦囊牌无距离限制；其他角色回合内以你为目标的第一张锦囊牌对你无效。",
            "DIY_zhendu":"鸩毒",
            "DIY_zhendu_info":"①一名其他角色的出牌阶段开始时，你可以弃置一张牌并令该角色视为使用了一张【酒】然后你对其造成一点伤害。②当场上有角色进入濒死状态时，你可以弃置一张牌并令该角色获得“毒逝”直到下轮开始。",
            "DIY_qiluan":"戚乱",
            "DIY_qiluan_info":"①一名其他角色死亡时，你可以摸三张牌；②当一名其他角色于你的回合外受到伤害时，你可以弃置一张牌令此伤害翻倍。",
            "DIY_kuangbi":"匡弼",
            "DIY_kuangbi_info":"出牌阶段限一次，你可以选择一名有牌的其他角色，该角色将其的3张牌置于你的武将牌上。若如此做，你的下个准备阶段，你获得武将牌上的所有牌，然后其摸等量的牌。",
            "DIY_liangyin":"良姻",
            "DIY_liangyin_info":"当有牌移至游戏外时，你可以令一名角色摸1-2随机张牌；当有牌从游戏外加入任意角色的手牌时，你可以令一名角色弃置1-2随机张牌。",
            "DIY_kongsheng":"箜声",
            "DIY_kongsheng_info":"准备阶段，你可以将任意张牌置于你的武将牌上；结束阶段，你使用武将牌上的装备牌，并获得武将牌上的其他牌。",
            "DIY_kongsheng2":"箜声",
            "DIY_kongsheng2_info":"",
            "DIY_zhendu2":"鸩毒",
            "DIY_zhendu2_info":"",
            "DIY_jueyan":"决堰",
            "DIY_jueyan_info":"①出牌阶段限一次，你可以废除一个装备栏；②锁定技，若你废除了：武器栏，你可以多使用三张【杀】；防具栏，摸三张牌，手牌上限+3；2个坐骑栏，你使用的牌无距离限制；宝物栏，视为拥有技能“集智”",
            "DIY_qianjie":"谦节",
            "DIY_qianjie_info":"锁定技，当你横置时，取消之。你不能成为【顺手牵羊】/【逐近弃远】/【出其不意】和延时类锦囊的目标。你不能成为其他角色拼点的目标。",
            "DIY_poshi":"破势",
            "DIY_poshi_info":"觉醒技，准备阶段开始时，若你的装备栏均已被废除或体力值为1，则你加一点体力上限并回满体力，将手牌摸至体力上限，然后废除装备区和判定区然后获得技能“怀柔”",
            "DIY_jueyan1":"",
            "DIY_jueyan1_info":"",
            "DIY_jueyan2":"",
            "DIY_jueyan2_info":"",
            "DIY_jueyan3":"",
            "DIY_jueyan3_info":"",
            "DIY_jueyan5":"集智",
            "DIY_jueyan5_info":"当你使用非转化的普通锦囊牌时，你可以摸一张牌。",
            "DIY_huairou":"怀柔",
            "DIY_huairou_info":"锁定技，你的装备牌不计入手牌上限。当你即将受到伤害时，你可以重铸一张装备牌防止之。",
            "DIY_hanzhan":"酣战",
            "DIY_hanzhan_info":"你与其他角色拼点时，你可将你区域内的一张牌作为其的拼点牌。",
            "DIY_tianyi":"天义",
            "DIY_tianyi_info":"出牌阶段，你可以摸一张牌并和一名其他角色拼点。若你赢，你获得其一张牌并可以对其使用一张【杀】。若你没赢，你不能使用【杀】且你的【杀】不计入手牌上限直到回合结束。",
            "DIY_tianyi2":"",
            "DIY_tianyi2_info":"",
            "DIY_xuxie":"虚猲",
            "DIY_xuxie_info":"锁定技，①一名角色的出牌阶段开始时，你减1点体力上限并选择攻击范围内包含你和你攻击范围的所有角色，弃置这些角色的各一张牌或令这些角色各摸一张牌；②一名角色的出牌阶段结束时，你加1点体力上限；③当你的体力上限发生改变时，若你的手牌不为全场最多，你摸一张牌。<br><span style='font-family: yuanli'>说出吾名，逗汝一笑</span>",
            "DIY_xuxie_add":"虚猲",
            "DIY_xuxie_add_info":"",
            "DIY_xuxie_draw":"虚猲",
            "DIY_xuxie_draw_info":"",
            "DIY_shushen":"淑慎",
            "DIY_shushen_info":"当你不因此法而回复1点体力时，你可以令一名角色选择回复1点体力或摸两张牌。",
            "DIY_shenzhi":"神智",
            "DIY_shenzhi_info":"准备阶段开始时，你可以弃置X张手牌并回复1点体力（X为你的体力值）。",
            "DIY_guixiu":"闺秀",
            "DIY_guixiu_info":"锁定技。一名角色的结束阶段，若你的体力值或手牌数为偶数，你回复1点体力。",
            "DIY_qingyu":"清玉",
            "DIY_qingyu_info":"使命技。①当你受到伤害后，你弃置两张牌，然后回复一点体力。②使命：准备阶段，若你的体力值等于体力上限且你没有手牌，则你获得〖悬存〗。③失败：当你进入濒死状态时，你减1点体力上限。",
            "DIY_xuancun":"悬存",
            "DIY_xuancun_info":"一名角色的回合结束时，若你的手牌数小于体力值，则你可以令其摸X张牌。",
            "DIY_bifa":"笔伐",
            "DIY_bifa_info":"锁定技，当一名角色使用或打出一张牌后，你书写X字（X为此牌牌名数的五倍），当你书写完成时，你可以依次造成檄文字数的伤害。",
            "DIY_songci":"颂词",
            "DIY_songci_info":"出牌阶段限X次，你可以选择一名角色。若其手牌数：大于其体力值，其弃置两张牌；不大于其体力值，其摸两张牌。（X为你的体力值）",
            "DIY_pingjian":"评荐",
            "DIY_pingjian_info":"准备阶段开始时/结束阶段开始时/当你受到伤害后/出牌阶段限一次，你可以令系统随机从剩余武将牌堆中检索出三张拥有发动时机为准备阶段开始时/结束阶段开始时/当你受到伤害后/出牌阶段的技能的武将牌。然后你可以选择其中一个技能获得之。",
            "DIY_pingjian_use":"评荐",
            "DIY_pingjian_use_info":"",
            "DIY_biluan":"避乱",
            "DIY_biluan_info":"摆……",
            "DIY_biluan_audio":"",
            "DIY_biluan_audio_info":"",
            "DIY_qice":"奇策",
            "DIY_qice_info":"每回合每种牌名限一次，你可以将一张手牌当做任意一张普通锦囊牌使用。",
            "DIY_qice2":"",
            "DIY_qice2_info":"",
            "DIY_ranshang":"燃殇",
            "DIY_ranshang_info":"锁定技，当你受到1点火焰伤害后，你获得1枚“燃”标记；结束阶段开始时，你失去X点体力并减一点体力上限然后摸X张牌。（X为“燃”标记的数量）",
            "DIY_ranshang2":"燃殇",
            "DIY_ranshang2_info":"",
            "DIY_hanyong":"悍勇",
            "DIY_hanyong_info":"①当你使用【南蛮入侵】或【万箭齐发】或【杀】时，你可以减一点体力上限并令此牌的伤害值基数+1,若你的体力值不是全场唯一最多，此牌无法响应。②锁定技，若你的体力值为全场唯一最大，则当你造成或受到伤害时，此伤害+1。",
            "DIY_hanyong2":"",
            "DIY_hanyong2_info":"",
            "DIY_fenyin":"奋音",
            "DIY_fenyin_info":"锁定技，当一名角色使用或打出牌后，你唱一句歌词，如果你使用或打出牌比较快的话可以唱一首歌。",
            "DIY_fenyin1":"奋音",
            "DIY_fenyin1_info":"",
            "DIY_fenyin2":"奋音",
            "DIY_fenyin2_info":"",
            "DIY_fenyin3":"奋音",
            "DIY_fenyin3_info":"",
            "DIY_fenyin4":"奋音",
            "DIY_fenyin4_info":"",
            "DIY_fenyin5":"奋音",
            "DIY_fenyin5_info":"",
            "DIY_fenyin6":"奋音",
            "DIY_fenyin6_info":"",
            "DIY_fenyin7":"奋音",
            "DIY_fenyin7_info":"",
            "DIY_fenyin8":"奋音",
            "DIY_fenyin8_info":"",
            "DIY_shilu":"嗜戮",
            "DIY_shilu_info":"锁定技，①当一名其他角色受到伤害时，你成为此伤害的伤害来源并获得等量枚“戮”标记。此伤害不触发“damage”时机后的技能；②出牌阶段开始时，你可以弃置至多X张牌并摸双倍的牌。你的手牌上限+X(X为你拥有的“戮”标记)",
            "DIY_xiongnve":"凶虐",
            "DIY_xiongnve_info":"锁定技，当一名其他角色进入濒死状态时，若其身份为:<br>“忠臣”，你将其身份改为“反贼”，然后你摸一张牌并获得【完杀】；<br>“主公”，你将自己/其身份改为“主公”/“反贼”；<br>“反贼”，你与主公各摸一张牌并回复一点体力；<br>“内奸”，你摸三张牌并令其立即死亡。",
            "DIY_wansha":"完杀",
            "DIY_wansha_info":"锁定技。①除你以外，你的回合内不处于濒死状态的角色不能使用【桃】。②当有角色进入濒死状态时，你令所有其他角色的手牌和非锁定技失效直到此濒死状态结算结束。",
            "DIY_zhoufu":"咒缚",
            "DIY_zhoufu_info":"①游戏开始时/一名角色的回合开始时或当你使用/打出/弃置的牌进入弃牌堆后，若你没有“咒”，你将牌堆顶的一张牌/此牌置于武将牌上称为“咒”；②当有一名角色判定时，你可以打出一张“咒”作为判定牌(不触发咒缚①)；一名其他角色的回合结束时，若你本回合以此法移除过“咒”，其失去等量点体力。",
            "DIY_zhoufu2":"咒缚",
            "DIY_zhoufu2_info":"",
            "DIY_yingbing":"影兵",
            "DIY_yingbing_info":"当有其他角色使用与你的“咒”颜色相同的牌时，你可以移去“咒”并摸一张牌然后使此牌无效。",
            "DIY_chexuan":"车悬",
            "DIY_chexuan_info":"出牌阶段，若你的装备区里没有宝物牌，你可弃置一张牌，选择一张【舆】置入你的装备区；当你失去装备区里的宝物牌后，你选择一张【舆】置入你的装备区。",
            "DIY_qiangshou":"羌首",
            "DIY_qiangshou_info":"锁定技，若你的装备区有武器牌，则你使用【杀】的次数上限+1；若你的装备区有坐骑牌，你的手牌上限+1；若你的装备区内有宝物牌，你与其他角色的距离-1。",
            "DIY_feilunzhanyu":"飞轮战舆",
            "DIY_feilunzhanyu_info":"其他角色的回合结束时，你可以令其交给你一张牌，然后弃置此牌。",
            "DIY_sichengliangyu":"四乘粮舆",
            "DIY_sichengliangyu_info":"一名角色的回合结束时，你可以摸两张牌，然后弃置此牌。",
            "DIY_tiejixuanyu":"铁蒺玄舆",
            "DIY_tiejixuanyu_info":"其他角色的回合结束时，你可以令其弃置两张牌，然后弃置此牌。",
            "DIY_fenli":"奋励",
            "DIY_fenli_info":"若你的手牌数/体力值或装备区里有牌且数量为为全场最多，你可以跳过判定阶段/摸牌阶段/出牌阶段/弃牌阶段。",
            "DIY_pingkou":"平寇",
            "DIY_pingkou_info":"一名角色的回合结束时，你可以摸X/2张牌并对至多X名其他角色各造成1点伤害（X为其本回合跳过的阶段数）。",
            "DIY_jiuchi":"酒池",
            "DIY_jiuchi_info":"①你可以将一张黑色牌当做【酒】使用。当你使用一张【酒】时，你摸一张牌；<br><span style='font-family: yuanli'>东汉洛阳与长安联合道路署提醒您:<br>道路千万条，安全第一条；<br>喝酒不骑马，骑马不喝酒。<br></span>②锁定技，你使用【酒】无次数限制，且当你于回合内使用带有【酒】效果的【杀】造成伤害后，你令你的【崩坏】失效直到回合结束。",
            "DIY_jiuchi_draw":"",
            "DIY_jiuchi_draw_info":"",
            "DIY_jiuchi_ma":"",
            "DIY_jiuchi_ma_info":"",
            "DIY_roulin":"肉林",
            "DIY_roulin_info":"锁定技。你对女性角色、女性角色对你使用【杀】/【决斗】时，都需连续使用两张【闪】/【杀】才能响应。",
            "DIY_benghuai":"崩坏",
            "DIY_benghuai_info":"结束阶段，若你的体力不是全场最少的(或之一)，你减1点体力和体力上限并摸一张牌。",
            "DIY_baonue":"暴虐",
            "DIY_baonue_info":"主公技，其他群雄角色造成1点伤害后，其可以令你加一点体力上限并回复一点体力。",
            "Tianlao_equip4":"定澜玉牛马",
            "Tianlao_equip4_info":"",
            "DIY_qizhou":"绮胄",
            "DIY_qizhou_info":"锁定技，你装备区内的牌无法被弃置。你根据装备区内牌的数量获得以下技能:<br>1件或以上：〖马术〗和〖英姿〗；<br>2件或以上：〖激昂〗和〖谦节〗；<br>3件或以上：〖旋风〗和〖合击〗；<br>4件或以上：〖平寇〗和〖胆守〗;<br>5件或以上：〖奋励〗和〖攻心〗。",
            "DIY_shanxi":"闪袭",
            "DIY_shanxi_info":"①游戏开始时，你戎备自己；②结束阶段你屯军1。",
            "DIY_shanxi_phase":"闪袭",
            "DIY_shanxi_phase_info":"",
            "DIY_shanxi_end":"闪袭",
            "DIY_shanxi_end_info":"",
            "DIY_jieyue":"节钺",
            "DIY_jieyue_info":"",
            "DIY_yizhong":"毅重",
            "DIY_yizhong_info":"锁定技，当你的防具栏为空时，黑色的杀对你无效",
            "DIY_zhenjun":"镇军",
            "DIY_zhenjun_info":"①准备阶段或结束阶段，你可以弃置一名角色X张牌（X为其手牌数减体力值且至少为1），若其中没有装备牌，你选择一项：1.你弃一张牌；2.该角色摸等量的牌。②出牌阶段开始时，你可以将一张牌交给一名角色，令其选择是否使用一张不为黑色的【杀】。若其选择是，则你于此【杀】结算完成后摸1+X张牌(X为此【杀】造成的伤害总点数)。若其选择否，则你对其或其攻击范围内的一名其他角色造成1点伤害。",
            "DIY_zhenjun1":"镇军",
            "DIY_zhenjun1_info":"",
            "DIY_zhenjun2":"镇军",
            "DIY_zhenjun2_info":"",
            "DIY_yujinjieyue":"节钺",
            "DIY_yujinjieyue_info":"①弃牌阶段结束时，你可以将一张牌交给一名其他角色。然后其选择一项：令你摸三张牌：或其保留一张手牌和装备区的牌，然后弃置其余的牌。②结束阶段开始时，你可以弃置一张手牌，然后令一名其他角色选择一项：将一张牌置于你的武将牌上（称之为“节”）；或令你弃置其一张牌。当你你武将牌上有“节”时，你可以将红色手牌当作【闪】、黑色的手牌当作【无懈可击】使用或打出。准备阶段开始时，你获得你武将牌上的“节”。",
            "DIY_jieyue1":"节钺",
            "DIY_jieyue1_info":"",
            "DIY_jueyong":"绝勇",
            "DIY_jueyong_info":"锁定技。①当你不因〖绝勇②〗而成为一张牌的唯一目标时，若此牌不为【桃】或【酒】，则你将此牌对应实体牌置于你的武将牌上，称为“绝”，且取消此牌的目标（无实体牌则此牌无效）。②结束阶段开始时，若你有“绝”，则你依次翻开所有“绝”，若此“绝”可以对其原使用者使用，你失去一点体力使用之（若此牌使用者是你，则回复一点体力/加一点体力上限；若你的体力值不大于1，则改为减一点体力上限），反之，你将其置入弃牌堆并回复一点体力（未受伤则改为加一点体力上限）。",
            "DIY_qiaobian":"巧变",
            "DIY_qiaobian_info":"①你的判定/摸牌/出牌/弃牌阶段开始时，你可以弃置一张牌并跳过之。若你以此法而跳过摸牌/出牌阶段时，你可以获得至多两名其他角色的各一张牌（你每少选一个目标，你摸一张牌）/移动场上一张牌。<br>一名角色的回合结束时，你摸X-1张牌（X为其本回合跳过的阶段数，若其为你，X+1）；<br>②当你于回合外成为一张牌的目标时，你可以弃置一张牌并取消此牌所有目标，然后进行一次判定，若判定结果为红色，你获得此牌；<br>③一名其他角色的摸牌/出牌阶段开始时，你可以弃置一张牌并进行一次判定，若判定结果不为黑色/红色，其跳过此阶段。<br>当一名角色的判定牌生效前，你可以亮出牌堆顶的一张牌代替之。",
            "DIY_qiaobian1":"巧变",
            "DIY_qiaobian1_info":"",
            "DIY_qiaobian2":"巧变",
            "DIY_qiaobian2_info":"",
            "DIY_qiaobian3":"巧变",
            "DIY_qiaobian3_info":"",
            "DIY_qiaobian4":"巧变",
            "DIY_qiaobian4_info":"",
            "DIY_qiaobian5":"巧变",
            "DIY_qiaobian5_info":"",
            "DIY_qiaobian6":"巧变",
            "DIY_qiaobian6_info":"",
            "DIY_qiaobian7":"巧变",
            "DIY_qiaobian7_info":"",
            "DIY_yicong":"义从",
            "DIY_yicong_info":"锁定技，座次技，当前回合角色座次为奇数时，你与其他角色计算距离-1；当前回合角色为偶数时，你与其他角色计算距离+1。",
            "DIY_qiaomeng":"趫猛",
            "DIY_qiaomeng_info":"当你使用【杀】或【决斗】指定目标时，你可以弃置其一张牌；若此牌造成伤害，你可以与其交换座次。",
            "DIY_qiaomeng_seat":"",
            "DIY_qiaomeng_seat_info":"",
            "DIY_luanwu":"乱武",
            "DIY_luanwu_info":"出牌阶段限一次，你可以令一名有手牌的其他角色随机使用一张手牌（随机指定目标），若其仍有可以使用的牌，则重复此流程。",
            "DIY_weimu":"帷幕",
            "DIY_weimu_info":"锁定技。①你不能成为黑色锦囊牌的目标。②当你于回合内成为其他角色使用牌的目标时，取消之。",
            "DIY_zhenyi":"真仪",
            "DIY_zhenyi_info":"你可以在以下时机来发动以下效果：一名角色的判定牌生效前，你可以将判定结果改为任意花色且点数为5；你的回合外，你可以将你的一张手牌当【桃】使用；当你造成伤害时，你可以令此伤害+1；当你受到伤害后，你可以从牌堆中随机获得三种类型的牌各一张。",
            "DIY_dianhua":"点化",
            "DIY_dianhua_info":"准备阶段或结束阶段，你可以观星4。",
            "DIY_falu":"法箓",
            "DIY_falu_info":"锁定技，游戏开始时，你获得「紫薇」「后土」「玉清」「勾陈」标记各一个。",
            "DIY_zhenyi_spade":"真仪",
            "DIY_zhenyi_spade_info":"",
            "DIY_zhenyi_club":"真仪",
            "DIY_zhenyi_club_info":"",
            "DIY_zhenyi_heart":"真仪",
            "DIY_zhenyi_heart_info":"",
            "DIY_kaikang":"慷忾",
            "DIY_kaikang_info":"当一名角色成为一张带有「伤害」的牌的目标后，若此牌使用者在你或目标的攻击范围内，你可以摸一张牌。若如此做，你交给其一张牌并展示之。然后该角色可以使用此牌（若该角色是你，则改为可以使用一张牌）。",
            "DIY_kaikang2":"慷忾",
            "DIY_kaikang2_info":"",
            "DIY_shuangxiong":"双雄",
            "DIY_shuangxiong_info":"出牌阶段限一次，你可以将一张牌当作【决斗】使用。此【决斗】结算完成后，你选择一项：①摸两张牌；②重置此技能。",
            "DIY_shuangxiong2":"双雄",
            "DIY_shuangxiong2_info":"",
            "DIY_zhanjue":"战绝",
            "DIY_zhanjue_info":"①你可以将两张花色相同的牌当作一张【决斗】使用；②当你使用【决斗】造成伤害或受到【决斗】造成的伤害时，你与伤害来源各摸一张牌。③锁定技，当其余角色对你使用的【杀】或不为【决斗】的伤害性锦囊牌时，视为你对其使用一张【决斗】。",
            "DIY_zhanjue2":"战绝",
            "DIY_zhanjue2_info":"",
            "DIY_zhanjue3":"战绝",
            "DIY_zhanjue3_info":"",
            "DIY_aocai":"傲才",
            "DIY_aocai_info":"你可以如手牌般使用或打出牌堆里的前四张基本牌。",
            "DIY_duwu":"黩武",
            "DIY_duwu_info":"出牌阶段，你可以弃置一张牌对你攻击范围内的一名其他角色造成随机0-2点伤害,若其存活，你失去2-伤害值点体力。",
            "DIY_xianzhen":"陷阵",
            "DIY_xianzhen_info":"出牌阶段，若场上没有被“陷阵”目标，你可以失去一点体力并选择一名其他角色，你本回合内对其使用牌没有次数和距离限制且无视其防具，其不能使用或打出牌。若如此做，本回合你只能对其使用牌，且你对其造成伤害后不触发其余伤害结算。",
            "DIY_xianzhen2":"陷阵",
            "DIY_xianzhen2_info":"",
            "DIY_xianzhen3":"陷阵",
            "DIY_xianzhen3_info":"",
            "DIY_roulin_juedou":"肉林",
            "DIY_roulin_juedou_info":"",
            "DIY_yizan":"翊赞",
            "DIY_yizan_info":"你可以将一张基本牌当做任意一张基本牌打出或使用。",
            "DIY_longyuan":"龙渊",
            "DIY_longyuan_info":"限定技，锁定技，若你本局游戏内发动过〖翊赞〗的次数大于等于3，你修改〖翊赞〗和〖龙渊〗。",
            "DIY_yizan_rewrite":"翊赞",
            "DIY_yizan_rewrite_info":"你可以将一张牌当做任意一张基本牌打出或使用。",
            "DIY_longyuan_rewrite":"龙渊",
            "DIY_longyuan_rewrite_info":"锁定技，当你打出或使用一张【杀】或【闪】或于回合外打出或使用一张【桃】或【酒】时，你进行判定，若结果为红色，你摸一张牌。",
            shoupai:"失效",
            "shoupai_info":"",
            "DIY_guzheng":"固政",
            "DIY_guzheng_info":"其他角色因弃置而失去牌时，若其此次弃牌数＞1，你可以令其获得本次进入弃牌堆的牌中的一张，然后你获得其余的牌。",
            "DIY_zhijian":"直谏",
            "DIY_zhijian_info":"出牌阶段，你可以将一张装备牌置于一名其他角色装备区里，然后摸一张牌。当你使用装备牌时，你可以摸一张牌。",
            "DIY_luanzhan":"乱战",
            "DIY_luanzhan_info":"当你使用一张牌时，你获得一个“乱”。当你使用【杀】或普通锦囊牌选择目标后，你可为此牌增加至多X个目标。当你使用这些牌指定第一个目标后，若此牌目标数小于X，则你移去X/2（向上取整）个“乱”并摸等量的牌。你使用【杀】次数上限+X。（X为“乱”数）",
            "DIY_luanzhan_add":"乱战",
            "DIY_luanzhan_add_info":"",
            "DIY_luanzhan_remove":"乱战",
            "DIY_luanzhan_remove_info":"",
            "DIY_liegong":"烈弓",
            "DIY_liegong_info":"锁定技，你对手牌数不大于你的角色使用【杀】无距离限制且不可响应。你使用【杀】的伤害基数+X（X为你上回合造成的伤害数）",
            "DIY_liegong2":"烈弓",
            "DIY_liegong2_info":"",
            "DIY_zhiyu":"智愚",
            "DIY_zhiyu_info":"锁定技，①当你于回合内使用一张转化锦囊牌时，若你的体力值和手牌数均大于1，你需弃置一张牌并展示所有手牌，若颜色均相同，你弃置一名角色一张牌。②当你受到一点伤害或成为其他角色锦囊牌的目标时，你摸一张牌并展示所有手牌，若颜色均相同，你弃置一名角色一张牌。",
            "DIY_zhiyu2":"智愚",
            "DIY_zhiyu2_info":"",
            "DIY_tuntian":"屯田",
            "DIY_tuntian_info":"当你于回合外失去一张牌后，或于回合内失去一张【杀】后，你可以将牌堆顶的一张牌置于你的武将牌上，称之为【田】。锁定技，你计算与其他角色的距离时-X（X为你武将牌上【田】的数目）",
            "DIY_zaoxian":"凿险",
            "DIY_zaoxian_info":"觉醒技，一名角色的结束阶段，若你武将牌上【田】的数量达到3张或更多，则你减1点体力上限，并获得技能〖急袭〗。你于当前回合结束后进行一个额外的回合。",
            "DIY_jixi":"急袭",
            "DIY_jixi_info":"出牌阶段，你可以将任意一张【田】当作【顺手牵羊】使用。当一名其他角色于你的回合内失去最后一张手牌时，你可以于当前回合结束后进行一个额外的回合。",
            "DIY_jixi2":"急袭",
            "DIY_jixi2_info":"",
            "DIY_qiaobian8":"巧变",
            "DIY_qiaobian8_info":"",
            "DIY_qiaobian9":"巧变",
            "DIY_qiaobian9_info":"",
            "DIY_zhendu_dushi":"毒逝",
            "DIY_zhendu_dushi_info":"锁定技，你不是其他角色【桃】的合法目标。",
            "DIY_muzhen":"睦阵",
            "DIY_muzhen_info":"出牌阶段各限一次。①你可以将一张牌交给一名装备区内有牌的其他角色，然后获得其装备区内的一张牌。②你可以将装备区内的一张牌置于其他角色的装备区内，然后获得其一张手牌。",
            "DIY_muzhen1":"",
            "DIY_muzhen1_info":"",
            "DIY_muzhen2":"",
            "DIY_muzhen2_info":"",
            "DIY_muzhen_backup":"睦阵",
            "DIY_muzhen_backup_info":"",
            "DIY_kannan":"戡难",
            "DIY_kannan_info":"出牌阶段限，你可以与一名其他角色拼点。若你赢，你使用的下一张【杀】的伤害值基数+1。若你没赢，你获得其的拼点牌且其使用的下一张【杀】的伤害值基数+1。当你因拼点而失去牌后且本次拼点牌亮出时，若你的拼点牌点数＜其拼点牌的点数，你摸一张牌并选择一张牌作为你此次拼点点数。",
            "DIY_kannan_eff":"戡难",
            "DIY_kannan_eff_info":"",
            "DIY_kannan_compare":"戡难",
            "DIY_kannan_compare_info":"",
            "DIY_kannan_lose":"戡难",
            "DIY_kannan_lose_info":"",
            "DIY_rende":"仁德",
            "DIY_rende_info":"出牌阶段，你可以将任意张牌交给一名其他角色，你每以此法交出的牌数达到2的倍数时，你可以视为使用一张无距离和次数限制且不计入次数的基本牌，达到5的且非2的倍数时，你摸5张牌。",
            "DIY_rende1":"仁德",
            "DIY_rende1_info":"",
            "DIY_qizhi":"奇制",
            "DIY_qizhi_info":"当你使用一张牌指定目标或于回合外打出或使用一张牌后，你可以弃置不是此牌目标的一名角色的一张牌并摸一张牌，若如此做且弃牌角色不为你，你交给其一张牌。",
            "DIY_jinqu":"进趋",
            "DIY_jinqu_info":"一名角色的结束阶段开始时，若你本回合发动过〖奇制〗，你可以摸X张牌，若如此做，你将手牌弃置至X张。（X为你于此回合发动过〖奇制〗的次数）",
            "DIY_quanji":"权计",
            "DIY_quanji_info":"出牌阶段结束时，若你的手牌数大于体力值，或你的牌被其他角色获得后或当你受到1点伤害后或当你使用牌指定唯一目标并对其造成伤害后，你可以摸一张牌，然后将一张牌置于武将牌上，称为“权”；你的手牌上限+X（X为“权”的数量）。",
            "DIY_zili":"自立",
            "DIY_zili_info":"觉醒技。一名角色的结束阶段，若你的“权”数大于2，则你回复1点体力并摸两张牌，减1点体力上限并获得〖排异〗。你于当前回合结束后进行一个额外的回合。。",
            "DIY_paiyi":"排异",
            "DIY_paiyi_info":"出牌阶段每项各限一次，你可移去一张“权”并选择一项：①令一名角色摸X张牌。②对至多X名角色各造成1点伤害。（X为“权”数）",
            "DIY_paiyi_0":"排异",
            "DIY_paiyi_0_info":"",
            "DIY_paiyi_1":"排异",
            "DIY_paiyi_1_info":"",
            "DIY_paiyi_backup":"排异",
            "DIY_paiyi_backup_info":"",
            "DIY_paiyi_backup0":"排异",
            "DIY_paiyi_backup0_info":"",
            "DIY_paiyi_backup1":"排异",
            "DIY_paiyi_backup1_info":"",
            "DIY_quanji2":"权计",
            "DIY_quanji2_info":"",
            "DIY_quanji3":"权计",
            "DIY_quanji3_info":"",
            "DIY_shenduan":"慎断",
            "DIY_shenduan_info":"当你的黑色牌因弃置而进入弃牌堆后，你可以将其当做【兵粮寸断】使用（无距离限制）。",
            "DIY_yonglve":"勇略",
            "DIY_yonglve_info":"一名角色的判定阶段开始时，你可以弃置其判定区里的一张牌。然后若该角色不为你，你选择一项：摸两张牌或对其造成一点伤害。",
            "DIY_mingren":"明任",
            "DIY_mingren_info":"锁定技，你将牌堆顶一张牌称为“任”并对所有角色可见。出牌阶段开始/结束时，你可以从牌堆底摸一张牌并将一张手牌置于牌堆顶。",
            "DIY_zhenliang":"贞良",
            "DIY_zhenliang_info":"转换技，阴：出牌阶段，你可以弃置一张与“任”颜色相同的牌并对攻击范围内的一名角色造成1点伤害。阳：当你使用或打出的牌结算完成后，若此牌与“任”颜色相同，则你可以令一名角色摸一张牌。",
            "JX_luzhi_die":"",
            "JX_luzhi_die_info":"",
            "DIY_yilie":"毅烈",
            "DIY_yilie_info":"锁定技，出牌阶段开始时，你横置你与一名其他角色。当一名角色的横置状态发生改变时，你回复1点体力。",
            "DIY_fenming":"奋命",
            "DIY_fenming_info":"锁定技，若你已横置，你与已横置角色彼此距离视为1。当你对已横置角色使用一张【杀】时，你摸一张牌并令此【杀】不计入次数限制，此牌结算完成后，你失去一点体力。",
            "DIY_boming":"博名",
            "DIY_boming_info":"你的手牌点数之和对所有人可见。准备阶段，你可选择：本回合你的A/2/3点牌视为J/Q/K点；或本回合你的J/Q/K点牌视为A/2/3点。",
            "DIY_xu_pingjian":"评荐",
            "DIY_xu_pingjian_info":"出牌阶段限一次，你可以展示你的手牌，然后若你的手牌点数之和：<br>小于28，你摸一张牌；<br>大于28，你弃置一张牌。<br>然后若你的手牌点数之和不等于28，则重复此流程。<br>你每以此法弃置一张牌，你可以弃置其他角色一张牌。",
            "DIY_ziju":"姿雎",
            "DIY_ziju_info":"锁定技，当你获得一张牌时，若你手牌颜色均相同，你展示所有手牌并摸一张牌。",
            "DIY_huaiyi":"怀异",
            "DIY_huaiyi_info":"每回合每种颜色限一次，出牌阶段或当你受到伤害时，你可以展示所有手牌并弃置其中一种颜色的所有牌，然后你可以获得至多X名角色的各一张牌（X为你以此法弃置的手牌数）。",
            "DIY_beizhu":"备诛",
            "DIY_beizhu_info":"每轮限一次，其他角色的准备阶段开始时，你可以展示其手牌，并令其对你依次使用其中除【闪】和【无懈可击】以外的牌，你每以此法成为一张牌的目标时，你摸一张牌。",
            "DIY_zhenlie":"贞烈",
            "DIY_zhenlie_info":"①当你成为其他角色使用【杀】或普通锦囊牌的目标时，你可以令此牌对你无效，然后进行一次判定，若为黑色，你弃置对方一张牌反之你弃失去一点体力。②当你的判定牌生效前，你可以亮出牌堆顶的一张牌代替之。",
            "DIY_zhenlie2":"贞烈",
            "DIY_zhenlie2_info":"",
            "DIY_miji":"秘计",
            "DIY_miji_info":"准备/结束阶段开始时，你可以判定，若判定结果为黑色，你观看牌堆顶的X张牌（X为你已损失的体力值且至少为1），然后将这些牌交给一名角色。",
            "DIY_suzhi":"夙智",
            "DIY_suzhi_info":"你可以于一个合适时机选择场上一个现存势力，然后从随机Y张（Y为场上势力数）与你所选势力相同的且拥有此时可发动技能的武将牌上的选择一个可使用技能并使用之。（合适时机：摸牌/出牌/弃牌阶段开始时、使用/打出一张牌时、受到伤害后）",
            "DIY_zhaoxin":"昭心",
            "DIY_zhaoxin_info":"身份技，游戏开始时，你明置你的身份牌。<br>每回合限X次（X为阵营与你相同的角色数，且当你的身份为“内奸”时，X为阵营与你不同的角色数），当你即将造成/受到伤害时，你可以弃置一张牌令此伤害翻倍/取消（当你以此法取消伤害后，你仍可发动时机为“damageEnd”的卖血技能）。",
            "DIY_zhaoxin2":"昭心",
            "DIY_zhaoxin2_info":"",
            "DIY_zhaoxin3":"昭心",
            "DIY_zhaoxin3_info":"",
            "DIY_gangao":"攻獒",
            "DIY_gangao_info":"锁定技，当一名其他角色进入濒死状态时，你增加一点体力上限，回复一点体力。",
            "DIY_juyi":"举义",
            "DIY_juyi_info":"觉醒技，准备阶段开始时，若你的体力上限大于存活角色数，你摸等同于体力上限张数的牌，然后获得技能〖粮绝〗和〖威重〗。",
            "DIY_niangjue":"粮绝",
            "DIY_niangjue_info":"锁定技，你跳过你的摸牌阶段和弃牌阶段。结束阶段你进行判定，若结果不为♣，你减一点体力上限。",
            "DIY_niangjue2":"粮绝",
            "DIY_niangjue2_info":"",
            "DIY_xiansi":"陷嗣",
            "DIY_xiansi_info":"锁定技，①准备阶段你将至多两名角色的牌置于你的X区称为“逆”；②当你成为一张非转化非虚拟【杀】的目标时，你令此【杀】无效，并将其加入“逆”；③其余角色可以将两张“逆”当做一张【杀】对你使用；④你无法响应转化【杀】或虚拟【杀】并获得此【杀】对应所有实体牌；⑤场上不因〖陷嗣①〗或〖破军〗而进入X区内的牌改为加入你的“逆”。",
            "DIY_xiansi2":"陷嗣",
            "DIY_xiansi2_info":"",
            "DIY_xiansi3":"陷嗣",
            "DIY_xiansi3_info":"",
            "DIY_xiansi4":"陷嗣",
            "DIY_xiansi4_info":"",
            "DIY_xiansi5":"陷嗣",
            "DIY_xiansi5_info":"",
            "DIY_qixi":"奇袭",
            "DIY_qixi_info":"①你可以将一张黑色牌当做【过河拆桥】使用；②当你对一名角色使用的【过河拆桥】时，你将此牌改为【顺手牵羊】并随机修改一张手牌的花色。",
            "DIY_qixi2":"奇袭",
            "DIY_qixi2_info":"",
            "DIY_kanpo":"看破",
            "DIY_kanpo_info":"每回合限一次，当一名其他角色发动武将牌上的非charlotte非direct非forced技时，你可以终止当前一切结算。",
            "DIY_bazhen":"八阵",
            "DIY_bazhen_info":"锁定技，你视为装备着【[]八卦阵】。若你防具栏有牌，则将“[]”改为“先天”。",
            "DIY_bazhen_bagua":"八卦阵",
            "DIY_bazhen_bagua_info":"当你需要使用或打出一张【闪】时，你可以进行一次判定，若判定结果不为[黑色]，视为你使用或打出了一张【闪】。若你防具栏有牌，则将[黑色]改为[♠]。",
            "DIY_huoji":"火计",
            "DIY_huoji_info":"①你可以将你的任意一张红色牌当作【火攻】使用；②你的【火攻】效果反转并且无法被【无懈可击】响应。",
            "DIY_huoji2":"火计",
            "DIY_huoji2_info":"",
            "DIY_qianxun":"谦逊",
            "DIY_qianxun_info":"①每当一张延时类锦囊牌或其他角色使用的【杀】或普通锦囊牌生效时，若你是此牌的唯一目标，你可以将所有手牌置于你的武将牌上，若如此做，你的回合开始时，你获得你武将牌上的所有牌；②你可以将以此法置于武将牌上的一张牌当作【杀】或【闪】打出或使用。",
            "DIY_qianxun2":"谦逊",
            "DIY_qianxun2_info":"",
            "DIY_qianxun_backup":"谦逊",
            "DIY_qianxun_backup_info":"",
            "DIY_lianying":"连营",
            "DIY_lianying_info":"当你失去最后的手牌时，你可以令至多X名角色各摸一张牌（X为你此次失去的手牌数）。",
            "DIY_kannan_storage":"戡难",
            "DIY_kannan_storage_info":"",
            "DIY_guanxing_zhuge":"观星",
            "DIY_guanxing_zhuge_info":"一名角色即将摸牌/判定时，你观看牌堆并可以将其中等量需要的牌置于牌堆顶。",
            "DIY_kongcheng":"空城",
            "DIY_kongcheng_info":"结束阶段，你可以将所有手牌置于武将牌上称为“疑兵”然后获得如下效果直到下回合开始：<br>当你成为其他角色使用牌的目标时，你可以猜测其手牌结构并令其猜测“疑兵”牌的结构；若其猜错或你猜对，此牌目标移除你。<br>准备阶段你弃置武将牌上所有“疑兵”。",
            "DIY_kongcheng_yibing":"空城",
            "DIY_kongcheng_yibing_info":"",
            "DIY_kongcheng2":"空城",
            "DIY_kongcheng2_info":"",
            "DIY_guizao":"瑰藻",
            "DIY_guizao_info":"当你于回合内因弃置或于回合外因使用、打出或弃置失去仅一张牌时，若此牌花色与上一次触发此技能的牌的花色不同，你可以回复1点体力或摸一张牌。",
            "DIY_jiyu":"讥谀",
            "DIY_jiyu_info":"出牌阶段，若你有未因〖讥谀〗而限制使用的手牌，你可以弃置一名其他角色一张牌，若此牌花色本回合未因[讥谀]而弃置过，你摸一张牌然后不能使用与之花色相同的牌且此花色的牌不计入手牌上限直至回合结束。反之，你失去1点体力并弃置一张牌。",
            "DIY_taoluan":"滔乱",
            "DIY_taoluan_info":"转换技，阴：你可以失去1点体力，视为使用一张本回合内未以此法使用过的普通锦囊牌；阳：你可以减1点体力上限，视为使用一张本回合内未以此法使用过的基本牌。<br>你的手牌上限+X（X为你本回合内发动〖滔乱〗次数）",
            "DIY_yangzhong":"殃众",
            "DIY_yangzhong_info":"当一张基本牌或普通锦囊牌指定唯一目标时，你可以弃置一张牌并令场上其他所有合法角色也成为此牌目标，然后至此牌结算完成时，其他角色第一次受到伤害时，你可以回复1点体力或加1点体力上限",
            "DIY_yangzhong2":"",
            "DIY_yangzhong2_info":"",
            "DIY_zhiheng":"制衡",
            "DIY_zhiheng_info":"出牌阶段限一次，你可以观看牌堆并获得其中至多X+1张牌再弃置'你以此法获得的牌数Y等于X+1'?Y-1:Y张牌（X为你发动此技能时的牌数）。",
            "DIY_huiwan":"会玩",
            "DIY_huiwan_info":"",
            "DIY_enyuan":"恩怨",
            "DIY_enyuan_info":"当你本回合累计从一名其他角色手中获得牌的次数与当前轮数均为2k+1或2k时（k∈N），你可以令其摸一张牌；<br>当你受到一名其他角色造成的一点伤害时或本回合累计被一名其他角色弃置/获得牌的次数与当前轮数均为2k+1或2k时（k∈N），你可以令其选择一项：交给你一张手牌或失去一点体力。",
            "DIY_enyuan_en":"恩怨",
            "DIY_enyuan_en_info":"",
            "DIY_enyuan_yuan":"恩怨",
            "DIY_enyuan_yuan_info":"",
            "DIY_enyuan_damage":"恩怨",
            "DIY_enyuan_damage_info":"",
            "DIY_xuanhuo":"眩惑",
            "DIY_xuanhuo_info":"其他角色的准备阶段开始时，其可以交给你一张牌，然后你从X个描述中包含“【杀】”的技能中选择一项技能令其获得至回合结束（X为场上角色数，且X∈[4,+∞)）。",
            "DIY_qinyin":"琴音",
            "DIY_qinyin_info":"出牌阶段限一次，你可以随机演奏一首音乐，并根据完成度来获得相应的分数和积分点数。然后你可以消耗3点积分来重置一个你已发动的限定技或消耗剩余积分摸取等量的牌（积分对牌的汇率为0.5）",
            "DIY_yeyan":"业炎",
            "DIY_yeyan_info":"限定技，出牌阶段，你可以依次分配3点火焰伤害，你每对一名角色额外分配一点，你需弃置一张牌。",
            "DIY_yuanchou":"怨仇",
            "DIY_yuanchou_info":"锁定技，①当你使用的【杀】指定目标角色后或成为【杀】的目标角色后，你令目标角色的防具技能无效直到此【杀】被抵消或造成伤害;②当你使用【刺杀】指定目标后，你令此牌需要依次使用或打出两张【闪】响应。",
            "DIY_juesheng":"决生",
            "DIY_juesheng_info":"限定技。一名其他角色的回合结束时，你可以减一点体力上限，若如此做，你改变势力并视为对其使用一张【刺杀】。当你因此【刺杀】造成伤害时，你失去〖怨仇〗并将伤害值改为X（X为目标角色的体力上限）。",
            "DIY_keji":"克己",
            "DIY_keji_info":"锁定技，当你不因获得初始手牌而获得牌后，你将所有手牌置于武将牌上。你可以如手牌般使用或打出“克”。当有“克”移动到处理区后，你选择一项：①获得一点护甲；②从牌堆中获得与“克”花色相同的一张牌。",
            "DIY_keji_gain":"克己",
            "DIY_keji_gain_info":"",
            "DIY_dujiang":"渡江",
            "DIY_dujiang_info":"觉醒技，准备阶段，若你拥有的“克”不小于3，你获得技能“夺荆”。",
            "DIY_duojing":"夺荆",
            "DIY_duojing_info":"当你使用【杀】指定目标后，若你有护甲，你可以减1点护甲并选择一项：①此【杀】不可被响应；②此【杀】无视防具；③此【杀】伤害+1；④此【杀】不计入次数限制。",
            "DIY_lveming":"掠命",
            "DIY_lveming_info":"出牌阶段限X次，你可以选择一名装备区装备不多于你的角色，令其选择一个点数，然后你进行判定：<br>若点数相同，你对其造成2点伤害；<br>若点数不同，则你随机获得其区域内的一张牌(X为你装备区内牌数且至少为1）。",
            "DIY_tunjun":"屯军",
            "DIY_tunjun_info":"锁定技，当你对一名其他角色造成伤害后，你将牌堆/弃牌堆中的一张装备牌置于你的一个可装备的装备栏内。你的每一种装备至多可以同时装备两件。",
            "DIY_tunjun1":"屯军",
            "DIY_tunjun1_info":"",
            "DIY_tunjun2":"屯军",
            "DIY_tunjun2_info":"",
            "DIY_tunjun3":"屯军",
            "DIY_tunjun3_info":"",
            "DIY_tunjun4":"屯军",
            "DIY_tunjun4_info":"",
            "DIY_tunjun5":"屯军",
            "DIY_tunjun5_info":"",
            "DIY_tianxiang":"天香",
            "DIY_tianxiang_info":"锁定技，①你跳过你的判定阶段；②你可以弃置判定区里的一张牌并将一张牌当做任意基本牌或锦囊牌使用或打出。",
            "DIY_liuli":"流离",
            "DIY_liuli_info":"当一名其他角色成为延时锦囊牌的目标时，其可弃置一张牌，然后将此牌转移给你。",
            "DIY_xingwu":"星舞",
            "DIY_xingwu_info":"联动技，当一名角色发动〖定江〗后，若其武将牌为「♋孙策周瑜」，你可以使用一张牌。",
            "DIY_shoucheng":"守成",
            "DIY_shoucheng_info":"出牌阶段限一次，你可以弃置一名角色一张牌并令其获得“守成”标记直至其下回合结束。有“守成”标记的角色跳过一个阶段（准备和结束除外）时，其可以执行一个同名阶段（每回合每种阶段限一次）。",
            "DIY_zhenting":"镇庭",
            "DIY_zhenting_info":"当一名角色不因此法而开始一个阶段（准备和结束除外）时，若此阶段是其执行的第偶数次同名阶段，你可以记录该阶段。一名角色回合开始时，你可以移除一项记录并令其执行一个对应的同名阶段。",
            "DIY_shengxi":"生息",
            "DIY_shengxi_info":"一名角色的出牌阶段结束时，若其本回合内未造成伤害，你可以令其摸一张牌。当你发动〖守成〗或〖镇庭〗而令一名角色执行阶段时，此技能失效直至一名角色的出牌阶段结束。",
            "DIY_shengxi2":"生息",
            "DIY_shengxi2_info":"",
            "DIY_dongcha":"洞察",
            "DIY_dongcha_info":"锁定技，当你即将进行判定时，你观看牌堆顶的一张牌，然后你可以将一张牌置于牌堆顶。",
            "DIY_yajun":"雅俊",
            "DIY_yajun_info":"当你受到一点伤害时，你可以获得〖洞察〗直至你的下回合开始并选择一项：<br>①获得造成此伤害的牌并摸一张牌；<br>②按照你选择的区域优先度随机获得每名其他角色区域里的一张牌，然后翻面。",
            "DIY_guijian":"规谏",
            "DIY_guijian_info":"当其他角色受到伤害时，你可以进行判定，若为红，其回复一点体力，若为黑，你摸一张牌并交给其一张牌。",
            "DIY_tiansuan":"天算",
            "DIY_tiansuan_info":"①锁定技，游戏开始/你的回合开始时，场上每缺少一种“命运签”，你获得之；②出牌阶段，你可以将一张“命运签”移动给一名没有“命运签”的其他角色；③有“命运签”的其他角色的出牌阶段开始时，你移去其所有“命运签”。",
            "DIY_tuxi":"突袭",
            "DIY_tuxi_info":"锁定技，当你摸牌时，你可以少摸任意张牌，然后获得等量的角色的各一张牌。",
            "DIY_powei":"破围",
            "DIY_powei_info":"锁定技，当你成为其他角色使用牌的唯一目标时，你令其获得“围”标记。你对有“围”标记的角色使用牌无距离和次数限制，且你使用牌指定有“围”的角色为唯一目标时，你摸一张牌。",
            "DIY_xuanfeng":"旋风",
            "DIY_xuanfeng_info":"当你失去装备区内的牌时，或于弃牌阶段弃置了至少两张牌后，你可以弃置其他角色两张牌，或移动场上一张装备牌。然后你可以视为使用一张无距离限制且不计入次数的【杀】或对距离1以内的一名其他角色造成一点伤害。",
            "DIY_yongjin":"勇进",
            "DIY_yongjin_info":"当你不于摸牌阶段摸牌而获得牌时，你可以使用一张装备牌。",
            "DIY_shicai":"恃才",
            "DIY_shicai_info":"锁定技，牌堆顶的三张牌对你可见。出牌阶段，你可以获得获得牌堆顶三张牌中的一张，然后此技能失效直至此牌离开你的手牌区。",
            "DIY_cunmu":"寸目",
            "DIY_cunmu_info":"锁定技，准备阶段或当你使用一张牌时，你可以观看牌堆底的三张牌并选择其中一张置于牌堆顶。",
            "DIY_chenglve":"成略",
            "DIY_chenglve_info":"锁定技，转化技，阴：摸牌阶段开始时，你放弃摸牌，改为摸一张牌，然后弃置两张手牌。若如此做，直到本回合结束，你使用与弃置牌花色相同的牌无距离和次数限制；阳：摸牌阶段开始时，你放弃摸牌，改为摸两张牌，然后弃置一张手牌。若如此做，直到本回合结束，你使用与弃置牌花色相同的牌无距离和次数限制",
            "DIY_panshi":"叛弑",
            "DIY_panshi_info":"准备阶段，若场上没有“义父”标记，你可令一名其他角色获得一个“义父”标记；若场上有“义父”标记，你可以弃置一张牌对有“义父”标记的角色造成一点伤害并移动“义父”标记。拥有“义父”标记的角色获得技能“慈孝”。",
            "DIY_panshi_damage":"",
            "DIY_panshi_damage_info":"",
            "DIY_cixiao":"慈孝",
            "DIY_cixiao_info":"锁定技，准备阶段，你给有“叛弑”技能的角色发零花钱；拥有技能“叛弑”的角色对你造成的伤害+1。",
            "DIY_cixiao_damage":"慈孝",
            "DIY_cixiao_damage_info":"",
            "DIY_liqu":"利驱",
            "DIY_liqu_info":"其他角色的出牌阶段限一次，其可以交给你一张牌并指定一名其他角色，然后你可以视为对其指定角色使用一张【杀】。",
            "DIY_liqu2":"利驱",
            "DIY_liqu2_info":"",
            "DIY_sidao":"伺盗",
            "DIY_sidao_info":"当你对一名其他角色使用牌后，你可以将一张手牌当做【顺手牵羊】对其使用。",
            "DIY_sidaox":"伺盗",
            "DIY_sidaox_info":"",
            "DIY_tanbei":"贪狈",
            "DIY_tanbei_info":"锁定技，当你即将造成伤害时，若目标有手牌则改为对其使用一张【顺手牵羊】，否则此伤害+1。",
            "DIY_fenxin":"焚心",
            "DIY_fenxin_info":"出牌阶段限一次，你可以移除你的一个技能或部分技能给予的效果，然后从X张势力与你相同的武将牌中选择一个技能获得之（X为场上角色数且不小于2），若你以此法移除了〖焚心〗，你可以移除一名其他角色武将牌上的一个技能。",
            "DIY_jieyuan":"竭缘",
            "DIY_jieyuan_info":"当你即将造成/受到伤害时，你可以弃置一张牌令此伤害+/-1",
            "DIY_mengjin":"猛进",
            "DIY_mengjin_info":"当你使用【杀】指定目标时，你可以弃置其X张牌（X为你的攻击范围）。",
            "DIY_juesi":"决死",
            "DIY_juesi_info":"出牌阶段，你可以弃置一张基本牌并弃置攻击范围内或攻击范围内包含你的其他角色一张牌，然后若其弃置的牌不是【杀】，你视为对其使用【杀】，此【杀】结算完成后，其视为对你使用一张的【杀】（你无法响应此【杀】）。",
            "DIY_qianhuan":"千幻",
            "DIY_qianhuan_info":"群势力技。当一名角色受到伤害时，[其]可以摸一张牌并将一张牌置于你的武将牌上（若你开启了扩展【千幻聆音】，则将[其]改为[你]）。当一名角色成为基本牌或锦囊牌的唯一目标时，你可以移去一张“千幻”牌，取消之。",
            "DIY_guhuo":"蛊惑",
            "DIY_guhuo_info":"吴势力技。你可以扣置一张牌当作一张基本牌或普通锦囊牌使用或打出。其他角色同时选择是否质疑。然后，你展示此牌。若有质疑的角色：若此牌为假，则此牌作废，且所有质疑者各摸一张牌；为真，则所有质疑角色于此牌结算完成后依次弃置一张牌或失去1点体力，并获得技能〖缠怨〗。",
            "DIY_guhuo_guess":"蛊惑",
            "DIY_guhuo_guess_info":"",
            "DIY_yaowu":"耀武",
            "DIY_yaowu_info":"锁定技，当你受到牌造成的伤害时，你获得此伤害渠道的牌对应的所有实体牌，然后若此牌为红色，则伤害来源摸X张牌；反之你摸X张牌（X为伤害数）。你的「耀武牌」不计入手牌上限且你使用【杀】的次数上限等于你手牌中「耀武牌」的数+1。",
            "DIY_daoshu":"盗书",
            "DIY_daoshu_info":"出牌阶段，你可以选择一名有手牌的其他角色并选择一个花色。若其手牌中含有此花色的牌，则你获得其一张手牌并对其造成1点伤害，若其有手牌，则你对其重复此流程。否则你须交给其一张与所选花色不同的手牌（没有则展示手牌）。",
            "DIY_weicheng":"伪诚",
            "DIY_weicheng_info":"当其他角色获得你的手牌后，你可以展示手牌并摸一张牌。",
            "DIY_zhengu":"镇骨",
            "DIY_zhengu_info":"结束阶段，你选择一名角色，并记你当前手牌数为X，直至你的下个准备阶段，你与其手牌数恒为X。",
            "DIY_zhengu2":"镇骨",
            "DIY_zhengu2_info":"",
            "DIY_qiangwu":"枪舞",
            "DIY_qiangwu_info":"锁定技，当你于出牌阶段使用第一张牌后，本回合你使用大于此牌点数的牌无次数限制；使用小于此牌点数的牌无距离限制。",
            "DIY_shenxian":"甚贤",
            "DIY_shenxian_info":"锁定技，每轮限一次，当你使用或打出一张牌时，你摸X张牌（X为此牌点数）。",
            "DIY_qiangwu2":"枪舞",
            "DIY_qiangwu2_info":"",
            "DIY_xuehen":"雪恨",
            "DIY_xuehen_info":"出牌阶段限一次，你可以弃置一张红色牌并横置至多X/一名角色，然后对其中一名角色造成一/X点火焰伤害（X为你已损体力值+1）。",
            "DIY_huxiao":"虎啸",
            "DIY_huxiao_info":"锁定技，当你对一名角色造成火属性伤害时，你于此回合内对其使用牌没有次数限制。",
            "DIY_huxiao2":"虎啸",
            "DIY_huxiao2_info":"",
            "DIY_huxiao3":"虎啸",
            "DIY_huxiao3_info":"锁定技，你的攻击范围恒为3。当你使用的【杀】被目标角色使用的【闪】抵消时，你获得此【杀】然后可以对其使用一张【杀】（无距离限制）。",
            "DIY_wuji":"武继",
            "DIY_wuji_info":"觉醒技，结束阶段开始时，若你于此回合内造成过3点或更多伤害，你加1点体力上限并回复1点体力，然后修改〖虎啸〗。",
            "DIY_fengpo":"凤魄",
            "DIY_fengpo_info":"锁定技，当一名角色使用或打出虚拟或转化牌后，你摸一张牌，然后你可以使用一张牌。你可以将一张♦牌当作【火杀】使用或打出。",
            "DIY_fengpo2":"凤魄",
            "DIY_fengpo2_info":"",
            "DIY_zengou":"谮构",
            "DIY_zengou_info":"当一名你攻击范围内的角色使用或打出牌响应对其使用的牌时，你可以弃置一张牌或失去一点体力，若如此做你取消此牌所有目标并获得之。",
            "DIY_zhangji":"长姬",
            "DIY_zhangji_info":"结束阶段开始时，若你是场上体力值最多的角色，你可以视为对一名角色使用了一张【杀】，若你是场上手牌数最多的角色，你可以视为对一名角色使用了一张【借刀杀人】。若均满足你摸X张牌。（X为你本回合造成的伤害总值）",
            "DIY_zenhui":"谮毁",
            "DIY_zenhui_info":"当你使用【杀】或普通锦囊牌指定唯一目标时，你可以选择一名其他角色并令其选择一项：①成为此牌的使用者且本回合移除此项选择，此回合结束时，你可以执行一个额外回合；②成为此牌额外目标。",
            "DIY_zenhui2":"谮毁",
            "DIY_zenhui2_info":"",
            "DIY_jiaojin":"骄矜",
            "DIY_jiaojin_info":"当你成为男性角色使用【杀】或锦囊牌的目标时，你可以弃置一张牌然后摸一张牌（正面朝上移动），若此牌不为基本牌，你与其交换此牌目标和使用者身份。",
            "DIY_jiezi":"截辎",
            "DIY_jiezi_info":"①锁定技，当有角色跳过摸牌阶段后，你获得一枚“辎”。②一名角色的摸牌阶段结束时，若你有“辎”，你可以移去一枚“辎”，然后令其获得一个额外的摸牌阶段。",
            "DIY_duanliang":"断粮",
            "DIY_duanliang_info":"一名其他角色的回合开始时，你可以弃置一张黑色牌并进行判定，若结果不为♣，其跳过摸牌阶段。",
            "DIY_qimei":"齐眉",
            "DIY_qimei_info":"准备阶段，你可以选择一名其他角色。你获得如下效果直到下回合开始：每回合每项限一次，当其中一方的手牌数/体力值发生变化时，若双方手牌数/体力值不同，手牌数/体力值较小的一方将其调整至与另一方相同。",
            "DIY_yuqi":"隅泣",
            "DIY_yuqi_info":"当一名角色受到一点伤害后，你可以观看牌堆顶的两张牌，然后将其分配给任意角色。",
            "DIY_shanshen":"善身",
            "DIY_shanshen_info":"若场上红色/黑色牌较多，你视为拥有技能“明哲”/“帷幕”，否则你视为拥有“隅泣”。",
            "DIY_shanshen_weimu":"帷幕",
            "DIY_shanshen_weimu_info":"锁定技。①你不能成为黑色锦囊牌的目标。②当你于回合内成为其他角色使用牌的目标时，取消之。",
            "DIY_shanshen_mingzhe":"明哲",
            "DIY_shanshen_mingzhe_info":"当你于回合外使用或打出红色牌，或因弃置失去一张红色牌后，你可以摸一张牌。",
            "DIY_xianya":"娴雅",
            "DIY_xianya_info":"一名角色回合结束时，若你本回合失去过牌，你可以令一名角色摸一张牌；若你本回合受到过伤害，则改为摸两张牌。",
            "DIY_juece":"绝策",
            "DIY_juece_info":"出牌阶段，你可以将一张手牌交给一名其他角色，若其手牌数大于其体力值，你对其造成1点伤害且【绝策】失效直至一名角色死亡或本回合结束。",
            "DIY_juece1":"绝策",
            "DIY_juece1_info":"",
            "DIY_juece2":"",
            "DIY_juece2_info":"",
            "DIY_mieji":"灭计",
            "DIY_mieji_info":"出牌阶段限一次，你可以将一张非基本牌置于牌堆顶并选择一名其他角色，直至其下回合结束，其手牌中与此牌颜色相同的牌均视为【毒】。",
            "DIY_mieji2":"灭计",
            "DIY_mieji2_info":"",
            "DIY_qiaoshuo":"巧说",
            "DIY_qiaoshuo_info":"出牌阶段，你可以与一名其他角色拼点。若你：赢，你获得一枚“巧说”标记；没赢，你移去一枚“巧说”标记，若你没有“巧说”标记则改为结束出牌阶段。当你使用基本牌或普通锦囊牌时，你可以移去一枚“巧说”标记并增加或减少一个目标（目标数不能小于一）。",
            "DIY_qiaoshuo2":"巧说",
            "DIY_qiaoshuo2_info":"",
            "DIY_zongshi":"纵适",
            "DIY_zongshi_info":"当你拼点后，你可以观看牌堆顶的一张牌，然后选择一项：获得此牌，或获得两张拼点牌中点数较小的一张。",
            "DIY_jiang":"激昂",
            "DIY_jiang_info":"锁定技，当你造成或受到1点伤害时，你加1点体力上限。",
            "DIY_hunzi":"魂姿",
            "DIY_hunzi_info":"觉醒技，准备阶段或当你进入濒死状态时，若你的体力值不大于1，你将体力回复至1点，然后获得〖英霸〗、〖覆海〗和〖冯河〗。",
            "DIY_lianji":"连计",
            "DIY_lianji_info":"出牌阶段限两次，你可以将一张牌当作不以此法使用过的【笑里藏刀】、【借刀杀人】或【美人计】使用。",
            "DIY_lianji2":"连计",
            "DIY_lianji2_info":"",
            "DIY_moucheng":"谋逞",
            "DIY_moucheng_info":"限定技，当你发动〖连计〗至此牌结算完成时，若有一名角色死亡，你可以加一点体力上限并将体力值和手牌调整至体力上限，然后你失去〖连计〗并获得〖矜功〗。",
            "DIY_jingong":"矜功",
            "DIY_jingong_info":"当你需要使用或打出一张牌时，你可以观看牌堆顶的三张牌，并使用或打出之，反之你失去一点体力。（【无懈可击】除外）",
            "DIY_jingong_backup":"矜功",
            "DIY_jingong_backup_info":"",
            "DIY_lingren":"凌人",
            "DIY_lingren_info":"出牌阶段限一次或当你受到伤害后，你可以展示你的所有手牌，并将其中一种颜色的牌依次当做无距离限制的【杀】使用。",
            "DIY_lingren2":"",
            "DIY_lingren2_info":"",
            "DIY_fujian":"伏间",
            "DIY_fujian_info":"锁定技，每回合限一次，当你于回合外使用或打出一张【杀】时，你令当前回合角色非锁定技失效，然后摸X张牌（X为其武将牌上技能数）",
            "DIY_wuniang":"武娘",
            "DIY_wuniang_info":"当你需要使用或打出一张【杀】时，你可以交给其他角色一张手牌并摸一张牌（若「阳·关索」在场，其也摸一张牌），视为使用或打出了一张【杀】。",
            "DIY_wuniang_use":"武娘",
            "DIY_wuniang_use_info":"",
            "DIY_zhennan":"镇南",
            "DIY_zhennan_info":"当一名角色造成伤害时，若其本回合使用带有「伤害」标签的牌数不小于[二]，你可以与其各摸[一]张牌（若其为【云将·花鬘】，你将[]内数字对调）",
            "DIY_shanjia":"缮甲",
            "DIY_shanjia_info":"准备阶段，你可以摸X张牌再弃置X-Y张牌。你每以此法弃置一张装备牌，你便视为使用一张无距离限制的【杀】（X为你本局游戏使用过的装备牌数且X∈[max(3,Y),7]，Y为本局游戏你以此法弃置的装备牌数）。",
            "DIY_ganglie":"刚烈",
            "DIY_ganglie_info":"当你受到1点伤害时，你可以竖置体力牌然后对伤害来源造成1点伤害或弃置伤害来源两张牌。",
            "DIY_fenyong":"愤勇",
            "DIY_fenyong_info":"锁定技，一名角色的回合结束时，若你的体力牌竖置，你横置之，然后选择一项：①摸X张牌；②弃置当前回合角色X张牌（X为你的已损体力值）。",
            "DIY_ganglie2":"刚烈",
            "DIY_ganglie2_info":"",
            "DIY_tuifeng":"推锋",
            "DIY_tuifeng_info":"出牌阶段结束时，若你的手牌数大于体力值，或当你受到1点伤害后或当你使用牌指定唯一目标并对其造成伤害后，你可以摸一张牌，然后将一张手牌置于武将牌上，称为“锋”。准备阶段，若你有“锋”，你可以移去任意张“锋”，摸等量的牌，然后本回合你可以多使用X张【杀】。（X为你本回合移去“锋”的数量）",
            "DIY_tuifeng2":"推锋",
            "DIY_tuifeng2_info":"",
            "DIY_tuifeng3":"推锋",
            "DIY_tuifeng3_info":"",
            "DIY_tuifeng4":"",
            "DIY_tuifeng4_info":"",
            "DIY_longdan":"龙胆",
            "DIY_longdan_info":"你可以将X张牌当做任意一张基本牌打出或使用，若如此做，你摸一张牌（X为你本局游戏发动〖龙胆〗次数且至多为7）。",
            "DIY_jizhu":"积著",
            "DIY_jizhu_info":"你的回合开始时，你可以摸X张牌再弃置Y张牌，然后令本回合你使用【杀】/【桃】的伤害值/回复值+Y，若如此做，你将X归零（Y=max(7-X,1)）。",
            "DIY_huaiyuan":"怀远",
            "DIY_huaiyuan_info":"锁定技，你于本回合获得的牌称为“绥”（初始手牌除外）。你不能使用或打出“绥”，你的“绥”不计入手牌上限。",
            "DIY_sui":"绥",
            "DIY_sui_info":"",
            "DIY_dezhang":"德彰",
            "DIY_dezhang_info":"一名角色的出牌阶段开始时，你可以重铸所有非“绥”牌，若如此做，当前回合角色的攻击范围和使用【杀】次数上限+X（X为你以此法重铸的牌数），若其不是你，你获得一点护甲。",
            "DIY_guowu":"帼武",
            "DIY_guowu_info":"当你使用伤害性牌指定一名其他角色时，若X≮3（X为你累计对其使用的伤害性牌数），你可以选择一项：①获得其一张牌；②令此牌对其的伤害值+1；③背水：将X归零。",
            "DIY_zhuangrong":"妆戎",
            "DIY_zhuangrong_info":"回合结束时，你可以弃置所有手牌并获得等量的护甲，若如此做，你的下个回合开始时，你移除所有护甲并摸等量的牌，然后本回合你视为拥有“神威”、“无双”。",
            "DIY_607shenwei":"神威",
            "DIY_607shenwei_info":"锁定技，摸牌阶段，你多摸两张牌；你的手牌上限+2。",
            "DIY_607wushuang":"无双",
            "DIY_607wushuang_info":"锁定技，当你使用【杀】指定一个目标后，该角色需依次使用两张【闪】才能抵消此【杀】；当你使用【决斗】指定一个目标后，或成为一名角色使用【决斗】的目标后，该角色每次响应此【决斗】需依次打出两张【杀】。",
            "DIY_jishe":"极奢",
            "DIY_jishe_info":"出牌阶段，若你的手牌上限大于0，你可以摸一张牌，然后你本回合的手牌上限-1。结束阶段开始时，你摸X的Y次方张牌（X为你本回合发动此技能次数，Y为你的手牌数）",
            "DIY_qieting":"窃听",
            "DIY_qieting_info":"当一名其他角色即将获得牌时，你可以观看这些牌并用任意张手牌替换其中等量的牌，然后若这些牌数大于1且颜色相同，你摸一张牌。",
            "DIY_antao":"暗涛",
            "DIY_antao_info":"每回合限一次，当一名角色受到伤害时，你可以弃置一张♠牌，然后对其或伤害来源造成等量伤害。",
            "DIY_zhuilie":"追猎",
            "DIY_zhuilie_info":"锁定技，你使用【杀】无距离限制；当你使用【杀】指定目标后，若其不在你的攻击范围内，此【杀】不计入使用次数限制且你做一道追及相遇的题目，若你做对，此【杀】的伤害基数改为X（X为其体力值）。否则你失去1点体力。",
            "DIY_shefu":"设伏",
            "DIY_shefu_info":"出牌阶段，你可以将一张花色与「伏兵」不同的牌扣置于武将牌上称为「伏兵」并记录一个牌名（须与其他「伏兵」记录的牌名不同）。当一名角色使用牌时，你可以获得此牌并对其使用记录此牌名的「伏兵」。",
            "DIY_shefu2":"设伏",
            "DIY_shefu2_info":"",
            "DIY_benyu":"贲育",
            "DIY_benyu_info":"当你造成或受到1点伤害后，你可以将手牌摸至5，若此时是其的回合，其本回合技能失效。",
            "DIY_renjie":"忍戒",
            "DIY_renjie_info":"锁定技，当你受到1点伤害后，你获得一枚“忍”标记；锁定技，当你于弃牌阶段内弃置牌后，你获得等同于失去的牌数量的“忍”标记。",
            "DIY_baiyin":"拜印",
            "DIY_baiyin_info":"限定技，准备阶段，你可以移去所有“忍”标记，并将体力上限、体力值和手牌数调整为Y，然后你失去“忍戒”并可以从“鬼才”、“放逐”、“制衡”、“集智”和“完杀”中选择Y个获得之（Y为你移去所有“忍”标记的数量）。",
            "DIY_baiyin_jizhi":"集智",
            "DIY_baiyin_jizhi_info":"当你使用锦囊牌时，你可以摸一张牌。若此牌为基本牌，则你可以弃置之，然后令本回合手牌上限+1。",
            "DIY_baiyin_zhiheng":"制衡",
            "DIY_baiyin_zhiheng_info":"出牌阶段限一次，你可以弃置任意张牌并摸等量的牌，若你在发动〖制衡〗时弃置了所有手牌，则你多摸一张牌。",
            "DIY_baiyin_wansha":"完杀",
            "DIY_baiyin_wansha_info":"锁定技。①你的回合内，不处于濒死状态的角色不能使用【桃】。②当有角色于你的回合内进入濒死状态时，你令其以外的所有其他角色的非锁定技失效直到此濒死状态结算结束。",
            "DIY_lianpo":"连破",
            "DIY_lianpo_info":"一名角色的回合结束时，若你本回合内杀死过角色，则你可以进行一个额外的回合。",
            "DIY_baiyin_guicai":"鬼才",
            "DIY_baiyin_guicai_info":"在任意角色的判定牌生效前，你可以打出一张牌代替之。",
            "DIY_baiyin_fangzhu":"放逐",
            "DIY_baiyin_fangzhu_info":"当你受到伤害后，你可令一名其他角色摸X张牌（X为你已损失的体力值），然后该角色将武将牌翻面。",
            "DIY_qingxi":"倾袭",
            "DIY_qingxi_info":"当你使用【杀】或【决斗】指定目标后，你可以令其弃置X张手牌（X为4-你至其的距离且至少为1），然后令此牌对其伤害+1并进行判定，若结果为红色，此牌不能被该角色响应。",
            "DIY_qinguo":"勤国",
            "DIY_qinguo_info":"当你因使用或失去装备牌导致装备区内牌的数量发生变化后，你可以视为使用一张【杀】（不计入次数），然后若你装备区内牌的数量等于/不等于你的体力值，则你回复1点体力/摸一张牌。",
            "DIY_hengwu":"横婺",
            "DIY_hengwu_info":"锁定技，当你使用或打出一张牌后，其他角色本回合不能使用或打出点数大于此牌的牌且本回合你使用小于此牌点数的牌无次数限制。",
            "DIY_shouli":"狩骊",
            "DIY_shouli_info":"锁定技，当你使用或打出本回合第一张该花色的牌时，你摸4-X张牌，然后本回合你的牌点数-X（X为本回合你已使用或打出牌的花色数）",
            "DIY_hengwu2":"横婺",
            "DIY_hengwu2_info":"",
            "DIY_hengwu3":"横婺",
            "DIY_hengwu3_info":"",
            "DIY_yanjiao":"严教",
            "DIY_yanjiao_info":"出牌阶段限一次，你可以令一名其他角色回答一道题目，若其答对，你摸四张牌，然后将两张牌交给其；反之，你对其造成一点伤害。",
            "DIY_shengshen":"省身",
            "DIY_shengshen_info":"当你受到有伤害来源的伤害时，你可以对伤害来源发动一次〖严教〗，或摸一张牌然后令你〖严教〗发动次数+1直至你的下个回合结束阶段。",
            "DIY_jiufa":"九伐",
            "DIY_jiufa_info":"锁定技，你始终跳过你的判定、摸牌和弃牌阶段。每回合限X次，你可以于出牌阶段后执行一个出牌阶段（X起始为0上限为9，你每于回合内造成一次伤害，X+1）",
            "DIY_tianren":"天任",
            "DIY_tianren_info":"锁定技，出牌阶段开始时，你须选择一项：1.将手牌调整至四张；2.依次重铸四张牌。若你是第一次选择或所选项与上一次所选择不同，你下个出牌阶段时选项数字+1；反之，你失去一点体力。",
            "DIY_paoxiao":"咆哮",
            "DIY_paoxiao_info":"锁定技，你使用【杀】无次数限制。当你使用或打出一张【杀】时，若此牌与你上一张使用或打出的【杀】颜色不同，你从牌堆/弃牌堆中获得一张与此牌颜色不同的牌，然后你使用的下一张【杀】无距离限制。",
            "DIY_wusheng":"武圣",
            "DIY_wusheng_info":"你可以将一张【杀】或红色牌当做任意点数任意花色任意属性的【杀】使用或打出。你的♦️/♥️【杀】无距离/次数限制。",
            "DIY_tianzuo":"天佐",
            "DIY_tianzuo_info":"锁定技，当你的牌因使用，打出或弃置而进入弃牌堆时，你将这些牌标记为“策”并随机插入牌堆。当“策”被一名角色获得时，你移除其“策”标记并选择一项：1.令你或其获得牌堆中的一张“智囊”；2.视为对其使用一张【奇正相生】。",
            "DIY_lingce":"灵策",
            "DIY_lingce_info":"牌堆中的“策”始终对所有人可见。牌堆中的“策”每有一种牌名，你摸牌阶段的额定摸牌数便+1（至多+3）。当“策”的牌名超过三种时，每超过一种，你的手牌上限便-1（至多-3，且至多减至1）。",
            "DIY_dinghan":"定汉",
            "DIY_dinghan_info":"出牌阶段限一次，你可以增加或移除一个“智囊”。",
            "DIY_qianchong":"谦冲",
            "DIY_qianchong_info":"当你需要使用或打出一张即时牌时，你可以声明此牌名，然后令场上所有男性角色交给你一张手牌，若你以此法获得了声明牌或获得牌数大于你的体力值，你失去一点体力。",
            "DIY_dulie":"笃烈",
            "DIY_dulie_info":"锁定技，当你使用【杀】指定一名其他角色为目标或成为其他角色使用【杀】的目标时，你进行判定，若为♥️，此【杀】目标移去其/你，反之，本回合“荡魔”失效，然后你获得“神著”。",
            "DIY_dangmo":"荡魔",
            "DIY_dangmo_info":"锁定技，你使用【杀】可以额外指定任意个合法目标，当其中一个角色使用【闪】抵消了此【杀】，你获得目标各一张牌，并令此【杀】对剩余角色无效。",
            "DIY_dangmo_audio":"",
            "DIY_dangmo_audio_info":"",
            "DIY_dangmo_trigger":"荡魔",
            "DIY_dangmo_trigger_info":"",
            "DIY_dangmo_remove":"荡魔",
            "DIY_dangmo_remove_info":"",
            "DIY_shenzhu":"神著",
            "DIY_shenzhu_info":"出牌阶段，你可以将一张牌当做无距离和次数限制的【杀】对一名其他角色使用，此【杀】结算完成后，你选择一项：1.摸一张牌，然后此技能失效直至你下一次使用【杀】或造成伤害；2.摸三张牌，然后失去此技能。",
            "DIY_shenzhu_audio":"",
            "DIY_shenzhu_audio_info":"",
            "DIY_xionghuo":"凶镬",
            "DIY_xionghuo_info":"出牌阶段限一次，你可以令一名角色对自己造成1点伤害，然后其视为使用一张伤害类牌，且你可以令此牌：1.伤害+1；2.额外结算一次；3.背水：其将手牌数调整至一。",
            "DIY_shajue":"杀绝",
            "DIY_shajue_info":"你可以将一名角色手牌/装备区内的最后一张牌当作无距离和次数限制的【杀】使用，当一名角色在此【杀】结算过程中进入濒死状态时，你重置你回合使用【杀】的次数并获得令其进入濒死状态的牌。",
            "DIY_luoshen":"洛神",
            "DIY_luoshen_info":"准备阶段，你可以进行判定，并获得此判定牌，若所有判定结果的花色集合A⫋集合B={♥️,♠️,♦️,♣️}，则可重复此流程（若你拥有〖倾国〗且颜色为红色，你翻面）。你通过〖洛神〗获得的牌，不计入当前回合的手牌上限。",
            "DIY_qingguo":"倾国",
            "DIY_qingguo_info":"当一名角色翻面时，你可以选择一名男性角色并选择一项：令其/你将手牌数调整至与你/其相同。",
            "DIY_yilue":"异略",
            "DIY_yilue_info":"锁定技，牌堆顶等于你手牌数的牌对你可见。你的第X张牌视为牌堆中的第X张牌（装备除外）。",
            "DIY_zhaoran":"昭心",
            "DIY_zhaoran_info":"一名角色的出牌阶段开始时，你可以展示所有手牌，然后当你于此阶段使用一张牌后，你卜算Y（Y为此阶段你已使用花色数），若你手牌中没有同花色的牌，你摸一张牌。",
            "DIY_dili":"帝力",
            "DIY_dili_info":"锁定技，游戏开始时，你随机装备一把“吴王六剑”。你使用的武器牌随机变更为一把“吴王六剑”。<br><span style='font-family: yuanli'>“吴大皇帝有宝剑六，一曰‘白虹’，二曰‘紫电’，三曰‘辟邪’，四曰‘流星’，五曰‘青冥’，六曰‘百里’。”——晋·崔豹《古今注》</span>",
            "DIY_baihongjian":"白虹剑",
            "DIY_baihongjian_info":"每回合限一次，你可以视为使用或打出一张【杀】。",
            "DIY_liuxingjian":"流星剑",
            "DIY_liuxingjian_info":"锁定技，你可以对攻击范围外的角色使用【杀】；当你不以此法使用【杀】指定目标时，你将手牌中所有的【杀】对其使用。",
            "DIY_zidianjian":"紫电剑",
            "DIY_zidianjian_info":"当你对一名角色造成一点伤害后，你可以将一张牌当作【雷杀】对距离其一以内的角色使用。",
            "DIY_bixiejian":"辟邪剑",
            "DIY_bixiejian_info":"锁定技，当你成为一张【杀】的目标时，你须对此【杀】使用者使用一张【杀】以抵消此【杀】，否则你不可响应此【杀】。",
            "DIY_qingmingjian":"青冥剑",
            "DIY_qingmingjian_info":"当你使用【杀】指定目标后，你可以弃置一张牌或失去1点体力并摸一张牌，然后此【杀】不可响应。",
            "DIY_bailijian":"百里剑",
            "DIY_bailijian_info":"每回合限一次，你可以收回一名角色使用的未造成伤害的伤害类牌。",
            "DIY_quyu":"驱御",
            "DIY_quyu_info":"出牌阶段限一次/当你发动一次装备技能时，你可以将一张指定的“吴王六剑”置入装备区。",
            "DIY_qingxian":"清弦",
            "DIY_qingxian_info":"游戏开始时/出牌阶段限一次/当你造成或受到伤害时，你可以切换至“清弦韵谱”中的一个。<br><span style='font-family: yuanli'>※清弦韵谱<br>当你切换“清弦韵谱”的回合结束时，你可以执行一次韵谱的效果。</span>",
            "DIY_qingxian_ji":"激弦",
            "DIY_qingxian_ji_info":"当你受到伤害后，你可以令一名其他角色失去1点体力，随机使用一张装备。",
            "DIY_qingxian_lie":"烈弦",
            "DIY_qingxian_lie_info":"当你回复体力后，你可以令一名其他角色失去1点体力，随机使用一张装备。",
            "DIY_qingxian_rou":"柔弦",
            "DIY_qingxian_rou_info":"当你受到伤害后，你可以令一名其他角色回复1点体力，弃置一张装备。",
            "DIY_qingxian_he":"和弦",
            "DIY_qingxian_he_info":"当你回复体力后，你可以令一名其他角色回复1点体力，弃置一张装备。",
            "DIY_xiangjian":"相煎",
            "DIY_xiangjian_info":"锁定技，你的回合开始时，你须声明一种牌的类型，本回合你的手牌均视为此类型。然后你须选择一名角色，其无法使用基本牌指定目标且无法成为基本牌的目标直至你的下回合开始时。",
            "DIY_xiangjian_audio":"",
            "DIY_xiangjian_audio_info":"",
            "DIY_yicheng":"疑城",
            "DIY_yicheng_info":"出牌阶段，你可以选择一名没有“篱”的角色，并将其一张牌置于其武将牌上成为“篱”。有“篱”的角色成为非装备牌的目标时，你可以将其武将牌上的“篱”置入弃牌堆并视为其使用一张你指定的防具牌（以此法转化的防具牌于此牌结算完成后销毁）。",
            "DIY_weijiang":"威弜",
            "DIY_weijiang_info":"锁定技，你的初始攻击距离为2和4。当你使用一张【杀】指定唯一目标后，你令符合攻击距离的且至你距离与其相同的一名其他角色成为此【杀】额外目标，若无可选角色，此【杀】额外结算一次。",
            "DIY_gongjijuli":"攻击距离",
            "DIY_gongjijuli_info":"攻击距离为你使用【杀】可以指定角色至你的距离。",
            "DIY_qili":"蒺藜",
            "DIY_qili_info":"当你于一回合内使用或打出第X张牌时，你可以摸/弃置一张牌令〖威弜〗中的数字-/+1或令你参与计算的距离+/-1（X为你的攻击距离）。",
            "DIY_jinglve":"景略",
            "DIY_jinglve_info":"出牌阶段每名角色限一次，你可以观看一名角色的手牌并将记录其中一张称为「死士」。当一名其他角色使用「死士」指定你为目标时，你可以取消此牌所有目标，然后获得此牌并可以使用之，",
            "DIY_chebian":"掣变",
            "DIY_chebian_info":"限定技，出牌阶段，你可以展示所有「死士」牌并获得之，然后依次使用其中能使用的牌（无距离和次数限制），最后你移除所有「死士」记录。",
            "DIY_longyin":"龙吟",
            "DIY_longyin_info":"当一名角色于其出牌阶段内使用【杀】时，你可以弃置一张牌，令此【杀】不计入出牌阶段的使用次数，然后若此【杀】或你弃置的牌为红色，你与其获得各自的相关牌（一名角色以此法只能获得其中一张）。",
            "DIY_guanwei":"观微",
            "DIY_guanwei_info":"一名角色的弃牌阶段结束时，你可以弃置一张牌并选择一名本回合使用或打出牌数＞1且颜色均相同的角色，其摸两张牌并执行一个出牌阶段。",
            "DIY_gongqing":"公清",
            "DIY_gongqing_info":"锁定技，当你受到伤害时，若伤害来源手牌数＞/＜你，此伤害-/+1。",
            "DIY_jianxiong":"奸雄",
            "DIY_jianxiong_info":"当你受到伤害时，你可以记录场上一名其他角色的一个触发技。当你或其受到伤害1点后，你可以尝试发动一个你记录的触发技。",
            "DIY_yingzi":"英姿",
            "DIY_yingzi_info":"摸牌阶段，你可以放弃摸牌并展示牌堆顶的三张牌，将其中一张交给一名角色然后获得其余的牌。以此法获得牌的角色获得以下效果直至你下次发动此技能：你的摸牌数+1；你的手牌上限等于你的体力上限。",
            "DIY_fanjian":"反间",
            "DIY_fanjian_info":"①出牌阶段，你可以将一张牌交给一名其他角色；②锁定技，当一名其他角色获得你的一张牌后，你令其选择一项：展示手牌并弃置所有与之相同花色的牌，或失去1点体力。",
            "DIY_duanfa":"断发",
            "DIY_duanfa_info":"每回合限X次，当你需要使用或打出【杀】/【闪】时，你可以弃置一张黑色牌或【杀】，然后视为使用或打出此牌（X为你的体力上限）。",
            "DIY_youdi":"诱敌",
            "DIY_youdi_info":"结束阶段开始时，你可以令一名其他角色弃置你的一张牌。当你的一张牌因弃置而进入弃牌堆时，若此牌：不为黑色，你摸一张牌；不为【杀】，你可以获得一名其他角色的一张牌。",
            "DIY_yili":"遗礼",
            "DIY_yili_info":"出牌阶段限一次，你可以将中央区内的一张牌交给一名其他角色并摸一张牌。",
            "DIY_zhenglun":"整论",
            "DIY_zhenglun_info":"当你即将摸牌时，你可以令至多X名其他角色依次重铸一张牌，若如此做，你将摸牌数改为中央区内牌的花色数（X为你的体力上限）。",
            "DIY_zhiyi":"执义",
            "DIY_zhiyi_info":"一名角色的结束阶段，你可以循环执行以下流程X次：使用中央区内的一张牌或摸一张牌（X为你本回合失去的牌数）。",
            "DIY_chuhai":"除害",
            "DIY_chuhai_info":"剩余可用3次。出牌阶段限一次，你可以选择一项：弃置X张牌然后对一名其他角色造成1点伤害或令一名其他角色弃置X张牌然后对你造成一点伤害（X为此技能发动次数+1）。",
            "DIY_chuhai_gai":"除害·改",
            "DIY_chuhai_gai_info":"出牌阶段限一次，你可以弃置一张牌并对一名其他角色造成1点伤害或令一名其他角色弃置一张牌并对你造成1点伤害。",
            "DIY_chuhai_gai_skill":"除害",
            "DIY_chuhai_gai_skill_info":"出牌阶段限一次，你可以弃置一张牌并对一名其他角色造成1点伤害或令一名其他角色弃置一张牌并对你造成1点伤害。",
            "DIY_xianghai":"乡害",
            "DIY_xianghai_info":"锁定技，其他角色的手牌上限-1。当你发动【除害】对自己造成伤害时，你回满体力，然后修改【除害】、失去【乡害】并获得【彰名】。",
            "DIY_zhangming":"彰名",
            "DIY_zhangming_info":"锁定技，当你造成/受到伤害后，若场上有唯一手牌最多/少且不为你，你令其随机弃置/摸一张牌，然后你获得两张与之类别不同的牌。",
            "DIY_jingce":"精策",
            "DIY_jingce_info":"准备阶段，你可以选择任意名角色并展示牌堆顶等量的牌，然后这些角色依次可以用一张手牌替换其中一张牌，最后你将这些牌按任意次序放置于武将牌上称为“策”。当你使用或打出一张牌时，若你有“策”，你展示最上方的“策”，然后若这两张牌花色相同，你获得此“策”；反之，则弃置之，然后你可以调整“策”的顺序。",
            "DIY_langxi":"狼袭",
            "DIY_langxi_info":"准备阶段，你可以表演一次射击，然后对一名其他角色造成射击分数点的伤害。",
            "DIY_yisuan":"弈算",
            "DIY_yisuan_info": "当你于出牌阶段使用的锦囊牌结算结束后，你可以减1点体力上限并获得此牌对应的所有实体牌。",
            "DIY_wurong":"怃戎",
            "DIY_wurong_info":'出牌阶段限一次，你可以和一名其他角色同时打出一张标准包/军争包/逐鹿天下包的即时牌。若其打出的牌不是你打出牌的其他对应响应牌，你可以视为对其执行X次你打出牌的效果或摸X张牌。<br>（X为其打出牌的其他对应响应牌数中较大一值）<br><img src="'+lib.assetURL+'extension/天牢令/biao.png" width="470" height="138">',
            "DIY_shizhi":"矢志",
            "DIY_shizhi_info":"锁定技，若你的体力值为1，你的【闪】视为【杀】；且你的弃牌阶段改为出牌阶段。",
            "DIY_longhun":"龙魂",
            "DIY_longhun_info":"当你不以此法使用一张牌指定唯一目标时，你可以视为对其使用另一种牌名的即时牌，或对一名其他角色使用一张同名即时牌。然后取消此牌目标。",
            "DIY_juejing":"绝境",
            "DIY_juejing_info":"当你成为体力值不小于你的其他角色使用牌的目标时，你可以视为对目标使用一张【杀】，若你在此【杀】结算期间造成了伤害，此牌对你无效。此【杀】结算完成后你须弃置一张牌。",
            "DIY_leiji":"雷击",
            "DIY_leiji_info":"当一张红色判定牌生效后，你可以令一名其他角色进行一次判定，若结果为♠️/♣️，你可以对一名其他角色造成2/1点雷属性伤害。",
            "DIY_guidao":"鬼道",
            "DIY_guidao_info":"当你需要使用或打出【杀】/【闪】时，你可以令当前阶段角色进行一次判定，若结果为红，则视为你使用或打出之。",
            "DIY_kuangcai":"狂才",
            "DIY_kuangcai_info":"锁定技，你使用牌无距离和次数限制。当你使用或打出的一张牌结算完成后，你弃置所有手牌然后摸X张牌（X为中央区内的花色数）。",
            "DIY_kurou":"苦肉",
            "DIY_kurou_info":"出牌阶段，你可以展示牌堆顶的两张牌，然后你可以获得之并失去一点体力。",
            "DIY_shengan_jieying":"劫营",
            "DIY_shengan_jieying_info":"出牌阶段，你可以对一名攻击范围内的其他角色使用一张【杀】。此【杀】可以改为获得目标至多X张牌（X为其体力值）",
            "DIY_poxi":"魄袭",
            "DIY_poxi_info":"准备阶段，你可以失去一点体力并从牌堆中获得一张【杀】，若如此做，本回合你的攻击范围无限且你使用的【杀】结算完成后，若此【杀】未造成伤害，你收回之",
            "DIY_xiaojun":"骁隽",
            "DIY_xiaojun_info":"锁定技，你可装备武器牌的上限+已废除的装备栏数。当你装备或失去一张非武器装备牌后，你废除此装备栏，然后屯军1。",
            "DIY_wangong":"挽弓",
            "DIY_wangong_info":"出牌阶段限一次，你可以将区域内的武器牌依次当做无距离限制且伤害基数为对应武器牌攻击范围的【杀】使用。",
			"DIY_tianze":"天则",
			"DIY_tianze_info":"锁定技，回合技，一名角色失去黑色除延时锦囊牌以外的牌后，你令其进行一次【闪电】判定。",
			"DIY_difa":"地法",
			"DIY_difa_info":"一张判定牌生效前，你可以选择牌堆顶/底的一张牌代替之；若判定牌为红色，你亮出牌堆底的三张牌并可以获得类别不同的牌各一张。",
			"DIY_dujin":"独进",
			"DIY_dujin_info":"锁定技，你对其他角色和其他角色对你使用的目标唯一的即时牌均额外结算一次效果。",
			"DIY_anguo":"安国",
			"DIY_anguo_info":"每回合每项限一次，当一名角色的<span class=firetext>体力值</span>/<span class=yellowtext>手牌数</span>/<span class=thundertext>装备区牌数</span>发生改变时，若其为全场<span class=firetext>体力值最低</span>/<span class=yellowtext>手牌数最少</span>/<span class=thundertext>装备区牌数最少</span>的角色时，你可以令其<span class=firetext>回复1点体力</span>/<span class=yellowtext>摸一张牌</span>/<span class=thundertext>随机使用一张装备牌</span>。",
			"DIY_zhuifeng":"椎锋",
			"DIY_zhuifeng_info":"当你一次性<span class=thundertext>减少</span>/<span class=greentext>失去</span>大于X<span class=thundertext>点</span>/<span class=greentext>张</span><span class=thundertext>体力</span>/<span class=greentext>牌</span>时，你可以视为使用一张【决斗】（X为本回合此技能发动次数+1）。",
			"DIY_chongjian":"冲坚",
			"DIY_chongjian_info":"当你使用一张伤害类牌时，你可以弃置任意张牌并弃置此牌各目标至多等量的牌，若如此做，此牌伤害基数+1。",
			"DIY_quedi":"却敌",
			"DIY_quedi_info":"",
			"DIY_pindi":"品第",
			"DIY_pindi_info":"出牌阶段每名角色限一次，你可以弃置X张牌然后令一名角色摸或弃置X+1张牌（X为此技能本回合发动次数）。",
            "DIY_faen":"法恩",
			"DIY_faen_info":"当一名角色失去最后一张手牌或进入濒死状态时，你可以令其摸一张牌。",
			"DIY_shangyi":"尚义",
			"DIY_shangyi_info":"出牌阶段限一次，你可以与一名有手牌的其他角色互相观看对方的手牌，然后你可以用一种颜色的所有手牌交换其区域内颜色不同的任意张牌。",
			"DIY_xiangyu":"翔羽",
			"DIY_xiangyu_info":"锁定技，你的相邻角色每有以下一项不大于你，你的攻击范围和使用【杀】抵消需使用【闪】的数量+1：1.体力值；2.手牌数；3.场上牌数。",
			"DIY_fuhai":"浮海",
			"DIY_fuhai_info":"出牌阶段每名角色限两次，你可以用一张牌与你的相邻角色拼点，你与拼点牌点数最小的角色交换座次并获得其的拼点牌；若该角色为你，你改为摸X张牌（X为本回合你发动〖浮海〗的次数）。当你的拼点牌亮出后，若你与其拼点牌点数相同，其点数+1或你的点数-1。",
		    "DIY_yinghun":"英魂",
			"DIY_yinghun_info":"法则技，每轮限一次，准备阶段/当你受到伤害时/非首轮次开始时，你可以<u>失去1点体力</u>并令一名其他角色执行一项：<br>①摸一张牌并弃置X张牌；②摸X张牌并弃置一张牌。（X为你的已损体力值）<br>你死亡后，划线句改为：<u>减1点体力上限</u>",
		},
    },
    intro:"<img style=width:238px src=extension/天牢令/天牢令.jpg><div></img><ul><span style='font-family: yuanli'><li>当前版本：v10.20</span><li>👇点击最下方文字可以反馈bug哦</ul></div>",
    author:"Al₂O₃·3H₂Oฅฅ*（2HAlO₂·H₂Oฅฅ*）<br><span style='font-family: yuanli'>扩展交流群：644189851</span><br>特别鸣谢以下人员的帮助（包括但不限于设计、代码、图片、精神……上的支持）<br>花宝、千面猫、啊婊、Rintim、柚子、夜枭、清茶、cyc、雷……",
    diskURL:"",
    forumURL:"",
    version:"10.20",
},files:{"character":["JX_zhouyu.jpg"],"card":["DIY_bailijian.png"],"skill":[]}}})